package api

import (
	. "github.com/rarnu/golcl/lcl/types"
	"time"
	"unsafe"
)


//--------------------------- TForm ---------------------------

func Form_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_Create").Call(obj)
	return ret
}

func Form_Free(obj uintptr) {
	getLazyProc("Form_Free").Call(obj)
}

func Form_InheritedWndProc(obj uintptr, TheMessage *TMessage) {
	getLazyProc("Form_InheritedWndProc").Call(obj, uintptr(unsafe.Pointer(TheMessage)))
}

func Form_EnabledMaximize(obj uintptr, AValue bool) {
	getLazyProc("Form_EnabledMaximize").Call(obj, GoBoolToDBool(AValue))
}

func Form_EnabledMinimize(obj uintptr, AValue bool) {
	getLazyProc("Form_EnabledMinimize").Call(obj, GoBoolToDBool(AValue))
}

func Form_EnabledSystemMenu(obj uintptr, AValue bool) {
	getLazyProc("Form_EnabledSystemMenu").Call(obj, GoBoolToDBool(AValue))
}

func Form_ScaleForCurrentDpi(obj uintptr) {
	getLazyProc("Form_ScaleForCurrentDpi").Call(obj)
}

func Form_ScaleForPPI(obj uintptr, ANewPPI int32) {
	getLazyProc("Form_ScaleForPPI").Call(obj, uintptr(ANewPPI))
}

func Form_ScreenCenter(obj uintptr) {
	getLazyProc("Form_ScreenCenter").Call(obj)
}

func Form_WorkAreaCenter(obj uintptr) {
	getLazyProc("Form_WorkAreaCenter").Call(obj)
}

func Form_Cascade(obj uintptr) {
	getLazyProc("Form_Cascade").Call(obj)
}

func Form_Close(obj uintptr) {
	getLazyProc("Form_Close").Call(obj)
}

func Form_FocusControl(obj uintptr, Control uintptr) {
	getLazyProc("Form_FocusControl").Call(obj, Control)
}

func Form_Hide(obj uintptr) {
	getLazyProc("Form_Hide").Call(obj)
}

func Form_SetFocus(obj uintptr) {
	getLazyProc("Form_SetFocus").Call(obj)
}

func Form_Show(obj uintptr) {
	getLazyProc("Form_Show").Call(obj)
}

func Form_ShowModal(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_ShowModal").Call(obj)
	return int32(ret)
}

func Form_ScrollInView(obj uintptr, AControl uintptr) {
	getLazyProc("Form_ScrollInView").Call(obj, AControl)
}

func Form_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("Form_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func Form_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("Form_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func Form_DisableAlign(obj uintptr) {
	getLazyProc("Form_DisableAlign").Call(obj)
}

func Form_EnableAlign(obj uintptr) {
	getLazyProc("Form_EnableAlign").Call(obj)
}

func Form_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("Form_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func Form_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("Form_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func Form_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("Form_InsertControl").Call(obj, AControl)
}

func Form_Invalidate(obj uintptr) {
	getLazyProc("Form_Invalidate").Call(obj)
}

func Form_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("Form_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func Form_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("Form_RemoveControl").Call(obj, AControl)
}

func Form_Realign(obj uintptr) {
	getLazyProc("Form_Realign").Call(obj)
}

func Form_Repaint(obj uintptr) {
	getLazyProc("Form_Repaint").Call(obj)
}

func Form_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("Form_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func Form_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("Form_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func Form_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Form_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Form_Update(obj uintptr) {
	getLazyProc("Form_Update").Call(obj)
}

func Form_BringToFront(obj uintptr) {
	getLazyProc("Form_BringToFront").Call(obj)
}

func Form_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Form_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Form_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Form_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Form_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Form_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Form_Refresh(obj uintptr) {
	getLazyProc("Form_Refresh").Call(obj)
}

func Form_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Form_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Form_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Form_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Form_SendToBack(obj uintptr) {
	getLazyProc("Form_SendToBack").Call(obj)
}

func Form_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Form_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Form_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetTextLen").Call(obj)
	return int32(ret)
}

func Form_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Form_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Form_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Form_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Form_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Form_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Form_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Form_Assign").Call(obj, Source)
}

func Form_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Form_ClassType").Call(obj)
	return TClass(ret)
}

func Form_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Form_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Form_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_InstanceSize").Call(obj)
	return int32(ret)
}

func Form_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Form_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Form_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Form_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetHashCode").Call(obj)
	return int32(ret)
}

func Form_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Form_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Form_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Form_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Form_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Form_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Form_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Form_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Form_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Form_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Form_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Form_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Form_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Form_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Form_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Form_AnchorClient").Call(obj, uintptr(ASpace))
}

func Form_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Form_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Form_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Form_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Form_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Form_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Form_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Form_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Form_GetAllowDropFiles(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetAllowDropFiles").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetAllowDropFiles(obj uintptr, value bool) {
	getLazyProc("Form_SetAllowDropFiles").Call(obj, GoBoolToDBool(value))
}

func Form_SetOnDropFiles(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnDropFiles").Call(obj, addEventToMap(obj, fn))
}

func Form_GetShowInTaskBar(obj uintptr) TShowInTaskbar {
	ret, _, _ := getLazyProc("Form_GetShowInTaskBar").Call(obj)
	return TShowInTaskbar(ret)
}

func Form_SetShowInTaskBar(obj uintptr, value TShowInTaskbar) {
	getLazyProc("Form_SetShowInTaskBar").Call(obj, uintptr(value))
}

func Form_GetDesignTimePPI(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetDesignTimePPI").Call(obj)
	return int32(ret)
}

func Form_SetDesignTimePPI(obj uintptr, value int32) {
	getLazyProc("Form_SetDesignTimePPI").Call(obj, uintptr(value))
}

func Form_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetAction").Call(obj)
	return ret
}

func Form_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Form_SetAction").Call(obj, value)
}

func Form_GetActiveControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetActiveControl").Call(obj)
	return ret
}

func Form_SetActiveControl(obj uintptr, value uintptr) {
	getLazyProc("Form_SetActiveControl").Call(obj, value)
}

func Form_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Form_GetAlign").Call(obj)
	return TAlign(ret)
}

func Form_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Form_SetAlign").Call(obj, uintptr(value))
}

func Form_GetAlphaBlend(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetAlphaBlend").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetAlphaBlend(obj uintptr, value bool) {
	getLazyProc("Form_SetAlphaBlend").Call(obj, GoBoolToDBool(value))
}

func Form_GetAlphaBlendValue(obj uintptr) uint8 {
	ret, _, _ := getLazyProc("Form_GetAlphaBlendValue").Call(obj)
	return uint8(ret)
}

func Form_SetAlphaBlendValue(obj uintptr, value uint8) {
	getLazyProc("Form_SetAlphaBlendValue").Call(obj, uintptr(value))
}

func Form_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Form_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Form_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Form_SetAnchors").Call(obj, uintptr(value))
}

func Form_GetAutoScroll(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetAutoScroll").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetAutoScroll(obj uintptr, value bool) {
	getLazyProc("Form_SetAutoScroll").Call(obj, GoBoolToDBool(value))
}

func Form_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("Form_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func Form_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Form_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Form_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Form_SetBiDiMode").Call(obj, uintptr(value))
}

func Form_GetBorderIcons(obj uintptr) TBorderIcons {
	ret, _, _ := getLazyProc("Form_GetBorderIcons").Call(obj)
	return TBorderIcons(ret)
}

func Form_SetBorderIcons(obj uintptr, value TBorderIcons) {
	getLazyProc("Form_SetBorderIcons").Call(obj, uintptr(value))
}

func Form_GetBorderStyle(obj uintptr) TFormBorderStyle {
	ret, _, _ := getLazyProc("Form_GetBorderStyle").Call(obj)
	return TFormBorderStyle(ret)
}

func Form_SetBorderStyle(obj uintptr, value TFormBorderStyle) {
	getLazyProc("Form_SetBorderStyle").Call(obj, uintptr(value))
}

func Form_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetBorderWidth").Call(obj)
	return int32(ret)
}

func Form_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("Form_SetBorderWidth").Call(obj, uintptr(value))
}

func Form_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("Form_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func Form_SetCaption(obj uintptr, value string) {
	getLazyProc("Form_SetCaption").Call(obj, GoStrToDStr(value))
}

func Form_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetClientHeight").Call(obj)
	return int32(ret)
}

func Form_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Form_SetClientHeight").Call(obj, uintptr(value))
}

func Form_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetClientWidth").Call(obj)
	return int32(ret)
}

func Form_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Form_SetClientWidth").Call(obj, uintptr(value))
}

func Form_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Form_GetColor").Call(obj)
	return TColor(ret)
}

func Form_SetColor(obj uintptr, value TColor) {
	getLazyProc("Form_SetColor").Call(obj, uintptr(value))
}

func Form_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetConstraints").Call(obj)
	return ret
}

func Form_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Form_SetConstraints").Call(obj, value)
}

func Form_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("Form_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func Form_GetDefaultMonitor(obj uintptr) TDefaultMonitor {
	ret, _, _ := getLazyProc("Form_GetDefaultMonitor").Call(obj)
	return TDefaultMonitor(ret)
}

func Form_SetDefaultMonitor(obj uintptr, value TDefaultMonitor) {
	getLazyProc("Form_SetDefaultMonitor").Call(obj, uintptr(value))
}

func Form_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetDockSite(obj uintptr, value bool) {
	getLazyProc("Form_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func Form_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Form_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Form_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Form_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Form_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Form_SetDragKind").Call(obj, uintptr(value))
}

func Form_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Form_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Form_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Form_SetDragMode").Call(obj, uintptr(value))
}

func Form_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Form_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Form_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Form_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Form_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetFont").Call(obj)
	return ret
}

func Form_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Form_SetFont").Call(obj, value)
}

func Form_GetFormStyle(obj uintptr) TFormStyle {
	ret, _, _ := getLazyProc("Form_GetFormStyle").Call(obj)
	return TFormStyle(ret)
}

func Form_SetFormStyle(obj uintptr, value TFormStyle) {
	getLazyProc("Form_SetFormStyle").Call(obj, uintptr(value))
}

func Form_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetHeight").Call(obj)
	return int32(ret)
}

func Form_SetHeight(obj uintptr, value int32) {
	getLazyProc("Form_SetHeight").Call(obj, uintptr(value))
}

func Form_GetHorzScrollBar(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetHorzScrollBar").Call(obj)
	return ret
}

func Form_SetHorzScrollBar(obj uintptr, value uintptr) {
	getLazyProc("Form_SetHorzScrollBar").Call(obj, value)
}

func Form_GetIcon(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetIcon").Call(obj)
	return ret
}

func Form_SetIcon(obj uintptr, value uintptr) {
	getLazyProc("Form_SetIcon").Call(obj, value)
}

func Form_GetKeyPreview(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetKeyPreview").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetKeyPreview(obj uintptr, value bool) {
	getLazyProc("Form_SetKeyPreview").Call(obj, GoBoolToDBool(value))
}

func Form_GetMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetMenu").Call(obj)
	return ret
}

func Form_SetMenu(obj uintptr, value uintptr) {
	getLazyProc("Form_SetMenu").Call(obj, value)
}

func Form_GetPixelsPerInch(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetPixelsPerInch").Call(obj)
	return int32(ret)
}

func Form_SetPixelsPerInch(obj uintptr, value int32) {
	getLazyProc("Form_SetPixelsPerInch").Call(obj, uintptr(value))
}

func Form_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetPopupMenu").Call(obj)
	return ret
}

func Form_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Form_SetPopupMenu").Call(obj, value)
}

func Form_GetPosition(obj uintptr) TPosition {
	ret, _, _ := getLazyProc("Form_GetPosition").Call(obj)
	return TPosition(ret)
}

func Form_SetPosition(obj uintptr, value TPosition) {
	getLazyProc("Form_SetPosition").Call(obj, uintptr(value))
}

func Form_GetScaled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetScaled").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetScaled(obj uintptr, value bool) {
	getLazyProc("Form_SetScaled").Call(obj, GoBoolToDBool(value))
}

func Form_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Form_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Form_GetVertScrollBar(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetVertScrollBar").Call(obj)
	return ret
}

func Form_SetVertScrollBar(obj uintptr, value uintptr) {
	getLazyProc("Form_SetVertScrollBar").Call(obj, value)
}

func Form_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetVisible(obj uintptr, value bool) {
	getLazyProc("Form_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Form_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetWidth").Call(obj)
	return int32(ret)
}

func Form_SetWidth(obj uintptr, value int32) {
	getLazyProc("Form_SetWidth").Call(obj, uintptr(value))
}

func Form_GetWindowState(obj uintptr) TWindowState {
	ret, _, _ := getLazyProc("Form_GetWindowState").Call(obj)
	return TWindowState(ret)
}

func Form_SetWindowState(obj uintptr, value TWindowState) {
	getLazyProc("Form_SetWindowState").Call(obj, uintptr(value))
}

func Form_SetOnActivate(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnActivate").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnAlignPosition(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnAlignPosition").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnCloseQuery(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnCloseQuery").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnConstrainedResize(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnConstrainedResize").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnDestroy(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnDestroy").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnDeactivate(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnDeactivate").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnHide(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnHide").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnHelp(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnHelp").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseWheel(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseWheel").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnPaint(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnPaint").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnShortCut(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnShortCut").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func Form_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("Form_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func Form_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetCanvas").Call(obj)
	return ret
}

func Form_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("Form_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func Form_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("Form_SetModalResult").Call(obj, uintptr(value))
}

func Form_GetMonitor(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetMonitor").Call(obj)
	return ret
}

func Form_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetLeft").Call(obj)
	return int32(ret)
}

func Form_SetLeft(obj uintptr, value int32) {
	getLazyProc("Form_SetLeft").Call(obj, uintptr(value))
}

func Form_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetTop").Call(obj)
	return int32(ret)
}

func Form_SetTop(obj uintptr, value int32) {
	getLazyProc("Form_SetTop").Call(obj, uintptr(value))
}

func Form_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetDockClientCount").Call(obj)
	return int32(ret)
}

func Form_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func Form_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetBrush").Call(obj)
	return ret
}

func Form_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetControlCount").Call(obj)
	return int32(ret)
}

func Form_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Form_GetHandle").Call(obj)
	return HWND(ret)
}

func Form_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Form_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Form_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Form_GetParentWindow").Call(obj)
	return HWND(ret)
}

func Form_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("Form_SetParentWindow").Call(obj, uintptr(value))
}

func Form_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("Form_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func Form_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("Form_SetTabOrder").Call(obj, uintptr(value))
}

func Form_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_SetTabStop(obj uintptr, value bool) {
	getLazyProc("Form_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func Form_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Form_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Form_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Form_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Form_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Form_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Form_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Form_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Form_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Form_GetControlState").Call(obj)
	return TControlState(ret)
}

func Form_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Form_SetControlState").Call(obj, uintptr(value))
}

func Form_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Form_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Form_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Form_SetControlStyle").Call(obj, uintptr(value))
}

func Form_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Form_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Form_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetParent").Call(obj)
	return ret
}

func Form_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Form_SetParent").Call(obj, value)
}

func Form_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Form_GetCursor").Call(obj)
	return TCursor(ret)
}

func Form_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Form_SetCursor").Call(obj, uintptr(value))
}

func Form_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Form_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Form_SetHint(obj uintptr, value string) {
	getLazyProc("Form_SetHint").Call(obj, GoStrToDStr(value))
}

func Form_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetComponentCount").Call(obj)
	return int32(ret)
}

func Form_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Form_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Form_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Form_SetComponentIndex").Call(obj, uintptr(value))
}

func Form_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetOwner").Call(obj)
	return ret
}

func Form_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Form_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Form_SetName(obj uintptr, value string) {
	getLazyProc("Form_SetName").Call(obj, GoStrToDStr(value))
}

func Form_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Form_GetTag").Call(obj)
	return int(ret)
}

func Form_SetTag(obj uintptr, value int) {
	getLazyProc("Form_SetTag").Call(obj, uintptr(value))
}

func Form_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetAnchorSideLeft").Call(obj)
	return ret
}

func Form_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Form_SetAnchorSideLeft").Call(obj, value)
}

func Form_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetAnchorSideTop").Call(obj)
	return ret
}

func Form_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Form_SetAnchorSideTop").Call(obj, value)
}

func Form_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetAnchorSideRight").Call(obj)
	return ret
}

func Form_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Form_SetAnchorSideRight").Call(obj, value)
}

func Form_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetAnchorSideBottom").Call(obj)
	return ret
}

func Form_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Form_SetAnchorSideBottom").Call(obj, value)
}

func Form_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetChildSizing").Call(obj)
	return ret
}

func Form_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("Form_SetChildSizing").Call(obj, value)
}

func Form_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Form_GetBorderSpacing").Call(obj)
	return ret
}

func Form_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Form_SetBorderSpacing").Call(obj, value)
}

func Form_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Form_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func Form_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Form_GetControls").Call(obj, uintptr(Index))
	return ret
}

func Form_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Form_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Form_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Form_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Form_StaticClassType() TClass {
	r, _, _ := getLazyProc("Form_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TButton ---------------------------

func Button_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_Create").Call(obj)
	return ret
}

func Button_Free(obj uintptr) {
	getLazyProc("Button_Free").Call(obj)
}

func Button_Click(obj uintptr) {
	getLazyProc("Button_Click").Call(obj)
}

func Button_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("Button_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func Button_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("Button_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func Button_DisableAlign(obj uintptr) {
	getLazyProc("Button_DisableAlign").Call(obj)
}

func Button_EnableAlign(obj uintptr) {
	getLazyProc("Button_EnableAlign").Call(obj)
}

func Button_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("Button_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func Button_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("Button_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func Button_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("Button_InsertControl").Call(obj, AControl)
}

func Button_Invalidate(obj uintptr) {
	getLazyProc("Button_Invalidate").Call(obj)
}

func Button_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("Button_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func Button_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("Button_RemoveControl").Call(obj, AControl)
}

func Button_Realign(obj uintptr) {
	getLazyProc("Button_Realign").Call(obj)
}

func Button_Repaint(obj uintptr) {
	getLazyProc("Button_Repaint").Call(obj)
}

func Button_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("Button_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func Button_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("Button_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func Button_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Button_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Button_SetFocus(obj uintptr) {
	getLazyProc("Button_SetFocus").Call(obj)
}

func Button_Update(obj uintptr) {
	getLazyProc("Button_Update").Call(obj)
}

func Button_BringToFront(obj uintptr) {
	getLazyProc("Button_BringToFront").Call(obj)
}

func Button_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Button_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Button_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Button_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Button_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_Hide(obj uintptr) {
	getLazyProc("Button_Hide").Call(obj)
}

func Button_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Button_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Button_Refresh(obj uintptr) {
	getLazyProc("Button_Refresh").Call(obj)
}

func Button_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Button_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Button_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Button_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Button_SendToBack(obj uintptr) {
	getLazyProc("Button_SendToBack").Call(obj)
}

func Button_Show(obj uintptr) {
	getLazyProc("Button_Show").Call(obj)
}

func Button_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Button_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Button_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetTextLen").Call(obj)
	return int32(ret)
}

func Button_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Button_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Button_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Button_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Button_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Button_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Button_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Button_Assign").Call(obj, Source)
}

func Button_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Button_ClassType").Call(obj)
	return TClass(ret)
}

func Button_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Button_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Button_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_InstanceSize").Call(obj)
	return int32(ret)
}

func Button_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Button_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Button_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Button_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetHashCode").Call(obj)
	return int32(ret)
}

func Button_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Button_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Button_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Button_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Button_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Button_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Button_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Button_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Button_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Button_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Button_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Button_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Button_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Button_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Button_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Button_AnchorClient").Call(obj, uintptr(ASpace))
}

func Button_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Button_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Button_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Button_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Button_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Button_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Button_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Button_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Button_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetAction").Call(obj)
	return ret
}

func Button_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Button_SetAction").Call(obj, value)
}

func Button_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Button_GetAlign").Call(obj)
	return TAlign(ret)
}

func Button_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Button_SetAlign").Call(obj, uintptr(value))
}

func Button_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Button_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Button_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Button_SetAnchors").Call(obj, uintptr(value))
}

func Button_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Button_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Button_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Button_SetBiDiMode").Call(obj, uintptr(value))
}

func Button_GetCancel(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetCancel").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetCancel(obj uintptr, value bool) {
	getLazyProc("Button_SetCancel").Call(obj, GoBoolToDBool(value))
}

func Button_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("Button_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func Button_SetCaption(obj uintptr, value string) {
	getLazyProc("Button_SetCaption").Call(obj, GoStrToDStr(value))
}

func Button_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetConstraints").Call(obj)
	return ret
}

func Button_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Button_SetConstraints").Call(obj, value)
}

func Button_GetDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetDefault(obj uintptr, value bool) {
	getLazyProc("Button_SetDefault").Call(obj, GoBoolToDBool(value))
}

func Button_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Button_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Button_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Button_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Button_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Button_SetDragCursor").Call(obj, uintptr(value))
}

func Button_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Button_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Button_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Button_SetDragKind").Call(obj, uintptr(value))
}

func Button_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Button_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Button_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Button_SetDragMode").Call(obj, uintptr(value))
}

func Button_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Button_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Button_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetFont").Call(obj)
	return ret
}

func Button_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Button_SetFont").Call(obj, value)
}

func Button_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("Button_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func Button_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("Button_SetModalResult").Call(obj, uintptr(value))
}

func Button_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Button_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Button_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Button_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Button_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Button_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Button_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetPopupMenu").Call(obj)
	return ret
}

func Button_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Button_SetPopupMenu").Call(obj, value)
}

func Button_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Button_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Button_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("Button_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func Button_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("Button_SetTabOrder").Call(obj, uintptr(value))
}

func Button_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetTabStop(obj uintptr, value bool) {
	getLazyProc("Button_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func Button_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetVisible(obj uintptr, value bool) {
	getLazyProc("Button_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Button_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Button_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Button_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Button_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetDockClientCount").Call(obj)
	return int32(ret)
}

func Button_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetDockSite(obj uintptr, value bool) {
	getLazyProc("Button_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func Button_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func Button_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetBrush").Call(obj)
	return ret
}

func Button_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetControlCount").Call(obj)
	return int32(ret)
}

func Button_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Button_GetHandle").Call(obj)
	return HWND(ret)
}

func Button_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Button_GetParentWindow").Call(obj)
	return HWND(ret)
}

func Button_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("Button_SetParentWindow").Call(obj, uintptr(value))
}

func Button_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("Button_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func Button_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Button_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Button_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Button_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Button_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetClientHeight").Call(obj)
	return int32(ret)
}

func Button_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Button_SetClientHeight").Call(obj, uintptr(value))
}

func Button_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Button_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Button_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Button_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Button_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetClientWidth").Call(obj)
	return int32(ret)
}

func Button_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Button_SetClientWidth").Call(obj, uintptr(value))
}

func Button_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Button_GetControlState").Call(obj)
	return TControlState(ret)
}

func Button_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Button_SetControlState").Call(obj, uintptr(value))
}

func Button_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Button_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Button_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Button_SetControlStyle").Call(obj, uintptr(value))
}

func Button_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Button_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Button_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetParent").Call(obj)
	return ret
}

func Button_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Button_SetParent").Call(obj, value)
}

func Button_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetLeft").Call(obj)
	return int32(ret)
}

func Button_SetLeft(obj uintptr, value int32) {
	getLazyProc("Button_SetLeft").Call(obj, uintptr(value))
}

func Button_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetTop").Call(obj)
	return int32(ret)
}

func Button_SetTop(obj uintptr, value int32) {
	getLazyProc("Button_SetTop").Call(obj, uintptr(value))
}

func Button_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetWidth").Call(obj)
	return int32(ret)
}

func Button_SetWidth(obj uintptr, value int32) {
	getLazyProc("Button_SetWidth").Call(obj, uintptr(value))
}

func Button_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetHeight").Call(obj)
	return int32(ret)
}

func Button_SetHeight(obj uintptr, value int32) {
	getLazyProc("Button_SetHeight").Call(obj, uintptr(value))
}

func Button_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Button_GetCursor").Call(obj)
	return TCursor(ret)
}

func Button_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Button_SetCursor").Call(obj, uintptr(value))
}

func Button_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Button_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Button_SetHint(obj uintptr, value string) {
	getLazyProc("Button_SetHint").Call(obj, GoStrToDStr(value))
}

func Button_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetComponentCount").Call(obj)
	return int32(ret)
}

func Button_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Button_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Button_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Button_SetComponentIndex").Call(obj, uintptr(value))
}

func Button_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetOwner").Call(obj)
	return ret
}

func Button_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Button_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Button_SetName(obj uintptr, value string) {
	getLazyProc("Button_SetName").Call(obj, GoStrToDStr(value))
}

func Button_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Button_GetTag").Call(obj)
	return int(ret)
}

func Button_SetTag(obj uintptr, value int) {
	getLazyProc("Button_SetTag").Call(obj, uintptr(value))
}

func Button_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetAnchorSideLeft").Call(obj)
	return ret
}

func Button_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Button_SetAnchorSideLeft").Call(obj, value)
}

func Button_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetAnchorSideTop").Call(obj)
	return ret
}

func Button_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Button_SetAnchorSideTop").Call(obj, value)
}

func Button_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetAnchorSideRight").Call(obj)
	return ret
}

func Button_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Button_SetAnchorSideRight").Call(obj, value)
}

func Button_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetAnchorSideBottom").Call(obj)
	return ret
}

func Button_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Button_SetAnchorSideBottom").Call(obj, value)
}

func Button_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetChildSizing").Call(obj)
	return ret
}

func Button_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("Button_SetChildSizing").Call(obj, value)
}

func Button_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Button_GetBorderSpacing").Call(obj)
	return ret
}

func Button_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Button_SetBorderSpacing").Call(obj, value)
}

func Button_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Button_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func Button_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Button_GetControls").Call(obj, uintptr(Index))
	return ret
}

func Button_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Button_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Button_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Button_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Button_StaticClassType() TClass {
	r, _, _ := getLazyProc("Button_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TEdit ---------------------------

func Edit_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_Create").Call(obj)
	return ret
}

func Edit_Free(obj uintptr) {
	getLazyProc("Edit_Free").Call(obj)
}

func Edit_Clear(obj uintptr) {
	getLazyProc("Edit_Clear").Call(obj)
}

func Edit_ClearSelection(obj uintptr) {
	getLazyProc("Edit_ClearSelection").Call(obj)
}

func Edit_CopyToClipboard(obj uintptr) {
	getLazyProc("Edit_CopyToClipboard").Call(obj)
}

func Edit_CutToClipboard(obj uintptr) {
	getLazyProc("Edit_CutToClipboard").Call(obj)
}

func Edit_PasteFromClipboard(obj uintptr) {
	getLazyProc("Edit_PasteFromClipboard").Call(obj)
}

func Edit_Undo(obj uintptr) {
	getLazyProc("Edit_Undo").Call(obj)
}

func Edit_SelectAll(obj uintptr) {
	getLazyProc("Edit_SelectAll").Call(obj)
}

func Edit_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("Edit_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func Edit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("Edit_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func Edit_DisableAlign(obj uintptr) {
	getLazyProc("Edit_DisableAlign").Call(obj)
}

func Edit_EnableAlign(obj uintptr) {
	getLazyProc("Edit_EnableAlign").Call(obj)
}

func Edit_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("Edit_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func Edit_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("Edit_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func Edit_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("Edit_InsertControl").Call(obj, AControl)
}

func Edit_Invalidate(obj uintptr) {
	getLazyProc("Edit_Invalidate").Call(obj)
}

func Edit_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("Edit_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func Edit_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("Edit_RemoveControl").Call(obj, AControl)
}

func Edit_Realign(obj uintptr) {
	getLazyProc("Edit_Realign").Call(obj)
}

func Edit_Repaint(obj uintptr) {
	getLazyProc("Edit_Repaint").Call(obj)
}

func Edit_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("Edit_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func Edit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("Edit_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func Edit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Edit_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Edit_SetFocus(obj uintptr) {
	getLazyProc("Edit_SetFocus").Call(obj)
}

func Edit_Update(obj uintptr) {
	getLazyProc("Edit_Update").Call(obj)
}

func Edit_BringToFront(obj uintptr) {
	getLazyProc("Edit_BringToFront").Call(obj)
}

func Edit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Edit_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Edit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Edit_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Edit_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_Hide(obj uintptr) {
	getLazyProc("Edit_Hide").Call(obj)
}

func Edit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Edit_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Edit_Refresh(obj uintptr) {
	getLazyProc("Edit_Refresh").Call(obj)
}

func Edit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Edit_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Edit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Edit_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Edit_SendToBack(obj uintptr) {
	getLazyProc("Edit_SendToBack").Call(obj)
}

func Edit_Show(obj uintptr) {
	getLazyProc("Edit_Show").Call(obj)
}

func Edit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Edit_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Edit_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetTextLen").Call(obj)
	return int32(ret)
}

func Edit_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Edit_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Edit_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Edit_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Edit_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Edit_Assign").Call(obj, Source)
}

func Edit_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Edit_ClassType").Call(obj)
	return TClass(ret)
}

func Edit_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_InstanceSize").Call(obj)
	return int32(ret)
}

func Edit_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Edit_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Edit_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Edit_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetHashCode").Call(obj)
	return int32(ret)
}

func Edit_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Edit_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Edit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Edit_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Edit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Edit_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Edit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Edit_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Edit_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Edit_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Edit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Edit_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Edit_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Edit_AnchorClient").Call(obj, uintptr(ASpace))
}

func Edit_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Edit_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Edit_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Edit_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Edit_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Edit_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Edit_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Edit_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Edit_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Edit_GetAlign").Call(obj)
	return TAlign(ret)
}

func Edit_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Edit_SetAlign").Call(obj, uintptr(value))
}

func Edit_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("Edit_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func Edit_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("Edit_SetAlignment").Call(obj, uintptr(value))
}

func Edit_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Edit_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Edit_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Edit_SetAnchors").Call(obj, uintptr(value))
}

func Edit_GetAutoSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetAutoSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetAutoSelect(obj uintptr, value bool) {
	getLazyProc("Edit_SetAutoSelect").Call(obj, GoBoolToDBool(value))
}

func Edit_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("Edit_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func Edit_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Edit_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Edit_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Edit_SetBiDiMode").Call(obj, uintptr(value))
}

func Edit_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("Edit_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func Edit_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("Edit_SetBorderStyle").Call(obj, uintptr(value))
}

func Edit_GetCharCase(obj uintptr) TEditCharCase {
	ret, _, _ := getLazyProc("Edit_GetCharCase").Call(obj)
	return TEditCharCase(ret)
}

func Edit_SetCharCase(obj uintptr, value TEditCharCase) {
	getLazyProc("Edit_SetCharCase").Call(obj, uintptr(value))
}

func Edit_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Edit_GetColor").Call(obj)
	return TColor(ret)
}

func Edit_SetColor(obj uintptr, value TColor) {
	getLazyProc("Edit_SetColor").Call(obj, uintptr(value))
}

func Edit_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetConstraints").Call(obj)
	return ret
}

func Edit_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetConstraints").Call(obj, value)
}

func Edit_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Edit_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Edit_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Edit_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Edit_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Edit_SetDragCursor").Call(obj, uintptr(value))
}

func Edit_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Edit_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Edit_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Edit_SetDragKind").Call(obj, uintptr(value))
}

func Edit_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Edit_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Edit_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Edit_SetDragMode").Call(obj, uintptr(value))
}

func Edit_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Edit_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Edit_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetFont").Call(obj)
	return ret
}

func Edit_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetFont").Call(obj, value)
}

func Edit_GetHideSelection(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetHideSelection").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetHideSelection(obj uintptr, value bool) {
	getLazyProc("Edit_SetHideSelection").Call(obj, GoBoolToDBool(value))
}

func Edit_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetMaxLength").Call(obj)
	return int32(ret)
}

func Edit_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("Edit_SetMaxLength").Call(obj, uintptr(value))
}

func Edit_GetNumbersOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetNumbersOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetNumbersOnly(obj uintptr, value bool) {
	getLazyProc("Edit_SetNumbersOnly").Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetParentColor(obj uintptr, value bool) {
	getLazyProc("Edit_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Edit_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Edit_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Edit_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Edit_GetPasswordChar(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("Edit_GetPasswordChar").Call(obj)
	return uint16(ret)
}

func Edit_SetPasswordChar(obj uintptr, value uint16) {
	getLazyProc("Edit_SetPasswordChar").Call(obj, uintptr(value))
}

func Edit_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetPopupMenu").Call(obj)
	return ret
}

func Edit_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetPopupMenu").Call(obj, value)
}

func Edit_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("Edit_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func Edit_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Edit_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Edit_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("Edit_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func Edit_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("Edit_SetTabOrder").Call(obj, uintptr(value))
}

func Edit_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetTabStop(obj uintptr, value bool) {
	getLazyProc("Edit_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func Edit_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_SetText(obj uintptr, value string) {
	getLazyProc("Edit_SetText").Call(obj, GoStrToDStr(value))
}

func Edit_GetTextHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_GetTextHint").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_SetTextHint(obj uintptr, value string) {
	getLazyProc("Edit_SetTextHint").Call(obj, GoStrToDStr(value))
}

func Edit_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetVisible(obj uintptr, value bool) {
	getLazyProc("Edit_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Edit_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Edit_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Edit_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Edit_GetCanUndo(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetCanUndo").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetModified(obj uintptr, value bool) {
	getLazyProc("Edit_SetModified").Call(obj, GoBoolToDBool(value))
}

func Edit_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetSelLength").Call(obj)
	return int32(ret)
}

func Edit_SetSelLength(obj uintptr, value int32) {
	getLazyProc("Edit_SetSelLength").Call(obj, uintptr(value))
}

func Edit_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetSelStart").Call(obj)
	return int32(ret)
}

func Edit_SetSelStart(obj uintptr, value int32) {
	getLazyProc("Edit_SetSelStart").Call(obj, uintptr(value))
}

func Edit_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_SetSelText(obj uintptr, value string) {
	getLazyProc("Edit_SetSelText").Call(obj, GoStrToDStr(value))
}

func Edit_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetDockClientCount").Call(obj)
	return int32(ret)
}

func Edit_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetDockSite(obj uintptr, value bool) {
	getLazyProc("Edit_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func Edit_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func Edit_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetBrush").Call(obj)
	return ret
}

func Edit_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetControlCount").Call(obj)
	return int32(ret)
}

func Edit_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Edit_GetHandle").Call(obj)
	return HWND(ret)
}

func Edit_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Edit_GetParentWindow").Call(obj)
	return HWND(ret)
}

func Edit_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("Edit_SetParentWindow").Call(obj, uintptr(value))
}

func Edit_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("Edit_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func Edit_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetAction").Call(obj)
	return ret
}

func Edit_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetAction").Call(obj, value)
}

func Edit_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Edit_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Edit_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Edit_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Edit_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetClientHeight").Call(obj)
	return int32(ret)
}

func Edit_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Edit_SetClientHeight").Call(obj, uintptr(value))
}

func Edit_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Edit_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Edit_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Edit_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Edit_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetClientWidth").Call(obj)
	return int32(ret)
}

func Edit_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Edit_SetClientWidth").Call(obj, uintptr(value))
}

func Edit_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Edit_GetControlState").Call(obj)
	return TControlState(ret)
}

func Edit_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Edit_SetControlState").Call(obj, uintptr(value))
}

func Edit_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Edit_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Edit_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Edit_SetControlStyle").Call(obj, uintptr(value))
}

func Edit_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Edit_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Edit_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetParent").Call(obj)
	return ret
}

func Edit_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetParent").Call(obj, value)
}

func Edit_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetLeft").Call(obj)
	return int32(ret)
}

func Edit_SetLeft(obj uintptr, value int32) {
	getLazyProc("Edit_SetLeft").Call(obj, uintptr(value))
}

func Edit_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetTop").Call(obj)
	return int32(ret)
}

func Edit_SetTop(obj uintptr, value int32) {
	getLazyProc("Edit_SetTop").Call(obj, uintptr(value))
}

func Edit_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetWidth").Call(obj)
	return int32(ret)
}

func Edit_SetWidth(obj uintptr, value int32) {
	getLazyProc("Edit_SetWidth").Call(obj, uintptr(value))
}

func Edit_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetHeight").Call(obj)
	return int32(ret)
}

func Edit_SetHeight(obj uintptr, value int32) {
	getLazyProc("Edit_SetHeight").Call(obj, uintptr(value))
}

func Edit_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Edit_GetCursor").Call(obj)
	return TCursor(ret)
}

func Edit_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Edit_SetCursor").Call(obj, uintptr(value))
}

func Edit_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_SetHint(obj uintptr, value string) {
	getLazyProc("Edit_SetHint").Call(obj, GoStrToDStr(value))
}

func Edit_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetComponentCount").Call(obj)
	return int32(ret)
}

func Edit_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Edit_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Edit_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Edit_SetComponentIndex").Call(obj, uintptr(value))
}

func Edit_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetOwner").Call(obj)
	return ret
}

func Edit_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Edit_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Edit_SetName(obj uintptr, value string) {
	getLazyProc("Edit_SetName").Call(obj, GoStrToDStr(value))
}

func Edit_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Edit_GetTag").Call(obj)
	return int(ret)
}

func Edit_SetTag(obj uintptr, value int) {
	getLazyProc("Edit_SetTag").Call(obj, uintptr(value))
}

func Edit_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetAnchorSideLeft").Call(obj)
	return ret
}

func Edit_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetAnchorSideLeft").Call(obj, value)
}

func Edit_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetAnchorSideTop").Call(obj)
	return ret
}

func Edit_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetAnchorSideTop").Call(obj, value)
}

func Edit_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetAnchorSideRight").Call(obj)
	return ret
}

func Edit_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetAnchorSideRight").Call(obj, value)
}

func Edit_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetAnchorSideBottom").Call(obj)
	return ret
}

func Edit_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetAnchorSideBottom").Call(obj, value)
}

func Edit_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetChildSizing").Call(obj)
	return ret
}

func Edit_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetChildSizing").Call(obj, value)
}

func Edit_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Edit_GetBorderSpacing").Call(obj)
	return ret
}

func Edit_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Edit_SetBorderSpacing").Call(obj, value)
}

func Edit_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Edit_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func Edit_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Edit_GetControls").Call(obj, uintptr(Index))
	return ret
}

func Edit_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Edit_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Edit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Edit_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Edit_StaticClassType() TClass {
	r, _, _ := getLazyProc("Edit_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMainMenu ---------------------------

func MainMenu_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MainMenu_Create").Call(obj)
	return ret
}

func MainMenu_Free(obj uintptr) {
	getLazyProc("MainMenu_Free").Call(obj)
}

func MainMenu_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("MainMenu_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func MainMenu_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("MainMenu_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func MainMenu_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("MainMenu_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func MainMenu_Assign(obj uintptr, Source uintptr) {
	getLazyProc("MainMenu_Assign").Call(obj, Source)
}

func MainMenu_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("MainMenu_ClassType").Call(obj)
	return TClass(ret)
}

func MainMenu_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("MainMenu_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func MainMenu_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MainMenu_InstanceSize").Call(obj)
	return int32(ret)
}

func MainMenu_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("MainMenu_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func MainMenu_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("MainMenu_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func MainMenu_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MainMenu_GetHashCode").Call(obj)
	return int32(ret)
}

func MainMenu_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("MainMenu_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func MainMenu_GetImagesWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MainMenu_GetImagesWidth").Call(obj)
	return int32(ret)
}

func MainMenu_SetImagesWidth(obj uintptr, value int32) {
	getLazyProc("MainMenu_SetImagesWidth").Call(obj, uintptr(value))
}

func MainMenu_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("MainMenu_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func MainMenu_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("MainMenu_SetBiDiMode").Call(obj, uintptr(value))
}

func MainMenu_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MainMenu_GetImages").Call(obj)
	return ret
}

func MainMenu_SetImages(obj uintptr, value uintptr) {
	getLazyProc("MainMenu_SetImages").Call(obj, value)
}

func MainMenu_GetOwnerDraw(obj uintptr) bool {
	ret, _, _ := getLazyProc("MainMenu_GetOwnerDraw").Call(obj)
	return DBoolToGoBool(ret)
}

func MainMenu_SetOwnerDraw(obj uintptr, value bool) {
	getLazyProc("MainMenu_SetOwnerDraw").Call(obj, GoBoolToDBool(value))
}

func MainMenu_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("MainMenu_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func MainMenu_GetHandle(obj uintptr) HMENU {
	ret, _, _ := getLazyProc("MainMenu_GetHandle").Call(obj)
	return HMENU(ret)
}

func MainMenu_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MainMenu_GetItems").Call(obj)
	return ret
}

func MainMenu_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MainMenu_GetComponentCount").Call(obj)
	return int32(ret)
}

func MainMenu_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MainMenu_GetComponentIndex").Call(obj)
	return int32(ret)
}

func MainMenu_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("MainMenu_SetComponentIndex").Call(obj, uintptr(value))
}

func MainMenu_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MainMenu_GetOwner").Call(obj)
	return ret
}

func MainMenu_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("MainMenu_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func MainMenu_SetName(obj uintptr, value string) {
	getLazyProc("MainMenu_SetName").Call(obj, GoStrToDStr(value))
}

func MainMenu_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("MainMenu_GetTag").Call(obj)
	return int(ret)
}

func MainMenu_SetTag(obj uintptr, value int) {
	getLazyProc("MainMenu_SetTag").Call(obj, uintptr(value))
}

func MainMenu_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("MainMenu_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func MainMenu_StaticClassType() TClass {
	r, _, _ := getLazyProc("MainMenu_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPopupMenu ---------------------------

func PopupMenu_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PopupMenu_Create").Call(obj)
	return ret
}

func PopupMenu_Free(obj uintptr) {
	getLazyProc("PopupMenu_Free").Call(obj)
}

func PopupMenu_CloseMenu(obj uintptr) {
	getLazyProc("PopupMenu_CloseMenu").Call(obj)
}

func PopupMenu_Popup(obj uintptr, X int32, Y int32) {
	getLazyProc("PopupMenu_Popup").Call(obj, uintptr(X), uintptr(Y))
}

func PopupMenu_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("PopupMenu_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func PopupMenu_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("PopupMenu_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func PopupMenu_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("PopupMenu_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func PopupMenu_Assign(obj uintptr, Source uintptr) {
	getLazyProc("PopupMenu_Assign").Call(obj, Source)
}

func PopupMenu_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("PopupMenu_ClassType").Call(obj)
	return TClass(ret)
}

func PopupMenu_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("PopupMenu_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func PopupMenu_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PopupMenu_InstanceSize").Call(obj)
	return int32(ret)
}

func PopupMenu_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("PopupMenu_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func PopupMenu_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("PopupMenu_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func PopupMenu_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PopupMenu_GetHashCode").Call(obj)
	return int32(ret)
}

func PopupMenu_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("PopupMenu_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func PopupMenu_GetImagesWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PopupMenu_GetImagesWidth").Call(obj)
	return int32(ret)
}

func PopupMenu_SetImagesWidth(obj uintptr, value int32) {
	getLazyProc("PopupMenu_SetImagesWidth").Call(obj, uintptr(value))
}

func PopupMenu_GetPopupComponent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PopupMenu_GetPopupComponent").Call(obj)
	return ret
}

func PopupMenu_SetPopupComponent(obj uintptr, value uintptr) {
	getLazyProc("PopupMenu_SetPopupComponent").Call(obj, value)
}

func PopupMenu_GetPopupPoint(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("PopupMenu_GetPopupPoint").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PopupMenu_GetAlignment(obj uintptr) TPopupAlignment {
	ret, _, _ := getLazyProc("PopupMenu_GetAlignment").Call(obj)
	return TPopupAlignment(ret)
}

func PopupMenu_SetAlignment(obj uintptr, value TPopupAlignment) {
	getLazyProc("PopupMenu_SetAlignment").Call(obj, uintptr(value))
}

func PopupMenu_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("PopupMenu_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func PopupMenu_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("PopupMenu_SetBiDiMode").Call(obj, uintptr(value))
}

func PopupMenu_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PopupMenu_GetImages").Call(obj)
	return ret
}

func PopupMenu_SetImages(obj uintptr, value uintptr) {
	getLazyProc("PopupMenu_SetImages").Call(obj, value)
}

func PopupMenu_GetOwnerDraw(obj uintptr) bool {
	ret, _, _ := getLazyProc("PopupMenu_GetOwnerDraw").Call(obj)
	return DBoolToGoBool(ret)
}

func PopupMenu_SetOwnerDraw(obj uintptr, value bool) {
	getLazyProc("PopupMenu_SetOwnerDraw").Call(obj, GoBoolToDBool(value))
}

func PopupMenu_SetOnPopup(obj uintptr, fn interface{}) {
	getLazyProc("PopupMenu_SetOnPopup").Call(obj, addEventToMap(obj, fn))
}

func PopupMenu_GetHandle(obj uintptr) HMENU {
	ret, _, _ := getLazyProc("PopupMenu_GetHandle").Call(obj)
	return HMENU(ret)
}

func PopupMenu_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PopupMenu_GetItems").Call(obj)
	return ret
}

func PopupMenu_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PopupMenu_GetComponentCount").Call(obj)
	return int32(ret)
}

func PopupMenu_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PopupMenu_GetComponentIndex").Call(obj)
	return int32(ret)
}

func PopupMenu_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("PopupMenu_SetComponentIndex").Call(obj, uintptr(value))
}

func PopupMenu_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PopupMenu_GetOwner").Call(obj)
	return ret
}

func PopupMenu_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("PopupMenu_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func PopupMenu_SetName(obj uintptr, value string) {
	getLazyProc("PopupMenu_SetName").Call(obj, GoStrToDStr(value))
}

func PopupMenu_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("PopupMenu_GetTag").Call(obj)
	return int(ret)
}

func PopupMenu_SetTag(obj uintptr, value int) {
	getLazyProc("PopupMenu_SetTag").Call(obj, uintptr(value))
}

func PopupMenu_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("PopupMenu_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func PopupMenu_StaticClassType() TClass {
	r, _, _ := getLazyProc("PopupMenu_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMemo ---------------------------

func Memo_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_Create").Call(obj)
	return ret
}

func Memo_Free(obj uintptr) {
	getLazyProc("Memo_Free").Call(obj)
}

func Memo_Append(obj uintptr, Value string) {
	getLazyProc("Memo_Append").Call(obj, GoStrToDStr(Value))
}

func Memo_Clear(obj uintptr) {
	getLazyProc("Memo_Clear").Call(obj)
}

func Memo_ClearSelection(obj uintptr) {
	getLazyProc("Memo_ClearSelection").Call(obj)
}

func Memo_CopyToClipboard(obj uintptr) {
	getLazyProc("Memo_CopyToClipboard").Call(obj)
}

func Memo_CutToClipboard(obj uintptr) {
	getLazyProc("Memo_CutToClipboard").Call(obj)
}

func Memo_PasteFromClipboard(obj uintptr) {
	getLazyProc("Memo_PasteFromClipboard").Call(obj)
}

func Memo_Undo(obj uintptr) {
	getLazyProc("Memo_Undo").Call(obj)
}

func Memo_SelectAll(obj uintptr) {
	getLazyProc("Memo_SelectAll").Call(obj)
}

func Memo_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("Memo_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func Memo_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("Memo_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func Memo_DisableAlign(obj uintptr) {
	getLazyProc("Memo_DisableAlign").Call(obj)
}

func Memo_EnableAlign(obj uintptr) {
	getLazyProc("Memo_EnableAlign").Call(obj)
}

func Memo_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("Memo_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func Memo_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("Memo_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func Memo_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("Memo_InsertControl").Call(obj, AControl)
}

func Memo_Invalidate(obj uintptr) {
	getLazyProc("Memo_Invalidate").Call(obj)
}

func Memo_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("Memo_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func Memo_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("Memo_RemoveControl").Call(obj, AControl)
}

func Memo_Realign(obj uintptr) {
	getLazyProc("Memo_Realign").Call(obj)
}

func Memo_Repaint(obj uintptr) {
	getLazyProc("Memo_Repaint").Call(obj)
}

func Memo_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("Memo_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func Memo_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("Memo_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func Memo_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Memo_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Memo_SetFocus(obj uintptr) {
	getLazyProc("Memo_SetFocus").Call(obj)
}

func Memo_Update(obj uintptr) {
	getLazyProc("Memo_Update").Call(obj)
}

func Memo_BringToFront(obj uintptr) {
	getLazyProc("Memo_BringToFront").Call(obj)
}

func Memo_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Memo_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Memo_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_Hide(obj uintptr) {
	getLazyProc("Memo_Hide").Call(obj)
}

func Memo_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Memo_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Memo_Refresh(obj uintptr) {
	getLazyProc("Memo_Refresh").Call(obj)
}

func Memo_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Memo_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Memo_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_SendToBack(obj uintptr) {
	getLazyProc("Memo_SendToBack").Call(obj)
}

func Memo_Show(obj uintptr) {
	getLazyProc("Memo_Show").Call(obj)
}

func Memo_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Memo_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Memo_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetTextLen").Call(obj)
	return int32(ret)
}

func Memo_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Memo_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Memo_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Memo_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Memo_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Memo_Assign").Call(obj, Source)
}

func Memo_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Memo_ClassType").Call(obj)
	return TClass(ret)
}

func Memo_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_InstanceSize").Call(obj)
	return int32(ret)
}

func Memo_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Memo_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Memo_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Memo_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetHashCode").Call(obj)
	return int32(ret)
}

func Memo_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Memo_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Memo_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Memo_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Memo_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Memo_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Memo_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Memo_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Memo_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Memo_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Memo_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Memo_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Memo_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Memo_AnchorClient").Call(obj, uintptr(ASpace))
}

func Memo_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Memo_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Memo_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Memo_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Memo_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Memo_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Memo_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Memo_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Memo_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Memo_GetAlign").Call(obj)
	return TAlign(ret)
}

func Memo_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Memo_SetAlign").Call(obj, uintptr(value))
}

func Memo_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("Memo_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func Memo_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("Memo_SetAlignment").Call(obj, uintptr(value))
}

func Memo_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Memo_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Memo_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Memo_SetAnchors").Call(obj, uintptr(value))
}

func Memo_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Memo_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Memo_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Memo_SetBiDiMode").Call(obj, uintptr(value))
}

func Memo_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("Memo_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func Memo_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("Memo_SetBorderStyle").Call(obj, uintptr(value))
}

func Memo_GetCharCase(obj uintptr) TEditCharCase {
	ret, _, _ := getLazyProc("Memo_GetCharCase").Call(obj)
	return TEditCharCase(ret)
}

func Memo_SetCharCase(obj uintptr, value TEditCharCase) {
	getLazyProc("Memo_SetCharCase").Call(obj, uintptr(value))
}

func Memo_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Memo_GetColor").Call(obj)
	return TColor(ret)
}

func Memo_SetColor(obj uintptr, value TColor) {
	getLazyProc("Memo_SetColor").Call(obj, uintptr(value))
}

func Memo_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetConstraints").Call(obj)
	return ret
}

func Memo_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetConstraints").Call(obj, value)
}

func Memo_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Memo_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Memo_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Memo_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Memo_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Memo_SetDragCursor").Call(obj, uintptr(value))
}

func Memo_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Memo_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Memo_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Memo_SetDragKind").Call(obj, uintptr(value))
}

func Memo_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Memo_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Memo_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Memo_SetDragMode").Call(obj, uintptr(value))
}

func Memo_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Memo_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Memo_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetFont").Call(obj)
	return ret
}

func Memo_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetFont").Call(obj, value)
}

func Memo_GetHideSelection(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetHideSelection").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetHideSelection(obj uintptr, value bool) {
	getLazyProc("Memo_SetHideSelection").Call(obj, GoBoolToDBool(value))
}

func Memo_GetLines(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetLines").Call(obj)
	return ret
}

func Memo_SetLines(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetLines").Call(obj, value)
}

func Memo_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetMaxLength").Call(obj)
	return int32(ret)
}

func Memo_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("Memo_SetMaxLength").Call(obj, uintptr(value))
}

func Memo_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetParentColor(obj uintptr, value bool) {
	getLazyProc("Memo_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func Memo_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Memo_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Memo_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Memo_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Memo_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Memo_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Memo_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetPopupMenu").Call(obj)
	return ret
}

func Memo_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetPopupMenu").Call(obj, value)
}

func Memo_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("Memo_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func Memo_GetScrollBars(obj uintptr) TScrollStyle {
	ret, _, _ := getLazyProc("Memo_GetScrollBars").Call(obj)
	return TScrollStyle(ret)
}

func Memo_SetScrollBars(obj uintptr, value TScrollStyle) {
	getLazyProc("Memo_SetScrollBars").Call(obj, uintptr(value))
}

func Memo_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Memo_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Memo_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("Memo_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func Memo_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("Memo_SetTabOrder").Call(obj, uintptr(value))
}

func Memo_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetTabStop(obj uintptr, value bool) {
	getLazyProc("Memo_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func Memo_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetVisible(obj uintptr, value bool) {
	getLazyProc("Memo_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Memo_GetWantReturns(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetWantReturns").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetWantReturns(obj uintptr, value bool) {
	getLazyProc("Memo_SetWantReturns").Call(obj, GoBoolToDBool(value))
}

func Memo_GetWantTabs(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetWantTabs").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetWantTabs(obj uintptr, value bool) {
	getLazyProc("Memo_SetWantTabs").Call(obj, GoBoolToDBool(value))
}

func Memo_GetWordWrap(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetWordWrap").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetWordWrap(obj uintptr, value bool) {
	getLazyProc("Memo_SetWordWrap").Call(obj, GoBoolToDBool(value))
}

func Memo_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Memo_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Memo_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Memo_GetCaretPos(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Memo_GetCaretPos").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_SetCaretPos(obj uintptr, value TPoint) {
	getLazyProc("Memo_SetCaretPos").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Memo_GetCanUndo(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetCanUndo").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetModified(obj uintptr, value bool) {
	getLazyProc("Memo_SetModified").Call(obj, GoBoolToDBool(value))
}

func Memo_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetSelLength").Call(obj)
	return int32(ret)
}

func Memo_SetSelLength(obj uintptr, value int32) {
	getLazyProc("Memo_SetSelLength").Call(obj, uintptr(value))
}

func Memo_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetSelStart").Call(obj)
	return int32(ret)
}

func Memo_SetSelStart(obj uintptr, value int32) {
	getLazyProc("Memo_SetSelStart").Call(obj, uintptr(value))
}

func Memo_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_SetSelText(obj uintptr, value string) {
	getLazyProc("Memo_SetSelText").Call(obj, GoStrToDStr(value))
}

func Memo_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_SetText(obj uintptr, value string) {
	getLazyProc("Memo_SetText").Call(obj, GoStrToDStr(value))
}

func Memo_GetTextHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_GetTextHint").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_SetTextHint(obj uintptr, value string) {
	getLazyProc("Memo_SetTextHint").Call(obj, GoStrToDStr(value))
}

func Memo_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetDockClientCount").Call(obj)
	return int32(ret)
}

func Memo_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetDockSite(obj uintptr, value bool) {
	getLazyProc("Memo_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func Memo_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func Memo_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetBrush").Call(obj)
	return ret
}

func Memo_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetControlCount").Call(obj)
	return int32(ret)
}

func Memo_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Memo_GetHandle").Call(obj)
	return HWND(ret)
}

func Memo_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Memo_GetParentWindow").Call(obj)
	return HWND(ret)
}

func Memo_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("Memo_SetParentWindow").Call(obj, uintptr(value))
}

func Memo_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("Memo_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func Memo_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetAction").Call(obj)
	return ret
}

func Memo_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetAction").Call(obj, value)
}

func Memo_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Memo_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Memo_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Memo_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetClientHeight").Call(obj)
	return int32(ret)
}

func Memo_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Memo_SetClientHeight").Call(obj, uintptr(value))
}

func Memo_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Memo_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Memo_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Memo_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetClientWidth").Call(obj)
	return int32(ret)
}

func Memo_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Memo_SetClientWidth").Call(obj, uintptr(value))
}

func Memo_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Memo_GetControlState").Call(obj)
	return TControlState(ret)
}

func Memo_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Memo_SetControlState").Call(obj, uintptr(value))
}

func Memo_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Memo_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Memo_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Memo_SetControlStyle").Call(obj, uintptr(value))
}

func Memo_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Memo_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Memo_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetParent").Call(obj)
	return ret
}

func Memo_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetParent").Call(obj, value)
}

func Memo_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetLeft").Call(obj)
	return int32(ret)
}

func Memo_SetLeft(obj uintptr, value int32) {
	getLazyProc("Memo_SetLeft").Call(obj, uintptr(value))
}

func Memo_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetTop").Call(obj)
	return int32(ret)
}

func Memo_SetTop(obj uintptr, value int32) {
	getLazyProc("Memo_SetTop").Call(obj, uintptr(value))
}

func Memo_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetWidth").Call(obj)
	return int32(ret)
}

func Memo_SetWidth(obj uintptr, value int32) {
	getLazyProc("Memo_SetWidth").Call(obj, uintptr(value))
}

func Memo_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetHeight").Call(obj)
	return int32(ret)
}

func Memo_SetHeight(obj uintptr, value int32) {
	getLazyProc("Memo_SetHeight").Call(obj, uintptr(value))
}

func Memo_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Memo_GetCursor").Call(obj)
	return TCursor(ret)
}

func Memo_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Memo_SetCursor").Call(obj, uintptr(value))
}

func Memo_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_SetHint(obj uintptr, value string) {
	getLazyProc("Memo_SetHint").Call(obj, GoStrToDStr(value))
}

func Memo_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetComponentCount").Call(obj)
	return int32(ret)
}

func Memo_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Memo_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Memo_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Memo_SetComponentIndex").Call(obj, uintptr(value))
}

func Memo_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetOwner").Call(obj)
	return ret
}

func Memo_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Memo_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Memo_SetName(obj uintptr, value string) {
	getLazyProc("Memo_SetName").Call(obj, GoStrToDStr(value))
}

func Memo_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Memo_GetTag").Call(obj)
	return int(ret)
}

func Memo_SetTag(obj uintptr, value int) {
	getLazyProc("Memo_SetTag").Call(obj, uintptr(value))
}

func Memo_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetAnchorSideLeft").Call(obj)
	return ret
}

func Memo_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetAnchorSideLeft").Call(obj, value)
}

func Memo_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetAnchorSideTop").Call(obj)
	return ret
}

func Memo_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetAnchorSideTop").Call(obj, value)
}

func Memo_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetAnchorSideRight").Call(obj)
	return ret
}

func Memo_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetAnchorSideRight").Call(obj, value)
}

func Memo_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetAnchorSideBottom").Call(obj)
	return ret
}

func Memo_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetAnchorSideBottom").Call(obj, value)
}

func Memo_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetChildSizing").Call(obj)
	return ret
}

func Memo_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetChildSizing").Call(obj, value)
}

func Memo_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Memo_GetBorderSpacing").Call(obj)
	return ret
}

func Memo_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Memo_SetBorderSpacing").Call(obj, value)
}

func Memo_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Memo_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func Memo_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Memo_GetControls").Call(obj, uintptr(Index))
	return ret
}

func Memo_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Memo_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Memo_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Memo_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Memo_StaticClassType() TClass {
	r, _, _ := getLazyProc("Memo_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCheckBox ---------------------------

func CheckBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_Create").Call(obj)
	return ret
}

func CheckBox_Free(obj uintptr) {
	getLazyProc("CheckBox_Free").Call(obj)
}

func CheckBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func CheckBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("CheckBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func CheckBox_DisableAlign(obj uintptr) {
	getLazyProc("CheckBox_DisableAlign").Call(obj)
}

func CheckBox_EnableAlign(obj uintptr) {
	getLazyProc("CheckBox_EnableAlign").Call(obj)
}

func CheckBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("CheckBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func CheckBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("CheckBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func CheckBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("CheckBox_InsertControl").Call(obj, AControl)
}

func CheckBox_Invalidate(obj uintptr) {
	getLazyProc("CheckBox_Invalidate").Call(obj)
}

func CheckBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("CheckBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func CheckBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("CheckBox_RemoveControl").Call(obj, AControl)
}

func CheckBox_Realign(obj uintptr) {
	getLazyProc("CheckBox_Realign").Call(obj)
}

func CheckBox_Repaint(obj uintptr) {
	getLazyProc("CheckBox_Repaint").Call(obj)
}

func CheckBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("CheckBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func CheckBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("CheckBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func CheckBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("CheckBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func CheckBox_SetFocus(obj uintptr) {
	getLazyProc("CheckBox_SetFocus").Call(obj)
}

func CheckBox_Update(obj uintptr) {
	getLazyProc("CheckBox_Update").Call(obj)
}

func CheckBox_BringToFront(obj uintptr) {
	getLazyProc("CheckBox_BringToFront").Call(obj)
}

func CheckBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CheckBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_Hide(obj uintptr) {
	getLazyProc("CheckBox_Hide").Call(obj)
}

func CheckBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("CheckBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func CheckBox_Refresh(obj uintptr) {
	getLazyProc("CheckBox_Refresh").Call(obj)
}

func CheckBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CheckBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckBox_SendToBack(obj uintptr) {
	getLazyProc("CheckBox_SendToBack").Call(obj)
}

func CheckBox_Show(obj uintptr) {
	getLazyProc("CheckBox_Show").Call(obj)
}

func CheckBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("CheckBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func CheckBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetTextLen").Call(obj)
	return int32(ret)
}

func CheckBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("CheckBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func CheckBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("CheckBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func CheckBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func CheckBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("CheckBox_Assign").Call(obj, Source)
}

func CheckBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("CheckBox_ClassType").Call(obj)
	return TClass(ret)
}

func CheckBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func CheckBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_InstanceSize").Call(obj)
	return int32(ret)
}

func CheckBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("CheckBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func CheckBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func CheckBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetHashCode").Call(obj)
	return int32(ret)
}

func CheckBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func CheckBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CheckBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CheckBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CheckBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CheckBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CheckBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func CheckBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CheckBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func CheckBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("CheckBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func CheckBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("CheckBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func CheckBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("CheckBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func CheckBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("CheckBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func CheckBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("CheckBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func CheckBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("CheckBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func CheckBox_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetAction").Call(obj)
	return ret
}

func CheckBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetAction").Call(obj, value)
}

func CheckBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("CheckBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func CheckBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("CheckBox_SetAlign").Call(obj, uintptr(value))
}

func CheckBox_GetAlignment(obj uintptr) TLeftRight {
	ret, _, _ := getLazyProc("CheckBox_GetAlignment").Call(obj)
	return TLeftRight(ret)
}

func CheckBox_SetAlignment(obj uintptr, value TLeftRight) {
	getLazyProc("CheckBox_SetAlignment").Call(obj, uintptr(value))
}

func CheckBox_GetAllowGrayed(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetAllowGrayed").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetAllowGrayed(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetAllowGrayed").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("CheckBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func CheckBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("CheckBox_SetAnchors").Call(obj, uintptr(value))
}

func CheckBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("CheckBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func CheckBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("CheckBox_SetBiDiMode").Call(obj, uintptr(value))
}

func CheckBox_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckBox_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func CheckBox_SetCaption(obj uintptr, value string) {
	getLazyProc("CheckBox_SetCaption").Call(obj, GoStrToDStr(value))
}

func CheckBox_GetChecked(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetChecked").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetChecked(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetChecked").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("CheckBox_GetColor").Call(obj)
	return TColor(ret)
}

func CheckBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("CheckBox_SetColor").Call(obj, uintptr(value))
}

func CheckBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetConstraints").Call(obj)
	return ret
}

func CheckBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetConstraints").Call(obj, value)
}

func CheckBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CheckBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func CheckBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("CheckBox_SetDragCursor").Call(obj, uintptr(value))
}

func CheckBox_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("CheckBox_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func CheckBox_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("CheckBox_SetDragKind").Call(obj, uintptr(value))
}

func CheckBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("CheckBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func CheckBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("CheckBox_SetDragMode").Call(obj, uintptr(value))
}

func CheckBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetFont").Call(obj)
	return ret
}

func CheckBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetFont").Call(obj, value)
}

func CheckBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetPopupMenu").Call(obj)
	return ret
}

func CheckBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetPopupMenu").Call(obj, value)
}

func CheckBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetState(obj uintptr) TCheckBoxState {
	ret, _, _ := getLazyProc("CheckBox_GetState").Call(obj)
	return TCheckBoxState(ret)
}

func CheckBox_SetState(obj uintptr, value TCheckBoxState) {
	getLazyProc("CheckBox_SetState").Call(obj, uintptr(value))
}

func CheckBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("CheckBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func CheckBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("CheckBox_SetTabOrder").Call(obj, uintptr(value))
}

func CheckBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func CheckBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("CheckBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func CheckBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func CheckBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func CheckBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetBrush").Call(obj)
	return ret
}

func CheckBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetControlCount").Call(obj)
	return int32(ret)
}

func CheckBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CheckBox_GetHandle").Call(obj)
	return HWND(ret)
}

func CheckBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CheckBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func CheckBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("CheckBox_SetParentWindow").Call(obj, uintptr(value))
}

func CheckBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("CheckBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CheckBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("CheckBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func CheckBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func CheckBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("CheckBox_SetClientHeight").Call(obj, uintptr(value))
}

func CheckBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CheckBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func CheckBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("CheckBox_SetClientWidth").Call(obj, uintptr(value))
}

func CheckBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("CheckBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func CheckBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("CheckBox_SetControlState").Call(obj, uintptr(value))
}

func CheckBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("CheckBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func CheckBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("CheckBox_SetControlStyle").Call(obj, uintptr(value))
}

func CheckBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetParent").Call(obj)
	return ret
}

func CheckBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetParent").Call(obj, value)
}

func CheckBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetLeft").Call(obj)
	return int32(ret)
}

func CheckBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("CheckBox_SetLeft").Call(obj, uintptr(value))
}

func CheckBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetTop").Call(obj)
	return int32(ret)
}

func CheckBox_SetTop(obj uintptr, value int32) {
	getLazyProc("CheckBox_SetTop").Call(obj, uintptr(value))
}

func CheckBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetWidth").Call(obj)
	return int32(ret)
}

func CheckBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("CheckBox_SetWidth").Call(obj, uintptr(value))
}

func CheckBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetHeight").Call(obj)
	return int32(ret)
}

func CheckBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("CheckBox_SetHeight").Call(obj, uintptr(value))
}

func CheckBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CheckBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func CheckBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("CheckBox_SetCursor").Call(obj, uintptr(value))
}

func CheckBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func CheckBox_SetHint(obj uintptr, value string) {
	getLazyProc("CheckBox_SetHint").Call(obj, GoStrToDStr(value))
}

func CheckBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func CheckBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func CheckBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("CheckBox_SetComponentIndex").Call(obj, uintptr(value))
}

func CheckBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetOwner").Call(obj)
	return ret
}

func CheckBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func CheckBox_SetName(obj uintptr, value string) {
	getLazyProc("CheckBox_SetName").Call(obj, GoStrToDStr(value))
}

func CheckBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("CheckBox_GetTag").Call(obj)
	return int(ret)
}

func CheckBox_SetTag(obj uintptr, value int) {
	getLazyProc("CheckBox_SetTag").Call(obj, uintptr(value))
}

func CheckBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func CheckBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetAnchorSideLeft").Call(obj, value)
}

func CheckBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetAnchorSideTop").Call(obj)
	return ret
}

func CheckBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetAnchorSideTop").Call(obj, value)
}

func CheckBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetAnchorSideRight").Call(obj)
	return ret
}

func CheckBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetAnchorSideRight").Call(obj, value)
}

func CheckBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func CheckBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetAnchorSideBottom").Call(obj, value)
}

func CheckBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetChildSizing").Call(obj)
	return ret
}

func CheckBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetChildSizing").Call(obj, value)
}

func CheckBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetBorderSpacing").Call(obj)
	return ret
}

func CheckBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("CheckBox_SetBorderSpacing").Call(obj, value)
}

func CheckBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func CheckBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func CheckBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func CheckBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("CheckBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func CheckBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("CheckBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TRadioButton ---------------------------

func RadioButton_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_Create").Call(obj)
	return ret
}

func RadioButton_Free(obj uintptr) {
	getLazyProc("RadioButton_Free").Call(obj)
}

func RadioButton_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func RadioButton_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("RadioButton_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func RadioButton_DisableAlign(obj uintptr) {
	getLazyProc("RadioButton_DisableAlign").Call(obj)
}

func RadioButton_EnableAlign(obj uintptr) {
	getLazyProc("RadioButton_EnableAlign").Call(obj)
}

func RadioButton_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("RadioButton_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func RadioButton_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("RadioButton_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func RadioButton_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("RadioButton_InsertControl").Call(obj, AControl)
}

func RadioButton_Invalidate(obj uintptr) {
	getLazyProc("RadioButton_Invalidate").Call(obj)
}

func RadioButton_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("RadioButton_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func RadioButton_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("RadioButton_RemoveControl").Call(obj, AControl)
}

func RadioButton_Realign(obj uintptr) {
	getLazyProc("RadioButton_Realign").Call(obj)
}

func RadioButton_Repaint(obj uintptr) {
	getLazyProc("RadioButton_Repaint").Call(obj)
}

func RadioButton_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("RadioButton_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func RadioButton_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("RadioButton_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func RadioButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("RadioButton_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func RadioButton_SetFocus(obj uintptr) {
	getLazyProc("RadioButton_SetFocus").Call(obj)
}

func RadioButton_Update(obj uintptr) {
	getLazyProc("RadioButton_Update").Call(obj)
}

func RadioButton_BringToFront(obj uintptr) {
	getLazyProc("RadioButton_BringToFront").Call(obj)
}

func RadioButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("RadioButton_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("RadioButton_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioButton_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_Hide(obj uintptr) {
	getLazyProc("RadioButton_Hide").Call(obj)
}

func RadioButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("RadioButton_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func RadioButton_Refresh(obj uintptr) {
	getLazyProc("RadioButton_Refresh").Call(obj)
}

func RadioButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("RadioButton_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("RadioButton_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioButton_SendToBack(obj uintptr) {
	getLazyProc("RadioButton_SendToBack").Call(obj)
}

func RadioButton_Show(obj uintptr) {
	getLazyProc("RadioButton_Show").Call(obj)
}

func RadioButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("RadioButton_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func RadioButton_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetTextLen").Call(obj)
	return int32(ret)
}

func RadioButton_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("RadioButton_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func RadioButton_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("RadioButton_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func RadioButton_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioButton_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func RadioButton_Assign(obj uintptr, Source uintptr) {
	getLazyProc("RadioButton_Assign").Call(obj, Source)
}

func RadioButton_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("RadioButton_ClassType").Call(obj)
	return TClass(ret)
}

func RadioButton_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioButton_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func RadioButton_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_InstanceSize").Call(obj)
	return int32(ret)
}

func RadioButton_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("RadioButton_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func RadioButton_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func RadioButton_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetHashCode").Call(obj)
	return int32(ret)
}

func RadioButton_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioButton_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func RadioButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("RadioButton_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func RadioButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("RadioButton_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func RadioButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("RadioButton_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func RadioButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("RadioButton_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func RadioButton_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("RadioButton_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func RadioButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("RadioButton_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func RadioButton_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("RadioButton_AnchorClient").Call(obj, uintptr(ASpace))
}

func RadioButton_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioButton_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioButton_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("RadioButton_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func RadioButton_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("RadioButton_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func RadioButton_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("RadioButton_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func RadioButton_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetAction").Call(obj)
	return ret
}

func RadioButton_SetAction(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetAction").Call(obj, value)
}

func RadioButton_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("RadioButton_GetAlign").Call(obj)
	return TAlign(ret)
}

func RadioButton_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("RadioButton_SetAlign").Call(obj, uintptr(value))
}

func RadioButton_GetAlignment(obj uintptr) TLeftRight {
	ret, _, _ := getLazyProc("RadioButton_GetAlignment").Call(obj)
	return TLeftRight(ret)
}

func RadioButton_SetAlignment(obj uintptr, value TLeftRight) {
	getLazyProc("RadioButton_SetAlignment").Call(obj, uintptr(value))
}

func RadioButton_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("RadioButton_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func RadioButton_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("RadioButton_SetAnchors").Call(obj, uintptr(value))
}

func RadioButton_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("RadioButton_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func RadioButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("RadioButton_SetBiDiMode").Call(obj, uintptr(value))
}

func RadioButton_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioButton_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func RadioButton_SetCaption(obj uintptr, value string) {
	getLazyProc("RadioButton_SetCaption").Call(obj, GoStrToDStr(value))
}

func RadioButton_GetChecked(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetChecked").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetChecked(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetChecked").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("RadioButton_GetColor").Call(obj)
	return TColor(ret)
}

func RadioButton_SetColor(obj uintptr, value TColor) {
	getLazyProc("RadioButton_SetColor").Call(obj, uintptr(value))
}

func RadioButton_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetConstraints").Call(obj)
	return ret
}

func RadioButton_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetConstraints").Call(obj, value)
}

func RadioButton_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("RadioButton_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func RadioButton_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("RadioButton_SetDragCursor").Call(obj, uintptr(value))
}

func RadioButton_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("RadioButton_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func RadioButton_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("RadioButton_SetDragKind").Call(obj, uintptr(value))
}

func RadioButton_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("RadioButton_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func RadioButton_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("RadioButton_SetDragMode").Call(obj, uintptr(value))
}

func RadioButton_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetEnabled(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetFont").Call(obj)
	return ret
}

func RadioButton_SetFont(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetFont").Call(obj, value)
}

func RadioButton_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetParentColor(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetParentFont(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetPopupMenu").Call(obj)
	return ret
}

func RadioButton_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetPopupMenu").Call(obj, value)
}

func RadioButton_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetShowHint(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("RadioButton_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func RadioButton_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("RadioButton_SetTabOrder").Call(obj, uintptr(value))
}

func RadioButton_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetTabStop(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetVisible(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetVisible").Call(obj, GoBoolToDBool(value))
}

func RadioButton_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("RadioButton_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func RadioButton_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetDockClientCount").Call(obj)
	return int32(ret)
}

func RadioButton_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetDockSite(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func RadioButton_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetBrush").Call(obj)
	return ret
}

func RadioButton_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetControlCount").Call(obj)
	return int32(ret)
}

func RadioButton_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("RadioButton_GetHandle").Call(obj)
	return HWND(ret)
}

func RadioButton_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("RadioButton_GetParentWindow").Call(obj)
	return HWND(ret)
}

func RadioButton_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("RadioButton_SetParentWindow").Call(obj, uintptr(value))
}

func RadioButton_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("RadioButton_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("RadioButton_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioButton_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("RadioButton_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RadioButton_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetClientHeight").Call(obj)
	return int32(ret)
}

func RadioButton_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("RadioButton_SetClientHeight").Call(obj, uintptr(value))
}

func RadioButton_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("RadioButton_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioButton_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("RadioButton_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioButton_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetClientWidth").Call(obj)
	return int32(ret)
}

func RadioButton_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("RadioButton_SetClientWidth").Call(obj, uintptr(value))
}

func RadioButton_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("RadioButton_GetControlState").Call(obj)
	return TControlState(ret)
}

func RadioButton_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("RadioButton_SetControlState").Call(obj, uintptr(value))
}

func RadioButton_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("RadioButton_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func RadioButton_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("RadioButton_SetControlStyle").Call(obj, uintptr(value))
}

func RadioButton_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioButton_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioButton_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetParent").Call(obj)
	return ret
}

func RadioButton_SetParent(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetParent").Call(obj, value)
}

func RadioButton_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetLeft").Call(obj)
	return int32(ret)
}

func RadioButton_SetLeft(obj uintptr, value int32) {
	getLazyProc("RadioButton_SetLeft").Call(obj, uintptr(value))
}

func RadioButton_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetTop").Call(obj)
	return int32(ret)
}

func RadioButton_SetTop(obj uintptr, value int32) {
	getLazyProc("RadioButton_SetTop").Call(obj, uintptr(value))
}

func RadioButton_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetWidth").Call(obj)
	return int32(ret)
}

func RadioButton_SetWidth(obj uintptr, value int32) {
	getLazyProc("RadioButton_SetWidth").Call(obj, uintptr(value))
}

func RadioButton_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetHeight").Call(obj)
	return int32(ret)
}

func RadioButton_SetHeight(obj uintptr, value int32) {
	getLazyProc("RadioButton_SetHeight").Call(obj, uintptr(value))
}

func RadioButton_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("RadioButton_GetCursor").Call(obj)
	return TCursor(ret)
}

func RadioButton_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("RadioButton_SetCursor").Call(obj, uintptr(value))
}

func RadioButton_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioButton_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func RadioButton_SetHint(obj uintptr, value string) {
	getLazyProc("RadioButton_SetHint").Call(obj, GoStrToDStr(value))
}

func RadioButton_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetComponentCount").Call(obj)
	return int32(ret)
}

func RadioButton_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioButton_GetComponentIndex").Call(obj)
	return int32(ret)
}

func RadioButton_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("RadioButton_SetComponentIndex").Call(obj, uintptr(value))
}

func RadioButton_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetOwner").Call(obj)
	return ret
}

func RadioButton_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioButton_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func RadioButton_SetName(obj uintptr, value string) {
	getLazyProc("RadioButton_SetName").Call(obj, GoStrToDStr(value))
}

func RadioButton_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("RadioButton_GetTag").Call(obj)
	return int(ret)
}

func RadioButton_SetTag(obj uintptr, value int) {
	getLazyProc("RadioButton_SetTag").Call(obj, uintptr(value))
}

func RadioButton_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetAnchorSideLeft").Call(obj)
	return ret
}

func RadioButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetAnchorSideLeft").Call(obj, value)
}

func RadioButton_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetAnchorSideTop").Call(obj)
	return ret
}

func RadioButton_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetAnchorSideTop").Call(obj, value)
}

func RadioButton_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetAnchorSideRight").Call(obj)
	return ret
}

func RadioButton_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetAnchorSideRight").Call(obj, value)
}

func RadioButton_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetAnchorSideBottom").Call(obj)
	return ret
}

func RadioButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetAnchorSideBottom").Call(obj, value)
}

func RadioButton_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetChildSizing").Call(obj)
	return ret
}

func RadioButton_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetChildSizing").Call(obj, value)
}

func RadioButton_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetBorderSpacing").Call(obj)
	return ret
}

func RadioButton_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("RadioButton_SetBorderSpacing").Call(obj, value)
}

func RadioButton_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func RadioButton_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetControls").Call(obj, uintptr(Index))
	return ret
}

func RadioButton_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func RadioButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("RadioButton_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func RadioButton_StaticClassType() TClass {
	r, _, _ := getLazyProc("RadioButton_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TGroupBox ---------------------------

func GroupBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_Create").Call(obj)
	return ret
}

func GroupBox_Free(obj uintptr) {
	getLazyProc("GroupBox_Free").Call(obj)
}

func GroupBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func GroupBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("GroupBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func GroupBox_DisableAlign(obj uintptr) {
	getLazyProc("GroupBox_DisableAlign").Call(obj)
}

func GroupBox_EnableAlign(obj uintptr) {
	getLazyProc("GroupBox_EnableAlign").Call(obj)
}

func GroupBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("GroupBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func GroupBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("GroupBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func GroupBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("GroupBox_InsertControl").Call(obj, AControl)
}

func GroupBox_Invalidate(obj uintptr) {
	getLazyProc("GroupBox_Invalidate").Call(obj)
}

func GroupBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("GroupBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func GroupBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("GroupBox_RemoveControl").Call(obj, AControl)
}

func GroupBox_Realign(obj uintptr) {
	getLazyProc("GroupBox_Realign").Call(obj)
}

func GroupBox_Repaint(obj uintptr) {
	getLazyProc("GroupBox_Repaint").Call(obj)
}

func GroupBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("GroupBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func GroupBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("GroupBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func GroupBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("GroupBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func GroupBox_SetFocus(obj uintptr) {
	getLazyProc("GroupBox_SetFocus").Call(obj)
}

func GroupBox_Update(obj uintptr) {
	getLazyProc("GroupBox_Update").Call(obj)
}

func GroupBox_BringToFront(obj uintptr) {
	getLazyProc("GroupBox_BringToFront").Call(obj)
}

func GroupBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("GroupBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func GroupBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("GroupBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func GroupBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_Hide(obj uintptr) {
	getLazyProc("GroupBox_Hide").Call(obj)
}

func GroupBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("GroupBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func GroupBox_Refresh(obj uintptr) {
	getLazyProc("GroupBox_Refresh").Call(obj)
}

func GroupBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("GroupBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func GroupBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("GroupBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func GroupBox_SendToBack(obj uintptr) {
	getLazyProc("GroupBox_SendToBack").Call(obj)
}

func GroupBox_Show(obj uintptr) {
	getLazyProc("GroupBox_Show").Call(obj)
}

func GroupBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("GroupBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func GroupBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetTextLen").Call(obj)
	return int32(ret)
}

func GroupBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("GroupBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func GroupBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("GroupBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func GroupBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("GroupBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func GroupBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("GroupBox_Assign").Call(obj, Source)
}

func GroupBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("GroupBox_ClassType").Call(obj)
	return TClass(ret)
}

func GroupBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("GroupBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func GroupBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_InstanceSize").Call(obj)
	return int32(ret)
}

func GroupBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("GroupBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func GroupBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func GroupBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetHashCode").Call(obj)
	return int32(ret)
}

func GroupBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("GroupBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func GroupBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("GroupBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func GroupBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("GroupBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func GroupBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("GroupBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func GroupBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("GroupBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func GroupBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("GroupBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func GroupBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("GroupBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func GroupBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("GroupBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func GroupBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("GroupBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func GroupBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("GroupBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func GroupBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("GroupBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func GroupBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("GroupBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func GroupBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("GroupBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func GroupBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("GroupBox_SetAlign").Call(obj, uintptr(value))
}

func GroupBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("GroupBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func GroupBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("GroupBox_SetAnchors").Call(obj, uintptr(value))
}

func GroupBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("GroupBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func GroupBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("GroupBox_SetBiDiMode").Call(obj, uintptr(value))
}

func GroupBox_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("GroupBox_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func GroupBox_SetCaption(obj uintptr, value string) {
	getLazyProc("GroupBox_SetCaption").Call(obj, GoStrToDStr(value))
}

func GroupBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("GroupBox_GetColor").Call(obj)
	return TColor(ret)
}

func GroupBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("GroupBox_SetColor").Call(obj, uintptr(value))
}

func GroupBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetConstraints").Call(obj)
	return ret
}

func GroupBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetConstraints").Call(obj, value)
}

func GroupBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("GroupBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func GroupBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("GroupBox_SetDragCursor").Call(obj, uintptr(value))
}

func GroupBox_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("GroupBox_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func GroupBox_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("GroupBox_SetDragKind").Call(obj, uintptr(value))
}

func GroupBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("GroupBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func GroupBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("GroupBox_SetDragMode").Call(obj, uintptr(value))
}

func GroupBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetFont").Call(obj)
	return ret
}

func GroupBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetFont").Call(obj, value)
}

func GroupBox_GetParentBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetParentBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetParentBackground(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetParentBackground").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetPopupMenu").Call(obj)
	return ret
}

func GroupBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetPopupMenu").Call(obj, value)
}

func GroupBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("GroupBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func GroupBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("GroupBox_SetTabOrder").Call(obj, uintptr(value))
}

func GroupBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func GroupBox_SetOnAlignPosition(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnAlignPosition").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("GroupBox_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func GroupBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func GroupBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func GroupBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetBrush").Call(obj)
	return ret
}

func GroupBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetControlCount").Call(obj)
	return int32(ret)
}

func GroupBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("GroupBox_GetHandle").Call(obj)
	return HWND(ret)
}

func GroupBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("GroupBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func GroupBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("GroupBox_SetParentWindow").Call(obj, uintptr(value))
}

func GroupBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("GroupBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetAction").Call(obj)
	return ret
}

func GroupBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetAction").Call(obj, value)
}

func GroupBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("GroupBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func GroupBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("GroupBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func GroupBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func GroupBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("GroupBox_SetClientHeight").Call(obj, uintptr(value))
}

func GroupBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("GroupBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func GroupBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("GroupBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func GroupBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func GroupBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("GroupBox_SetClientWidth").Call(obj, uintptr(value))
}

func GroupBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("GroupBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func GroupBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("GroupBox_SetControlState").Call(obj, uintptr(value))
}

func GroupBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("GroupBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func GroupBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("GroupBox_SetControlStyle").Call(obj, uintptr(value))
}

func GroupBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("GroupBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func GroupBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetParent").Call(obj)
	return ret
}

func GroupBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetParent").Call(obj, value)
}

func GroupBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetLeft").Call(obj)
	return int32(ret)
}

func GroupBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("GroupBox_SetLeft").Call(obj, uintptr(value))
}

func GroupBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetTop").Call(obj)
	return int32(ret)
}

func GroupBox_SetTop(obj uintptr, value int32) {
	getLazyProc("GroupBox_SetTop").Call(obj, uintptr(value))
}

func GroupBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetWidth").Call(obj)
	return int32(ret)
}

func GroupBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("GroupBox_SetWidth").Call(obj, uintptr(value))
}

func GroupBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetHeight").Call(obj)
	return int32(ret)
}

func GroupBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("GroupBox_SetHeight").Call(obj, uintptr(value))
}

func GroupBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("GroupBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func GroupBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("GroupBox_SetCursor").Call(obj, uintptr(value))
}

func GroupBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("GroupBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func GroupBox_SetHint(obj uintptr, value string) {
	getLazyProc("GroupBox_SetHint").Call(obj, GoStrToDStr(value))
}

func GroupBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func GroupBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GroupBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func GroupBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("GroupBox_SetComponentIndex").Call(obj, uintptr(value))
}

func GroupBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetOwner").Call(obj)
	return ret
}

func GroupBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("GroupBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func GroupBox_SetName(obj uintptr, value string) {
	getLazyProc("GroupBox_SetName").Call(obj, GoStrToDStr(value))
}

func GroupBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("GroupBox_GetTag").Call(obj)
	return int(ret)
}

func GroupBox_SetTag(obj uintptr, value int) {
	getLazyProc("GroupBox_SetTag").Call(obj, uintptr(value))
}

func GroupBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func GroupBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetAnchorSideLeft").Call(obj, value)
}

func GroupBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetAnchorSideTop").Call(obj)
	return ret
}

func GroupBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetAnchorSideTop").Call(obj, value)
}

func GroupBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetAnchorSideRight").Call(obj)
	return ret
}

func GroupBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetAnchorSideRight").Call(obj, value)
}

func GroupBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func GroupBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetAnchorSideBottom").Call(obj, value)
}

func GroupBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetChildSizing").Call(obj)
	return ret
}

func GroupBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetChildSizing").Call(obj, value)
}

func GroupBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetBorderSpacing").Call(obj)
	return ret
}

func GroupBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("GroupBox_SetBorderSpacing").Call(obj, value)
}

func GroupBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func GroupBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func GroupBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func GroupBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("GroupBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func GroupBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("GroupBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TLabel ---------------------------

func Label_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_Create").Call(obj)
	return ret
}

func Label_Free(obj uintptr) {
	getLazyProc("Label_Free").Call(obj)
}

func Label_BringToFront(obj uintptr) {
	getLazyProc("Label_BringToFront").Call(obj)
}

func Label_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Label_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Label_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Label_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Label_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_Hide(obj uintptr) {
	getLazyProc("Label_Hide").Call(obj)
}

func Label_Invalidate(obj uintptr) {
	getLazyProc("Label_Invalidate").Call(obj)
}

func Label_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Label_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Label_Refresh(obj uintptr) {
	getLazyProc("Label_Refresh").Call(obj)
}

func Label_Repaint(obj uintptr) {
	getLazyProc("Label_Repaint").Call(obj)
}

func Label_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Label_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Label_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Label_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Label_SendToBack(obj uintptr) {
	getLazyProc("Label_SendToBack").Call(obj)
}

func Label_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Label_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Label_Show(obj uintptr) {
	getLazyProc("Label_Show").Call(obj)
}

func Label_Update(obj uintptr) {
	getLazyProc("Label_Update").Call(obj)
}

func Label_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Label_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Label_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetTextLen").Call(obj)
	return int32(ret)
}

func Label_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Label_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Label_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Label_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Label_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Label_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Label_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Label_Assign").Call(obj, Source)
}

func Label_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Label_ClassType").Call(obj)
	return TClass(ret)
}

func Label_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Label_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Label_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_InstanceSize").Call(obj)
	return int32(ret)
}

func Label_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Label_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Label_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Label_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetHashCode").Call(obj)
	return int32(ret)
}

func Label_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Label_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Label_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Label_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Label_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Label_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Label_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Label_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Label_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Label_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Label_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Label_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Label_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Label_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Label_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Label_AnchorClient").Call(obj, uintptr(ASpace))
}

func Label_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Label_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Label_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Label_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Label_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Label_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Label_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Label_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Label_GetOptimalFill(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetOptimalFill").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetOptimalFill(obj uintptr, value bool) {
	getLazyProc("Label_SetOptimalFill").Call(obj, GoBoolToDBool(value))
}

func Label_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Label_GetAlign").Call(obj)
	return TAlign(ret)
}

func Label_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Label_SetAlign").Call(obj, uintptr(value))
}

func Label_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("Label_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func Label_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("Label_SetAlignment").Call(obj, uintptr(value))
}

func Label_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Label_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Label_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Label_SetAnchors").Call(obj, uintptr(value))
}

func Label_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("Label_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func Label_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Label_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Label_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Label_SetBiDiMode").Call(obj, uintptr(value))
}

func Label_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("Label_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func Label_SetCaption(obj uintptr, value string) {
	getLazyProc("Label_SetCaption").Call(obj, GoStrToDStr(value))
}

func Label_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Label_GetColor").Call(obj)
	return TColor(ret)
}

func Label_SetColor(obj uintptr, value TColor) {
	getLazyProc("Label_SetColor").Call(obj, uintptr(value))
}

func Label_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetConstraints").Call(obj)
	return ret
}

func Label_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Label_SetConstraints").Call(obj, value)
}

func Label_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Label_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Label_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Label_SetDragCursor").Call(obj, uintptr(value))
}

func Label_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Label_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Label_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Label_SetDragKind").Call(obj, uintptr(value))
}

func Label_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Label_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Label_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Label_SetDragMode").Call(obj, uintptr(value))
}

func Label_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Label_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Label_GetFocusControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetFocusControl").Call(obj)
	return ret
}

func Label_SetFocusControl(obj uintptr, value uintptr) {
	getLazyProc("Label_SetFocusControl").Call(obj, value)
}

func Label_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetFont").Call(obj)
	return ret
}

func Label_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Label_SetFont").Call(obj, value)
}

func Label_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetParentColor(obj uintptr, value bool) {
	getLazyProc("Label_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func Label_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Label_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Label_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Label_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Label_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetPopupMenu").Call(obj)
	return ret
}

func Label_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Label_SetPopupMenu").Call(obj, value)
}

func Label_GetShowAccelChar(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetShowAccelChar").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetShowAccelChar(obj uintptr, value bool) {
	getLazyProc("Label_SetShowAccelChar").Call(obj, GoBoolToDBool(value))
}

func Label_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Label_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Label_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetTransparent(obj uintptr, value bool) {
	getLazyProc("Label_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func Label_GetLayout(obj uintptr) TTextLayout {
	ret, _, _ := getLazyProc("Label_GetLayout").Call(obj)
	return TTextLayout(ret)
}

func Label_SetLayout(obj uintptr, value TTextLayout) {
	getLazyProc("Label_SetLayout").Call(obj, uintptr(value))
}

func Label_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetVisible(obj uintptr, value bool) {
	getLazyProc("Label_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Label_GetWordWrap(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetWordWrap").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_SetWordWrap(obj uintptr, value bool) {
	getLazyProc("Label_SetWordWrap").Call(obj, GoBoolToDBool(value))
}

func Label_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Label_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Label_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Label_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetCanvas").Call(obj)
	return ret
}

func Label_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetAction").Call(obj)
	return ret
}

func Label_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Label_SetAction").Call(obj, value)
}

func Label_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Label_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Label_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Label_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Label_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetClientHeight").Call(obj)
	return int32(ret)
}

func Label_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Label_SetClientHeight").Call(obj, uintptr(value))
}

func Label_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Label_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Label_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Label_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Label_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetClientWidth").Call(obj)
	return int32(ret)
}

func Label_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Label_SetClientWidth").Call(obj, uintptr(value))
}

func Label_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Label_GetControlState").Call(obj)
	return TControlState(ret)
}

func Label_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Label_SetControlState").Call(obj, uintptr(value))
}

func Label_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Label_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Label_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Label_SetControlStyle").Call(obj, uintptr(value))
}

func Label_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Label_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Label_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetParent").Call(obj)
	return ret
}

func Label_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Label_SetParent").Call(obj, value)
}

func Label_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetLeft").Call(obj)
	return int32(ret)
}

func Label_SetLeft(obj uintptr, value int32) {
	getLazyProc("Label_SetLeft").Call(obj, uintptr(value))
}

func Label_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetTop").Call(obj)
	return int32(ret)
}

func Label_SetTop(obj uintptr, value int32) {
	getLazyProc("Label_SetTop").Call(obj, uintptr(value))
}

func Label_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetWidth").Call(obj)
	return int32(ret)
}

func Label_SetWidth(obj uintptr, value int32) {
	getLazyProc("Label_SetWidth").Call(obj, uintptr(value))
}

func Label_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetHeight").Call(obj)
	return int32(ret)
}

func Label_SetHeight(obj uintptr, value int32) {
	getLazyProc("Label_SetHeight").Call(obj, uintptr(value))
}

func Label_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Label_GetCursor").Call(obj)
	return TCursor(ret)
}

func Label_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Label_SetCursor").Call(obj, uintptr(value))
}

func Label_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Label_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Label_SetHint(obj uintptr, value string) {
	getLazyProc("Label_SetHint").Call(obj, GoStrToDStr(value))
}

func Label_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetComponentCount").Call(obj)
	return int32(ret)
}

func Label_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Label_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Label_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Label_SetComponentIndex").Call(obj, uintptr(value))
}

func Label_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetOwner").Call(obj)
	return ret
}

func Label_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Label_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Label_SetName(obj uintptr, value string) {
	getLazyProc("Label_SetName").Call(obj, GoStrToDStr(value))
}

func Label_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Label_GetTag").Call(obj)
	return int(ret)
}

func Label_SetTag(obj uintptr, value int) {
	getLazyProc("Label_SetTag").Call(obj, uintptr(value))
}

func Label_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetAnchorSideLeft").Call(obj)
	return ret
}

func Label_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Label_SetAnchorSideLeft").Call(obj, value)
}

func Label_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetAnchorSideTop").Call(obj)
	return ret
}

func Label_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Label_SetAnchorSideTop").Call(obj, value)
}

func Label_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetAnchorSideRight").Call(obj)
	return ret
}

func Label_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Label_SetAnchorSideRight").Call(obj, value)
}

func Label_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetAnchorSideBottom").Call(obj)
	return ret
}

func Label_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Label_SetAnchorSideBottom").Call(obj, value)
}

func Label_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Label_GetBorderSpacing").Call(obj)
	return ret
}

func Label_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Label_SetBorderSpacing").Call(obj, value)
}

func Label_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Label_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Label_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Label_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Label_StaticClassType() TClass {
	r, _, _ := getLazyProc("Label_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TListBox ---------------------------

func ListBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_Create").Call(obj)
	return ret
}

func ListBox_Free(obj uintptr) {
	getLazyProc("ListBox_Free").Call(obj)
}

func ListBox_AddItem(obj uintptr, Item string, AObject uintptr) {
	getLazyProc("ListBox_AddItem").Call(obj, GoStrToDStr(Item), AObject)
}

func ListBox_Clear(obj uintptr) {
	getLazyProc("ListBox_Clear").Call(obj)
}

func ListBox_ClearSelection(obj uintptr) {
	getLazyProc("ListBox_ClearSelection").Call(obj)
}

func ListBox_DeleteSelected(obj uintptr) {
	getLazyProc("ListBox_DeleteSelected").Call(obj)
}

func ListBox_ItemAtPos(obj uintptr, Pos TPoint, Existing bool) int32 {
	ret, _, _ := getLazyProc("ListBox_ItemAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(Existing))
	return int32(ret)
}

func ListBox_ItemRect(obj uintptr, Index int32) TRect {
	var ret TRect
	getLazyProc("ListBox_ItemRect").Call(obj, uintptr(Index), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_SelectAll(obj uintptr) {
	getLazyProc("ListBox_SelectAll").Call(obj)
}

func ListBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ListBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ListBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ListBox_DisableAlign(obj uintptr) {
	getLazyProc("ListBox_DisableAlign").Call(obj)
}

func ListBox_EnableAlign(obj uintptr) {
	getLazyProc("ListBox_EnableAlign").Call(obj)
}

func ListBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ListBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ListBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ListBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ListBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ListBox_InsertControl").Call(obj, AControl)
}

func ListBox_Invalidate(obj uintptr) {
	getLazyProc("ListBox_Invalidate").Call(obj)
}

func ListBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ListBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ListBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ListBox_RemoveControl").Call(obj, AControl)
}

func ListBox_Realign(obj uintptr) {
	getLazyProc("ListBox_Realign").Call(obj)
}

func ListBox_Repaint(obj uintptr) {
	getLazyProc("ListBox_Repaint").Call(obj)
}

func ListBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ListBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ListBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ListBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ListBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ListBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ListBox_SetFocus(obj uintptr) {
	getLazyProc("ListBox_SetFocus").Call(obj)
}

func ListBox_Update(obj uintptr) {
	getLazyProc("ListBox_Update").Call(obj)
}

func ListBox_BringToFront(obj uintptr) {
	getLazyProc("ListBox_BringToFront").Call(obj)
}

func ListBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ListBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ListBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_Hide(obj uintptr) {
	getLazyProc("ListBox_Hide").Call(obj)
}

func ListBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ListBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ListBox_Refresh(obj uintptr) {
	getLazyProc("ListBox_Refresh").Call(obj)
}

func ListBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ListBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ListBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_SendToBack(obj uintptr) {
	getLazyProc("ListBox_SendToBack").Call(obj)
}

func ListBox_Show(obj uintptr) {
	getLazyProc("ListBox_Show").Call(obj)
}

func ListBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ListBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ListBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetTextLen").Call(obj)
	return int32(ret)
}

func ListBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ListBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ListBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ListBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ListBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ListBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ListBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ListBox_Assign").Call(obj, Source)
}

func ListBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ListBox_ClassType").Call(obj)
	return TClass(ret)
}

func ListBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ListBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_InstanceSize").Call(obj)
	return int32(ret)
}

func ListBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ListBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ListBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ListBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetHashCode").Call(obj)
	return int32(ret)
}

func ListBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ListBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ListBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ListBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ListBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ListBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ListBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ListBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ListBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ListBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ListBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ListBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ListBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ListBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ListBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ListBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func ListBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ListBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ListBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ListBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ListBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ListBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ListBox_GetClickOnSelChange(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetClickOnSelChange").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetClickOnSelChange(obj uintptr, value bool) {
	getLazyProc("ListBox_SetClickOnSelChange").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetOptions(obj uintptr) TListBoxOptions {
	ret, _, _ := getLazyProc("ListBox_GetOptions").Call(obj)
	return TListBoxOptions(ret)
}

func ListBox_SetOptions(obj uintptr, value TListBoxOptions) {
	getLazyProc("ListBox_SetOptions").Call(obj, uintptr(value))
}

func ListBox_GetTopIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetTopIndex").Call(obj)
	return int32(ret)
}

func ListBox_SetTopIndex(obj uintptr, value int32) {
	getLazyProc("ListBox_SetTopIndex").Call(obj, uintptr(value))
}

func ListBox_GetStyle(obj uintptr) TListBoxStyle {
	ret, _, _ := getLazyProc("ListBox_GetStyle").Call(obj)
	return TListBoxStyle(ret)
}

func ListBox_SetStyle(obj uintptr, value TListBoxStyle) {
	getLazyProc("ListBox_SetStyle").Call(obj, uintptr(value))
}

func ListBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ListBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func ListBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ListBox_SetAlign").Call(obj, uintptr(value))
}

func ListBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ListBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ListBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ListBox_SetAnchors").Call(obj, uintptr(value))
}

func ListBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ListBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ListBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ListBox_SetBiDiMode").Call(obj, uintptr(value))
}

func ListBox_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("ListBox_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func ListBox_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("ListBox_SetBorderStyle").Call(obj, uintptr(value))
}

func ListBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ListBox_GetColor").Call(obj)
	return TColor(ret)
}

func ListBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("ListBox_SetColor").Call(obj, uintptr(value))
}

func ListBox_GetColumns(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetColumns").Call(obj)
	return int32(ret)
}

func ListBox_SetColumns(obj uintptr, value int32) {
	getLazyProc("ListBox_SetColumns").Call(obj, uintptr(value))
}

func ListBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetConstraints").Call(obj)
	return ret
}

func ListBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetConstraints").Call(obj, value)
}

func ListBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ListBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ListBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ListBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ListBox_SetDragCursor").Call(obj, uintptr(value))
}

func ListBox_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ListBox_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ListBox_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ListBox_SetDragKind").Call(obj, uintptr(value))
}

func ListBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ListBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ListBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ListBox_SetDragMode").Call(obj, uintptr(value))
}

func ListBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ListBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetExtendedSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetExtendedSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetExtendedSelect(obj uintptr, value bool) {
	getLazyProc("ListBox_SetExtendedSelect").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetFont").Call(obj)
	return ret
}

func ListBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetFont").Call(obj, value)
}

func ListBox_GetItemHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetItemHeight").Call(obj)
	return int32(ret)
}

func ListBox_SetItemHeight(obj uintptr, value int32) {
	getLazyProc("ListBox_SetItemHeight").Call(obj, uintptr(value))
}

func ListBox_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetItems").Call(obj)
	return ret
}

func ListBox_SetItems(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetItems").Call(obj, value)
}

func ListBox_GetMultiSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetMultiSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetMultiSelect(obj uintptr, value bool) {
	getLazyProc("ListBox_SetMultiSelect").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ListBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ListBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ListBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ListBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetPopupMenu").Call(obj)
	return ret
}

func ListBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetPopupMenu").Call(obj, value)
}

func ListBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ListBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetSorted(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetSorted").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetSorted(obj uintptr, value bool) {
	getLazyProc("ListBox_SetSorted").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ListBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ListBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ListBox_SetTabOrder").Call(obj, uintptr(value))
}

func ListBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ListBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("ListBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ListBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnDrawItem(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnDrawItem").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnMeasureItem(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnMeasureItem").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ListBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ListBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ListBox_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetCanvas").Call(obj)
	return ret
}

func ListBox_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetCount").Call(obj)
	return int32(ret)
}

func ListBox_GetSelCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetSelCount").Call(obj)
	return int32(ret)
}

func ListBox_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetItemIndex").Call(obj)
	return int32(ret)
}

func ListBox_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("ListBox_SetItemIndex").Call(obj, uintptr(value))
}

func ListBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ListBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ListBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ListBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetBrush").Call(obj)
	return ret
}

func ListBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetControlCount").Call(obj)
	return int32(ret)
}

func ListBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ListBox_GetHandle").Call(obj)
	return HWND(ret)
}

func ListBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ListBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ListBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ListBox_SetParentWindow").Call(obj, uintptr(value))
}

func ListBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ListBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ListBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetAction").Call(obj)
	return ret
}

func ListBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetAction").Call(obj, value)
}

func ListBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ListBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ListBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ListBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func ListBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ListBox_SetClientHeight").Call(obj, uintptr(value))
}

func ListBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ListBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ListBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func ListBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ListBox_SetClientWidth").Call(obj, uintptr(value))
}

func ListBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ListBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func ListBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ListBox_SetControlState").Call(obj, uintptr(value))
}

func ListBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ListBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ListBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ListBox_SetControlStyle").Call(obj, uintptr(value))
}

func ListBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ListBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetParent").Call(obj)
	return ret
}

func ListBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetParent").Call(obj, value)
}

func ListBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetLeft").Call(obj)
	return int32(ret)
}

func ListBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("ListBox_SetLeft").Call(obj, uintptr(value))
}

func ListBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetTop").Call(obj)
	return int32(ret)
}

func ListBox_SetTop(obj uintptr, value int32) {
	getLazyProc("ListBox_SetTop").Call(obj, uintptr(value))
}

func ListBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetWidth").Call(obj)
	return int32(ret)
}

func ListBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("ListBox_SetWidth").Call(obj, uintptr(value))
}

func ListBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetHeight").Call(obj)
	return int32(ret)
}

func ListBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("ListBox_SetHeight").Call(obj, uintptr(value))
}

func ListBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ListBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func ListBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ListBox_SetCursor").Call(obj, uintptr(value))
}

func ListBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ListBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ListBox_SetHint(obj uintptr, value string) {
	getLazyProc("ListBox_SetHint").Call(obj, GoStrToDStr(value))
}

func ListBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func ListBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ListBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ListBox_SetComponentIndex").Call(obj, uintptr(value))
}

func ListBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetOwner").Call(obj)
	return ret
}

func ListBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ListBox_SetName(obj uintptr, value string) {
	getLazyProc("ListBox_SetName").Call(obj, GoStrToDStr(value))
}

func ListBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ListBox_GetTag").Call(obj)
	return int(ret)
}

func ListBox_SetTag(obj uintptr, value int) {
	getLazyProc("ListBox_SetTag").Call(obj, uintptr(value))
}

func ListBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func ListBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetAnchorSideLeft").Call(obj, value)
}

func ListBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetAnchorSideTop").Call(obj)
	return ret
}

func ListBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetAnchorSideTop").Call(obj, value)
}

func ListBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetAnchorSideRight").Call(obj)
	return ret
}

func ListBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetAnchorSideRight").Call(obj, value)
}

func ListBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func ListBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetAnchorSideBottom").Call(obj, value)
}

func ListBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetChildSizing").Call(obj)
	return ret
}

func ListBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetChildSizing").Call(obj, value)
}

func ListBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetBorderSpacing").Call(obj)
	return ret
}

func ListBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ListBox_SetBorderSpacing").Call(obj, value)
}

func ListBox_GetSelected(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("ListBox_GetSelected").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func ListBox_SetSelected(obj uintptr, Index int32, value bool) {
	getLazyProc("ListBox_SetSelected").Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func ListBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ListBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ListBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ListBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ListBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ListBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("ListBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TComboBox ---------------------------

func ComboBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_Create").Call(obj)
	return ret
}

func ComboBox_Free(obj uintptr) {
	getLazyProc("ComboBox_Free").Call(obj)
}

func ComboBox_AddItem(obj uintptr, Item string, AObject uintptr) {
	getLazyProc("ComboBox_AddItem").Call(obj, GoStrToDStr(Item), AObject)
}

func ComboBox_Clear(obj uintptr) {
	getLazyProc("ComboBox_Clear").Call(obj)
}

func ComboBox_ClearSelection(obj uintptr) {
	getLazyProc("ComboBox_ClearSelection").Call(obj)
}

func ComboBox_DeleteSelected(obj uintptr) {
	getLazyProc("ComboBox_DeleteSelected").Call(obj)
}

func ComboBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SelectAll(obj uintptr) {
	getLazyProc("ComboBox_SelectAll").Call(obj)
}

func ComboBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ComboBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ComboBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ComboBox_DisableAlign(obj uintptr) {
	getLazyProc("ComboBox_DisableAlign").Call(obj)
}

func ComboBox_EnableAlign(obj uintptr) {
	getLazyProc("ComboBox_EnableAlign").Call(obj)
}

func ComboBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ComboBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ComboBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ComboBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ComboBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ComboBox_InsertControl").Call(obj, AControl)
}

func ComboBox_Invalidate(obj uintptr) {
	getLazyProc("ComboBox_Invalidate").Call(obj)
}

func ComboBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ComboBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ComboBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ComboBox_RemoveControl").Call(obj, AControl)
}

func ComboBox_Realign(obj uintptr) {
	getLazyProc("ComboBox_Realign").Call(obj)
}

func ComboBox_Repaint(obj uintptr) {
	getLazyProc("ComboBox_Repaint").Call(obj)
}

func ComboBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ComboBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ComboBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ComboBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ComboBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ComboBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ComboBox_SetFocus(obj uintptr) {
	getLazyProc("ComboBox_SetFocus").Call(obj)
}

func ComboBox_Update(obj uintptr) {
	getLazyProc("ComboBox_Update").Call(obj)
}

func ComboBox_BringToFront(obj uintptr) {
	getLazyProc("ComboBox_BringToFront").Call(obj)
}

func ComboBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ComboBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ComboBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_Hide(obj uintptr) {
	getLazyProc("ComboBox_Hide").Call(obj)
}

func ComboBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ComboBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ComboBox_Refresh(obj uintptr) {
	getLazyProc("ComboBox_Refresh").Call(obj)
}

func ComboBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ComboBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ComboBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBox_SendToBack(obj uintptr) {
	getLazyProc("ComboBox_SendToBack").Call(obj)
}

func ComboBox_Show(obj uintptr) {
	getLazyProc("ComboBox_Show").Call(obj)
}

func ComboBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ComboBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ComboBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetTextLen").Call(obj)
	return int32(ret)
}

func ComboBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ComboBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ComboBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ComboBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ComboBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ComboBox_Assign").Call(obj, Source)
}

func ComboBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ComboBox_ClassType").Call(obj)
	return TClass(ret)
}

func ComboBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_InstanceSize").Call(obj)
	return int32(ret)
}

func ComboBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ComboBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ComboBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ComboBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetHashCode").Call(obj)
	return int32(ret)
}

func ComboBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ComboBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ComboBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ComboBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ComboBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ComboBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ComboBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ComboBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ComboBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ComboBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ComboBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ComboBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ComboBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ComboBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func ComboBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ComboBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ComboBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ComboBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ComboBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ComboBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ComboBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ComboBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func ComboBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ComboBox_SetAlign").Call(obj, uintptr(value))
}

func ComboBox_GetAutoComplete(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetAutoComplete").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetAutoComplete(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetAutoComplete").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetAutoDropDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetAutoDropDown").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetAutoDropDown(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetAutoDropDown").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetStyle(obj uintptr) TComboBoxStyle {
	ret, _, _ := getLazyProc("ComboBox_GetStyle").Call(obj)
	return TComboBoxStyle(ret)
}

func ComboBox_SetStyle(obj uintptr, value TComboBoxStyle) {
	getLazyProc("ComboBox_SetStyle").Call(obj, uintptr(value))
}

func ComboBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ComboBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ComboBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ComboBox_SetAnchors").Call(obj, uintptr(value))
}

func ComboBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ComboBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ComboBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ComboBox_SetBiDiMode").Call(obj, uintptr(value))
}

func ComboBox_GetCharCase(obj uintptr) TEditCharCase {
	ret, _, _ := getLazyProc("ComboBox_GetCharCase").Call(obj)
	return TEditCharCase(ret)
}

func ComboBox_SetCharCase(obj uintptr, value TEditCharCase) {
	getLazyProc("ComboBox_SetCharCase").Call(obj, uintptr(value))
}

func ComboBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ComboBox_GetColor").Call(obj)
	return TColor(ret)
}

func ComboBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("ComboBox_SetColor").Call(obj, uintptr(value))
}

func ComboBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetConstraints").Call(obj)
	return ret
}

func ComboBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetConstraints").Call(obj, value)
}

func ComboBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ComboBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ComboBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ComboBox_SetDragCursor").Call(obj, uintptr(value))
}

func ComboBox_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ComboBox_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ComboBox_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ComboBox_SetDragKind").Call(obj, uintptr(value))
}

func ComboBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ComboBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ComboBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ComboBox_SetDragMode").Call(obj, uintptr(value))
}

func ComboBox_GetDropDownCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetDropDownCount").Call(obj)
	return int32(ret)
}

func ComboBox_SetDropDownCount(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetDropDownCount").Call(obj, uintptr(value))
}

func ComboBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetFont").Call(obj)
	return ret
}

func ComboBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetFont").Call(obj, value)
}

func ComboBox_GetItemHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetItemHeight").Call(obj)
	return int32(ret)
}

func ComboBox_SetItemHeight(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetItemHeight").Call(obj, uintptr(value))
}

func ComboBox_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetItemIndex").Call(obj)
	return int32(ret)
}

func ComboBox_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetItemIndex").Call(obj, uintptr(value))
}

func ComboBox_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetMaxLength").Call(obj)
	return int32(ret)
}

func ComboBox_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetMaxLength").Call(obj, uintptr(value))
}

func ComboBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetPopupMenu").Call(obj)
	return ret
}

func ComboBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetPopupMenu").Call(obj, value)
}

func ComboBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetSorted(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetSorted").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetSorted(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetSorted").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ComboBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ComboBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ComboBox_SetTabOrder").Call(obj, uintptr(value))
}

func ComboBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBox_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBox_SetText(obj uintptr, value string) {
	getLazyProc("ComboBox_SetText").Call(obj, GoStrToDStr(value))
}

func ComboBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ComboBox_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnCloseUp(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnCloseUp").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnDrawItem(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnDrawItem").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnDropDown(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnDropDown").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnMeasureItem(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnMeasureItem").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_SetOnSelect(obj uintptr, fn interface{}) {
	getLazyProc("ComboBox_SetOnSelect").Call(obj, addEventToMap(obj, fn))
}

func ComboBox_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetItems").Call(obj)
	return ret
}

func ComboBox_SetItems(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetItems").Call(obj, value)
}

func ComboBox_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBox_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBox_SetSelText(obj uintptr, value string) {
	getLazyProc("ComboBox_SetSelText").Call(obj, GoStrToDStr(value))
}

func ComboBox_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetCanvas").Call(obj)
	return ret
}

func ComboBox_GetDroppedDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetDroppedDown").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetDroppedDown(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetDroppedDown").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetSelLength").Call(obj)
	return int32(ret)
}

func ComboBox_SetSelLength(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetSelLength").Call(obj, uintptr(value))
}

func ComboBox_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetSelStart").Call(obj)
	return int32(ret)
}

func ComboBox_SetSelStart(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetSelStart").Call(obj, uintptr(value))
}

func ComboBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ComboBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ComboBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetBrush").Call(obj)
	return ret
}

func ComboBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetControlCount").Call(obj)
	return int32(ret)
}

func ComboBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ComboBox_GetHandle").Call(obj)
	return HWND(ret)
}

func ComboBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ComboBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ComboBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ComboBox_SetParentWindow").Call(obj, uintptr(value))
}

func ComboBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ComboBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetAction").Call(obj)
	return ret
}

func ComboBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetAction").Call(obj, value)
}

func ComboBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ComboBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ComboBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ComboBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func ComboBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetClientHeight").Call(obj, uintptr(value))
}

func ComboBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ComboBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ComboBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func ComboBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetClientWidth").Call(obj, uintptr(value))
}

func ComboBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ComboBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func ComboBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ComboBox_SetControlState").Call(obj, uintptr(value))
}

func ComboBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ComboBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ComboBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ComboBox_SetControlStyle").Call(obj, uintptr(value))
}

func ComboBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetParent").Call(obj)
	return ret
}

func ComboBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetParent").Call(obj, value)
}

func ComboBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetLeft").Call(obj)
	return int32(ret)
}

func ComboBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetLeft").Call(obj, uintptr(value))
}

func ComboBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetTop").Call(obj)
	return int32(ret)
}

func ComboBox_SetTop(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetTop").Call(obj, uintptr(value))
}

func ComboBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetWidth").Call(obj)
	return int32(ret)
}

func ComboBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetWidth").Call(obj, uintptr(value))
}

func ComboBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetHeight").Call(obj)
	return int32(ret)
}

func ComboBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetHeight").Call(obj, uintptr(value))
}

func ComboBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ComboBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func ComboBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ComboBox_SetCursor").Call(obj, uintptr(value))
}

func ComboBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBox_SetHint(obj uintptr, value string) {
	getLazyProc("ComboBox_SetHint").Call(obj, GoStrToDStr(value))
}

func ComboBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func ComboBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ComboBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ComboBox_SetComponentIndex").Call(obj, uintptr(value))
}

func ComboBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetOwner").Call(obj)
	return ret
}

func ComboBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBox_SetName(obj uintptr, value string) {
	getLazyProc("ComboBox_SetName").Call(obj, GoStrToDStr(value))
}

func ComboBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ComboBox_GetTag").Call(obj)
	return int(ret)
}

func ComboBox_SetTag(obj uintptr, value int) {
	getLazyProc("ComboBox_SetTag").Call(obj, uintptr(value))
}

func ComboBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func ComboBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetAnchorSideLeft").Call(obj, value)
}

func ComboBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetAnchorSideTop").Call(obj)
	return ret
}

func ComboBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetAnchorSideTop").Call(obj, value)
}

func ComboBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetAnchorSideRight").Call(obj)
	return ret
}

func ComboBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetAnchorSideRight").Call(obj, value)
}

func ComboBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func ComboBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetAnchorSideBottom").Call(obj, value)
}

func ComboBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetChildSizing").Call(obj)
	return ret
}

func ComboBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetChildSizing").Call(obj, value)
}

func ComboBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetBorderSpacing").Call(obj)
	return ret
}

func ComboBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ComboBox_SetBorderSpacing").Call(obj, value)
}

func ComboBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ComboBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ComboBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ComboBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ComboBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ComboBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("ComboBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPanel ---------------------------

func Panel_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_Create").Call(obj)
	return ret
}

func Panel_Free(obj uintptr) {
	getLazyProc("Panel_Free").Call(obj)
}

func Panel_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("Panel_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func Panel_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("Panel_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func Panel_DisableAlign(obj uintptr) {
	getLazyProc("Panel_DisableAlign").Call(obj)
}

func Panel_EnableAlign(obj uintptr) {
	getLazyProc("Panel_EnableAlign").Call(obj)
}

func Panel_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("Panel_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func Panel_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("Panel_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func Panel_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("Panel_InsertControl").Call(obj, AControl)
}

func Panel_Invalidate(obj uintptr) {
	getLazyProc("Panel_Invalidate").Call(obj)
}

func Panel_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("Panel_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func Panel_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("Panel_RemoveControl").Call(obj, AControl)
}

func Panel_Realign(obj uintptr) {
	getLazyProc("Panel_Realign").Call(obj)
}

func Panel_Repaint(obj uintptr) {
	getLazyProc("Panel_Repaint").Call(obj)
}

func Panel_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("Panel_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func Panel_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("Panel_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func Panel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Panel_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Panel_SetFocus(obj uintptr) {
	getLazyProc("Panel_SetFocus").Call(obj)
}

func Panel_Update(obj uintptr) {
	getLazyProc("Panel_Update").Call(obj)
}

func Panel_BringToFront(obj uintptr) {
	getLazyProc("Panel_BringToFront").Call(obj)
}

func Panel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Panel_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Panel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Panel_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Panel_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_Hide(obj uintptr) {
	getLazyProc("Panel_Hide").Call(obj)
}

func Panel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Panel_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Panel_Refresh(obj uintptr) {
	getLazyProc("Panel_Refresh").Call(obj)
}

func Panel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Panel_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Panel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Panel_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Panel_SendToBack(obj uintptr) {
	getLazyProc("Panel_SendToBack").Call(obj)
}

func Panel_Show(obj uintptr) {
	getLazyProc("Panel_Show").Call(obj)
}

func Panel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Panel_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Panel_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetTextLen").Call(obj)
	return int32(ret)
}

func Panel_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Panel_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Panel_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Panel_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Panel_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Panel_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Panel_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Panel_Assign").Call(obj, Source)
}

func Panel_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Panel_ClassType").Call(obj)
	return TClass(ret)
}

func Panel_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Panel_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Panel_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_InstanceSize").Call(obj)
	return int32(ret)
}

func Panel_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Panel_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Panel_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Panel_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetHashCode").Call(obj)
	return int32(ret)
}

func Panel_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Panel_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Panel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Panel_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Panel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Panel_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Panel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Panel_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Panel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Panel_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Panel_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Panel_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Panel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Panel_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Panel_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Panel_AnchorClient").Call(obj, uintptr(ASpace))
}

func Panel_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Panel_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Panel_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Panel_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Panel_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Panel_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Panel_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Panel_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Panel_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Panel_GetAlign").Call(obj)
	return TAlign(ret)
}

func Panel_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Panel_SetAlign").Call(obj, uintptr(value))
}

func Panel_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("Panel_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func Panel_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("Panel_SetAlignment").Call(obj, uintptr(value))
}

func Panel_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Panel_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Panel_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Panel_SetAnchors").Call(obj, uintptr(value))
}

func Panel_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("Panel_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func Panel_GetBevelInner(obj uintptr) TBevelCut {
	ret, _, _ := getLazyProc("Panel_GetBevelInner").Call(obj)
	return TBevelCut(ret)
}

func Panel_SetBevelInner(obj uintptr, value TBevelCut) {
	getLazyProc("Panel_SetBevelInner").Call(obj, uintptr(value))
}

func Panel_GetBevelOuter(obj uintptr) TBevelCut {
	ret, _, _ := getLazyProc("Panel_GetBevelOuter").Call(obj)
	return TBevelCut(ret)
}

func Panel_SetBevelOuter(obj uintptr, value TBevelCut) {
	getLazyProc("Panel_SetBevelOuter").Call(obj, uintptr(value))
}

func Panel_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Panel_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Panel_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Panel_SetBiDiMode").Call(obj, uintptr(value))
}

func Panel_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetBorderWidth").Call(obj)
	return int32(ret)
}

func Panel_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("Panel_SetBorderWidth").Call(obj, uintptr(value))
}

func Panel_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("Panel_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func Panel_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("Panel_SetBorderStyle").Call(obj, uintptr(value))
}

func Panel_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("Panel_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func Panel_SetCaption(obj uintptr, value string) {
	getLazyProc("Panel_SetCaption").Call(obj, GoStrToDStr(value))
}

func Panel_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Panel_GetColor").Call(obj)
	return TColor(ret)
}

func Panel_SetColor(obj uintptr, value TColor) {
	getLazyProc("Panel_SetColor").Call(obj, uintptr(value))
}

func Panel_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetConstraints").Call(obj)
	return ret
}

func Panel_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetConstraints").Call(obj, value)
}

func Panel_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("Panel_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func Panel_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetDockSite(obj uintptr, value bool) {
	getLazyProc("Panel_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func Panel_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Panel_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Panel_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Panel_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Panel_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Panel_SetDragCursor").Call(obj, uintptr(value))
}

func Panel_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Panel_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Panel_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Panel_SetDragKind").Call(obj, uintptr(value))
}

func Panel_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Panel_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Panel_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Panel_SetDragMode").Call(obj, uintptr(value))
}

func Panel_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Panel_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Panel_GetFullRepaint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetFullRepaint").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetFullRepaint(obj uintptr, value bool) {
	getLazyProc("Panel_SetFullRepaint").Call(obj, GoBoolToDBool(value))
}

func Panel_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetFont").Call(obj)
	return ret
}

func Panel_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetFont").Call(obj, value)
}

func Panel_GetParentBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetParentBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetParentBackground(obj uintptr, value bool) {
	getLazyProc("Panel_SetParentBackground").Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetParentColor(obj uintptr, value bool) {
	getLazyProc("Panel_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Panel_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Panel_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Panel_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Panel_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetPopupMenu").Call(obj)
	return ret
}

func Panel_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetPopupMenu").Call(obj, value)
}

func Panel_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Panel_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Panel_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("Panel_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func Panel_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("Panel_SetTabOrder").Call(obj, uintptr(value))
}

func Panel_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetTabStop(obj uintptr, value bool) {
	getLazyProc("Panel_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func Panel_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_SetVisible(obj uintptr, value bool) {
	getLazyProc("Panel_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Panel_SetOnAlignPosition(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnAlignPosition").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func Panel_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("Panel_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func Panel_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetDockClientCount").Call(obj)
	return int32(ret)
}

func Panel_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func Panel_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetBrush").Call(obj)
	return ret
}

func Panel_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetControlCount").Call(obj)
	return int32(ret)
}

func Panel_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Panel_GetHandle").Call(obj)
	return HWND(ret)
}

func Panel_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Panel_GetParentWindow").Call(obj)
	return HWND(ret)
}

func Panel_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("Panel_SetParentWindow").Call(obj, uintptr(value))
}

func Panel_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetAction").Call(obj)
	return ret
}

func Panel_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetAction").Call(obj, value)
}

func Panel_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Panel_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Panel_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Panel_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Panel_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetClientHeight").Call(obj)
	return int32(ret)
}

func Panel_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Panel_SetClientHeight").Call(obj, uintptr(value))
}

func Panel_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Panel_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Panel_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Panel_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Panel_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetClientWidth").Call(obj)
	return int32(ret)
}

func Panel_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Panel_SetClientWidth").Call(obj, uintptr(value))
}

func Panel_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Panel_GetControlState").Call(obj)
	return TControlState(ret)
}

func Panel_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Panel_SetControlState").Call(obj, uintptr(value))
}

func Panel_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Panel_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Panel_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Panel_SetControlStyle").Call(obj, uintptr(value))
}

func Panel_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Panel_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Panel_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetParent").Call(obj)
	return ret
}

func Panel_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetParent").Call(obj, value)
}

func Panel_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetLeft").Call(obj)
	return int32(ret)
}

func Panel_SetLeft(obj uintptr, value int32) {
	getLazyProc("Panel_SetLeft").Call(obj, uintptr(value))
}

func Panel_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetTop").Call(obj)
	return int32(ret)
}

func Panel_SetTop(obj uintptr, value int32) {
	getLazyProc("Panel_SetTop").Call(obj, uintptr(value))
}

func Panel_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetWidth").Call(obj)
	return int32(ret)
}

func Panel_SetWidth(obj uintptr, value int32) {
	getLazyProc("Panel_SetWidth").Call(obj, uintptr(value))
}

func Panel_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetHeight").Call(obj)
	return int32(ret)
}

func Panel_SetHeight(obj uintptr, value int32) {
	getLazyProc("Panel_SetHeight").Call(obj, uintptr(value))
}

func Panel_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Panel_GetCursor").Call(obj)
	return TCursor(ret)
}

func Panel_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Panel_SetCursor").Call(obj, uintptr(value))
}

func Panel_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Panel_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Panel_SetHint(obj uintptr, value string) {
	getLazyProc("Panel_SetHint").Call(obj, GoStrToDStr(value))
}

func Panel_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetComponentCount").Call(obj)
	return int32(ret)
}

func Panel_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Panel_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Panel_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Panel_SetComponentIndex").Call(obj, uintptr(value))
}

func Panel_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetOwner").Call(obj)
	return ret
}

func Panel_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Panel_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Panel_SetName(obj uintptr, value string) {
	getLazyProc("Panel_SetName").Call(obj, GoStrToDStr(value))
}

func Panel_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Panel_GetTag").Call(obj)
	return int(ret)
}

func Panel_SetTag(obj uintptr, value int) {
	getLazyProc("Panel_SetTag").Call(obj, uintptr(value))
}

func Panel_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetAnchorSideLeft").Call(obj)
	return ret
}

func Panel_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetAnchorSideLeft").Call(obj, value)
}

func Panel_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetAnchorSideTop").Call(obj)
	return ret
}

func Panel_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetAnchorSideTop").Call(obj, value)
}

func Panel_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetAnchorSideRight").Call(obj)
	return ret
}

func Panel_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetAnchorSideRight").Call(obj, value)
}

func Panel_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetAnchorSideBottom").Call(obj)
	return ret
}

func Panel_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetAnchorSideBottom").Call(obj, value)
}

func Panel_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetChildSizing").Call(obj)
	return ret
}

func Panel_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetChildSizing").Call(obj, value)
}

func Panel_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Panel_GetBorderSpacing").Call(obj)
	return ret
}

func Panel_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Panel_SetBorderSpacing").Call(obj, value)
}

func Panel_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Panel_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func Panel_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Panel_GetControls").Call(obj, uintptr(Index))
	return ret
}

func Panel_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Panel_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Panel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Panel_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Panel_StaticClassType() TClass {
	r, _, _ := getLazyProc("Panel_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TImage ---------------------------

func Image_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_Create").Call(obj)
	return ret
}

func Image_Free(obj uintptr) {
	getLazyProc("Image_Free").Call(obj)
}

func Image_BringToFront(obj uintptr) {
	getLazyProc("Image_BringToFront").Call(obj)
}

func Image_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Image_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Image_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Image_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Image_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_Hide(obj uintptr) {
	getLazyProc("Image_Hide").Call(obj)
}

func Image_Invalidate(obj uintptr) {
	getLazyProc("Image_Invalidate").Call(obj)
}

func Image_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Image_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Image_Refresh(obj uintptr) {
	getLazyProc("Image_Refresh").Call(obj)
}

func Image_Repaint(obj uintptr) {
	getLazyProc("Image_Repaint").Call(obj)
}

func Image_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Image_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Image_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Image_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Image_SendToBack(obj uintptr) {
	getLazyProc("Image_SendToBack").Call(obj)
}

func Image_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Image_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Image_Show(obj uintptr) {
	getLazyProc("Image_Show").Call(obj)
}

func Image_Update(obj uintptr) {
	getLazyProc("Image_Update").Call(obj)
}

func Image_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Image_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Image_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetTextLen").Call(obj)
	return int32(ret)
}

func Image_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Image_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Image_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Image_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Image_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Image_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Image_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Image_Assign").Call(obj, Source)
}

func Image_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Image_ClassType").Call(obj)
	return TClass(ret)
}

func Image_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Image_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Image_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_InstanceSize").Call(obj)
	return int32(ret)
}

func Image_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Image_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Image_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Image_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetHashCode").Call(obj)
	return int32(ret)
}

func Image_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Image_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Image_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Image_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Image_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Image_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Image_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Image_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Image_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Image_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Image_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Image_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Image_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Image_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Image_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Image_AnchorClient").Call(obj, uintptr(ASpace))
}

func Image_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Image_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Image_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Image_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Image_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Image_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Image_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Image_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Image_GetAntialiasingMode(obj uintptr) TAntialiasingMode {
	ret, _, _ := getLazyProc("Image_GetAntialiasingMode").Call(obj)
	return TAntialiasingMode(ret)
}

func Image_SetAntialiasingMode(obj uintptr, value TAntialiasingMode) {
	getLazyProc("Image_SetAntialiasingMode").Call(obj, uintptr(value))
}

func Image_GetKeepOriginXWhenClipped(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetKeepOriginXWhenClipped").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetKeepOriginXWhenClipped(obj uintptr, value bool) {
	getLazyProc("Image_SetKeepOriginXWhenClipped").Call(obj, GoBoolToDBool(value))
}

func Image_GetKeepOriginYWhenClipped(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetKeepOriginYWhenClipped").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetKeepOriginYWhenClipped(obj uintptr, value bool) {
	getLazyProc("Image_SetKeepOriginYWhenClipped").Call(obj, GoBoolToDBool(value))
}

func Image_GetStretchInEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetStretchInEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetStretchInEnabled(obj uintptr, value bool) {
	getLazyProc("Image_SetStretchInEnabled").Call(obj, GoBoolToDBool(value))
}

func Image_GetStretchOutEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetStretchOutEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetStretchOutEnabled(obj uintptr, value bool) {
	getLazyProc("Image_SetStretchOutEnabled").Call(obj, GoBoolToDBool(value))
}

func Image_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetCanvas").Call(obj)
	return ret
}

func Image_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Image_GetAlign").Call(obj)
	return TAlign(ret)
}

func Image_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Image_SetAlign").Call(obj, uintptr(value))
}

func Image_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Image_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Image_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Image_SetAnchors").Call(obj, uintptr(value))
}

func Image_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("Image_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func Image_GetCenter(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetCenter").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetCenter(obj uintptr, value bool) {
	getLazyProc("Image_SetCenter").Call(obj, GoBoolToDBool(value))
}

func Image_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetConstraints").Call(obj)
	return ret
}

func Image_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Image_SetConstraints").Call(obj, value)
}

func Image_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Image_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Image_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Image_SetDragCursor").Call(obj, uintptr(value))
}

func Image_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Image_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Image_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Image_SetDragMode").Call(obj, uintptr(value))
}

func Image_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Image_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Image_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Image_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Image_GetPicture(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetPicture").Call(obj)
	return ret
}

func Image_SetPicture(obj uintptr, value uintptr) {
	getLazyProc("Image_SetPicture").Call(obj, value)
}

func Image_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetPopupMenu").Call(obj)
	return ret
}

func Image_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Image_SetPopupMenu").Call(obj, value)
}

func Image_GetProportional(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetProportional").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetProportional(obj uintptr, value bool) {
	getLazyProc("Image_SetProportional").Call(obj, GoBoolToDBool(value))
}

func Image_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Image_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Image_GetStretch(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetStretch").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetStretch(obj uintptr, value bool) {
	getLazyProc("Image_SetStretch").Call(obj, GoBoolToDBool(value))
}

func Image_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetTransparent(obj uintptr, value bool) {
	getLazyProc("Image_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func Image_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_SetVisible(obj uintptr, value bool) {
	getLazyProc("Image_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Image_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Image_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Image_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Image_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetAction").Call(obj)
	return ret
}

func Image_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Image_SetAction").Call(obj, value)
}

func Image_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Image_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Image_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Image_SetBiDiMode").Call(obj, uintptr(value))
}

func Image_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Image_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Image_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Image_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Image_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetClientHeight").Call(obj)
	return int32(ret)
}

func Image_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Image_SetClientHeight").Call(obj, uintptr(value))
}

func Image_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Image_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Image_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Image_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Image_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetClientWidth").Call(obj)
	return int32(ret)
}

func Image_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Image_SetClientWidth").Call(obj, uintptr(value))
}

func Image_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Image_GetControlState").Call(obj)
	return TControlState(ret)
}

func Image_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Image_SetControlState").Call(obj, uintptr(value))
}

func Image_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Image_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Image_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Image_SetControlStyle").Call(obj, uintptr(value))
}

func Image_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Image_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Image_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetParent").Call(obj)
	return ret
}

func Image_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Image_SetParent").Call(obj, value)
}

func Image_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetLeft").Call(obj)
	return int32(ret)
}

func Image_SetLeft(obj uintptr, value int32) {
	getLazyProc("Image_SetLeft").Call(obj, uintptr(value))
}

func Image_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetTop").Call(obj)
	return int32(ret)
}

func Image_SetTop(obj uintptr, value int32) {
	getLazyProc("Image_SetTop").Call(obj, uintptr(value))
}

func Image_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetWidth").Call(obj)
	return int32(ret)
}

func Image_SetWidth(obj uintptr, value int32) {
	getLazyProc("Image_SetWidth").Call(obj, uintptr(value))
}

func Image_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetHeight").Call(obj)
	return int32(ret)
}

func Image_SetHeight(obj uintptr, value int32) {
	getLazyProc("Image_SetHeight").Call(obj, uintptr(value))
}

func Image_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Image_GetCursor").Call(obj)
	return TCursor(ret)
}

func Image_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Image_SetCursor").Call(obj, uintptr(value))
}

func Image_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Image_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Image_SetHint(obj uintptr, value string) {
	getLazyProc("Image_SetHint").Call(obj, GoStrToDStr(value))
}

func Image_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetComponentCount").Call(obj)
	return int32(ret)
}

func Image_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Image_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Image_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Image_SetComponentIndex").Call(obj, uintptr(value))
}

func Image_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetOwner").Call(obj)
	return ret
}

func Image_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Image_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Image_SetName(obj uintptr, value string) {
	getLazyProc("Image_SetName").Call(obj, GoStrToDStr(value))
}

func Image_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Image_GetTag").Call(obj)
	return int(ret)
}

func Image_SetTag(obj uintptr, value int) {
	getLazyProc("Image_SetTag").Call(obj, uintptr(value))
}

func Image_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetAnchorSideLeft").Call(obj)
	return ret
}

func Image_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Image_SetAnchorSideLeft").Call(obj, value)
}

func Image_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetAnchorSideTop").Call(obj)
	return ret
}

func Image_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Image_SetAnchorSideTop").Call(obj, value)
}

func Image_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetAnchorSideRight").Call(obj)
	return ret
}

func Image_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Image_SetAnchorSideRight").Call(obj, value)
}

func Image_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetAnchorSideBottom").Call(obj)
	return ret
}

func Image_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Image_SetAnchorSideBottom").Call(obj, value)
}

func Image_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Image_GetBorderSpacing").Call(obj)
	return ret
}

func Image_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Image_SetBorderSpacing").Call(obj, value)
}

func Image_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Image_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Image_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Image_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Image_StaticClassType() TClass {
	r, _, _ := getLazyProc("Image_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TLinkLabel ---------------------------

func LinkLabel_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_Create").Call(obj)
	return ret
}

func LinkLabel_Free(obj uintptr) {
	getLazyProc("LinkLabel_Free").Call(obj)
}

func LinkLabel_Invalidate(obj uintptr) {
	getLazyProc("LinkLabel_Invalidate").Call(obj)
}

func LinkLabel_Repaint(obj uintptr) {
	getLazyProc("LinkLabel_Repaint").Call(obj)
}

func LinkLabel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("LinkLabel_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func LinkLabel_Update(obj uintptr) {
	getLazyProc("LinkLabel_Update").Call(obj)
}

func LinkLabel_BringToFront(obj uintptr) {
	getLazyProc("LinkLabel_BringToFront").Call(obj)
}

func LinkLabel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("LinkLabel_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LinkLabel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("LinkLabel_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LinkLabel_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_Hide(obj uintptr) {
	getLazyProc("LinkLabel_Hide").Call(obj)
}

func LinkLabel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("LinkLabel_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func LinkLabel_Refresh(obj uintptr) {
	getLazyProc("LinkLabel_Refresh").Call(obj)
}

func LinkLabel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("LinkLabel_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LinkLabel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("LinkLabel_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LinkLabel_SendToBack(obj uintptr) {
	getLazyProc("LinkLabel_SendToBack").Call(obj)
}

func LinkLabel_Show(obj uintptr) {
	getLazyProc("LinkLabel_Show").Call(obj)
}

func LinkLabel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("LinkLabel_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func LinkLabel_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetTextLen").Call(obj)
	return int32(ret)
}

func LinkLabel_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("LinkLabel_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func LinkLabel_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func LinkLabel_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("LinkLabel_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func LinkLabel_Assign(obj uintptr, Source uintptr) {
	getLazyProc("LinkLabel_Assign").Call(obj, Source)
}

func LinkLabel_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("LinkLabel_ClassType").Call(obj)
	return TClass(ret)
}

func LinkLabel_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("LinkLabel_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func LinkLabel_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_InstanceSize").Call(obj)
	return int32(ret)
}

func LinkLabel_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("LinkLabel_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func LinkLabel_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetHashCode").Call(obj)
	return int32(ret)
}

func LinkLabel_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("LinkLabel_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func LinkLabel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("LinkLabel_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func LinkLabel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("LinkLabel_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func LinkLabel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("LinkLabel_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func LinkLabel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("LinkLabel_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func LinkLabel_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("LinkLabel_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func LinkLabel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("LinkLabel_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func LinkLabel_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("LinkLabel_AnchorClient").Call(obj, uintptr(ASpace))
}

func LinkLabel_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LinkLabel_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LinkLabel_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("LinkLabel_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func LinkLabel_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("LinkLabel_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func LinkLabel_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("LinkLabel_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func LinkLabel_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("LinkLabel_GetAlign").Call(obj)
	return TAlign(ret)
}

func LinkLabel_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("LinkLabel_SetAlign").Call(obj, uintptr(value))
}

func LinkLabel_GetAlignment(obj uintptr) TLinkAlignment {
	ret, _, _ := getLazyProc("LinkLabel_GetAlignment").Call(obj)
	return TLinkAlignment(ret)
}

func LinkLabel_SetAlignment(obj uintptr, value TLinkAlignment) {
	getLazyProc("LinkLabel_SetAlignment").Call(obj, uintptr(value))
}

func LinkLabel_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("LinkLabel_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func LinkLabel_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("LinkLabel_SetAnchors").Call(obj, uintptr(value))
}

func LinkLabel_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("LinkLabel_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("LinkLabel_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func LinkLabel_SetCaption(obj uintptr, value string) {
	getLazyProc("LinkLabel_SetCaption").Call(obj, GoStrToDStr(value))
}

func LinkLabel_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("LinkLabel_GetColor").Call(obj)
	return TColor(ret)
}

func LinkLabel_SetColor(obj uintptr, value TColor) {
	getLazyProc("LinkLabel_SetColor").Call(obj, uintptr(value))
}

func LinkLabel_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetConstraints").Call(obj)
	return ret
}

func LinkLabel_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetConstraints").Call(obj, value)
}

func LinkLabel_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("LinkLabel_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func LinkLabel_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("LinkLabel_SetDragCursor").Call(obj, uintptr(value))
}

func LinkLabel_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("LinkLabel_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func LinkLabel_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("LinkLabel_SetDragKind").Call(obj, uintptr(value))
}

func LinkLabel_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("LinkLabel_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func LinkLabel_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("LinkLabel_SetDragMode").Call(obj, uintptr(value))
}

func LinkLabel_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_SetEnabled(obj uintptr, value bool) {
	getLazyProc("LinkLabel_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetFont").Call(obj)
	return ret
}

func LinkLabel_SetFont(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetFont").Call(obj, value)
}

func LinkLabel_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_SetParentColor(obj uintptr, value bool) {
	getLazyProc("LinkLabel_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_SetParentFont(obj uintptr, value bool) {
	getLazyProc("LinkLabel_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("LinkLabel_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetPopupMenu").Call(obj)
	return ret
}

func LinkLabel_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetPopupMenu").Call(obj, value)
}

func LinkLabel_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_SetShowHint(obj uintptr, value bool) {
	getLazyProc("LinkLabel_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_SetVisible(obj uintptr, value bool) {
	getLazyProc("LinkLabel_SetVisible").Call(obj, GoBoolToDBool(value))
}

func LinkLabel_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_SetOnLinkClick(obj uintptr, fn interface{}) {
	getLazyProc("LinkLabel_SetOnLinkClick").Call(obj, addEventToMap(obj, fn))
}

func LinkLabel_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetAction").Call(obj)
	return ret
}

func LinkLabel_SetAction(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetAction").Call(obj, value)
}

func LinkLabel_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("LinkLabel_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func LinkLabel_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("LinkLabel_SetBiDiMode").Call(obj, uintptr(value))
}

func LinkLabel_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("LinkLabel_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LinkLabel_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("LinkLabel_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func LinkLabel_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetClientHeight").Call(obj)
	return int32(ret)
}

func LinkLabel_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("LinkLabel_SetClientHeight").Call(obj, uintptr(value))
}

func LinkLabel_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("LinkLabel_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LinkLabel_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("LinkLabel_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LinkLabel_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetClientWidth").Call(obj)
	return int32(ret)
}

func LinkLabel_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("LinkLabel_SetClientWidth").Call(obj, uintptr(value))
}

func LinkLabel_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("LinkLabel_GetControlState").Call(obj)
	return TControlState(ret)
}

func LinkLabel_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("LinkLabel_SetControlState").Call(obj, uintptr(value))
}

func LinkLabel_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("LinkLabel_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func LinkLabel_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("LinkLabel_SetControlStyle").Call(obj, uintptr(value))
}

func LinkLabel_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("LinkLabel_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func LinkLabel_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetParent").Call(obj)
	return ret
}

func LinkLabel_SetParent(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetParent").Call(obj, value)
}

func LinkLabel_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetLeft").Call(obj)
	return int32(ret)
}

func LinkLabel_SetLeft(obj uintptr, value int32) {
	getLazyProc("LinkLabel_SetLeft").Call(obj, uintptr(value))
}

func LinkLabel_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetTop").Call(obj)
	return int32(ret)
}

func LinkLabel_SetTop(obj uintptr, value int32) {
	getLazyProc("LinkLabel_SetTop").Call(obj, uintptr(value))
}

func LinkLabel_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetWidth").Call(obj)
	return int32(ret)
}

func LinkLabel_SetWidth(obj uintptr, value int32) {
	getLazyProc("LinkLabel_SetWidth").Call(obj, uintptr(value))
}

func LinkLabel_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetHeight").Call(obj)
	return int32(ret)
}

func LinkLabel_SetHeight(obj uintptr, value int32) {
	getLazyProc("LinkLabel_SetHeight").Call(obj, uintptr(value))
}

func LinkLabel_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("LinkLabel_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func LinkLabel_SetHint(obj uintptr, value string) {
	getLazyProc("LinkLabel_SetHint").Call(obj, GoStrToDStr(value))
}

func LinkLabel_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetComponentCount").Call(obj)
	return int32(ret)
}

func LinkLabel_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LinkLabel_GetComponentIndex").Call(obj)
	return int32(ret)
}

func LinkLabel_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("LinkLabel_SetComponentIndex").Call(obj, uintptr(value))
}

func LinkLabel_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetOwner").Call(obj)
	return ret
}

func LinkLabel_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("LinkLabel_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func LinkLabel_SetName(obj uintptr, value string) {
	getLazyProc("LinkLabel_SetName").Call(obj, GoStrToDStr(value))
}

func LinkLabel_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("LinkLabel_GetTag").Call(obj)
	return int(ret)
}

func LinkLabel_SetTag(obj uintptr, value int) {
	getLazyProc("LinkLabel_SetTag").Call(obj, uintptr(value))
}

func LinkLabel_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetAnchorSideLeft").Call(obj)
	return ret
}

func LinkLabel_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetAnchorSideLeft").Call(obj, value)
}

func LinkLabel_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetAnchorSideTop").Call(obj)
	return ret
}

func LinkLabel_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetAnchorSideTop").Call(obj, value)
}

func LinkLabel_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetAnchorSideRight").Call(obj)
	return ret
}

func LinkLabel_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetAnchorSideRight").Call(obj, value)
}

func LinkLabel_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetAnchorSideBottom").Call(obj)
	return ret
}

func LinkLabel_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetAnchorSideBottom").Call(obj, value)
}

func LinkLabel_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetBorderSpacing").Call(obj)
	return ret
}

func LinkLabel_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("LinkLabel_SetBorderSpacing").Call(obj, value)
}

func LinkLabel_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func LinkLabel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("LinkLabel_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func LinkLabel_StaticClassType() TClass {
	r, _, _ := getLazyProc("LinkLabel_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TSpeedButton ---------------------------

func SpeedButton_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_Create").Call(obj)
	return ret
}

func SpeedButton_Free(obj uintptr) {
	getLazyProc("SpeedButton_Free").Call(obj)
}

func SpeedButton_Click(obj uintptr) {
	getLazyProc("SpeedButton_Click").Call(obj)
}

func SpeedButton_BringToFront(obj uintptr) {
	getLazyProc("SpeedButton_BringToFront").Call(obj)
}

func SpeedButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("SpeedButton_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpeedButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("SpeedButton_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpeedButton_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_Hide(obj uintptr) {
	getLazyProc("SpeedButton_Hide").Call(obj)
}

func SpeedButton_Invalidate(obj uintptr) {
	getLazyProc("SpeedButton_Invalidate").Call(obj)
}

func SpeedButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("SpeedButton_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func SpeedButton_Refresh(obj uintptr) {
	getLazyProc("SpeedButton_Refresh").Call(obj)
}

func SpeedButton_Repaint(obj uintptr) {
	getLazyProc("SpeedButton_Repaint").Call(obj)
}

func SpeedButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("SpeedButton_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpeedButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("SpeedButton_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpeedButton_SendToBack(obj uintptr) {
	getLazyProc("SpeedButton_SendToBack").Call(obj)
}

func SpeedButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("SpeedButton_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func SpeedButton_Show(obj uintptr) {
	getLazyProc("SpeedButton_Show").Call(obj)
}

func SpeedButton_Update(obj uintptr) {
	getLazyProc("SpeedButton_Update").Call(obj)
}

func SpeedButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("SpeedButton_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func SpeedButton_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetTextLen").Call(obj)
	return int32(ret)
}

func SpeedButton_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("SpeedButton_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func SpeedButton_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func SpeedButton_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("SpeedButton_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func SpeedButton_Assign(obj uintptr, Source uintptr) {
	getLazyProc("SpeedButton_Assign").Call(obj, Source)
}

func SpeedButton_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("SpeedButton_ClassType").Call(obj)
	return TClass(ret)
}

func SpeedButton_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("SpeedButton_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func SpeedButton_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_InstanceSize").Call(obj)
	return int32(ret)
}

func SpeedButton_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("SpeedButton_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func SpeedButton_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetHashCode").Call(obj)
	return int32(ret)
}

func SpeedButton_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("SpeedButton_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func SpeedButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("SpeedButton_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func SpeedButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("SpeedButton_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func SpeedButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("SpeedButton_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func SpeedButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("SpeedButton_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func SpeedButton_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("SpeedButton_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func SpeedButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("SpeedButton_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func SpeedButton_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("SpeedButton_AnchorClient").Call(obj, uintptr(ASpace))
}

func SpeedButton_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpeedButton_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpeedButton_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("SpeedButton_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func SpeedButton_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("SpeedButton_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func SpeedButton_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("SpeedButton_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func SpeedButton_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetImageIndex").Call(obj)
	return int32(ret)
}

func SpeedButton_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetImageIndex").Call(obj, uintptr(value))
}

func SpeedButton_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetImages").Call(obj)
	return ret
}

func SpeedButton_SetImages(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetImages").Call(obj, value)
}

func SpeedButton_GetImageWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetImageWidth").Call(obj)
	return int32(ret)
}

func SpeedButton_SetImageWidth(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetImageWidth").Call(obj, uintptr(value))
}

func SpeedButton_GetShowCaption(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetShowCaption").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetShowCaption(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetShowCaption").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetAction").Call(obj)
	return ret
}

func SpeedButton_SetAction(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetAction").Call(obj, value)
}

func SpeedButton_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("SpeedButton_GetAlign").Call(obj)
	return TAlign(ret)
}

func SpeedButton_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("SpeedButton_SetAlign").Call(obj, uintptr(value))
}

func SpeedButton_GetAllowAllUp(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetAllowAllUp").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetAllowAllUp(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetAllowAllUp").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("SpeedButton_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func SpeedButton_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("SpeedButton_SetAnchors").Call(obj, uintptr(value))
}

func SpeedButton_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("SpeedButton_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func SpeedButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("SpeedButton_SetBiDiMode").Call(obj, uintptr(value))
}

func SpeedButton_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetConstraints").Call(obj)
	return ret
}

func SpeedButton_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetConstraints").Call(obj, value)
}

func SpeedButton_GetGroupIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetGroupIndex").Call(obj)
	return int32(ret)
}

func SpeedButton_SetGroupIndex(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetGroupIndex").Call(obj, uintptr(value))
}

func SpeedButton_GetDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetDown").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetDown(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetDown").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("SpeedButton_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func SpeedButton_SetCaption(obj uintptr, value string) {
	getLazyProc("SpeedButton_SetCaption").Call(obj, GoStrToDStr(value))
}

func SpeedButton_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetEnabled(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetFlat(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetFlat").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetFlat(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetFlat").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetFont").Call(obj)
	return ret
}

func SpeedButton_SetFont(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetFont").Call(obj, value)
}

func SpeedButton_GetGlyph(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetGlyph").Call(obj)
	return ret
}

func SpeedButton_SetGlyph(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetGlyph").Call(obj, value)
}

func SpeedButton_GetLayout(obj uintptr) TButtonLayout {
	ret, _, _ := getLazyProc("SpeedButton_GetLayout").Call(obj)
	return TButtonLayout(ret)
}

func SpeedButton_SetLayout(obj uintptr, value TButtonLayout) {
	getLazyProc("SpeedButton_SetLayout").Call(obj, uintptr(value))
}

func SpeedButton_GetNumGlyphs(obj uintptr) TNumGlyphs {
	ret, _, _ := getLazyProc("SpeedButton_GetNumGlyphs").Call(obj)
	return TNumGlyphs(ret)
}

func SpeedButton_SetNumGlyphs(obj uintptr, value TNumGlyphs) {
	getLazyProc("SpeedButton_SetNumGlyphs").Call(obj, uintptr(value))
}

func SpeedButton_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetParentFont(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetPopupMenu").Call(obj)
	return ret
}

func SpeedButton_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetPopupMenu").Call(obj, value)
}

func SpeedButton_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetShowHint(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetSpacing(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetSpacing").Call(obj)
	return int32(ret)
}

func SpeedButton_SetSpacing(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetSpacing").Call(obj, uintptr(value))
}

func SpeedButton_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetTransparent(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_SetVisible(obj uintptr, value bool) {
	getLazyProc("SpeedButton_SetVisible").Call(obj, GoBoolToDBool(value))
}

func SpeedButton_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("SpeedButton_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func SpeedButton_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("SpeedButton_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func SpeedButton_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("SpeedButton_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func SpeedButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("SpeedButton_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func SpeedButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("SpeedButton_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func SpeedButton_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("SpeedButton_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func SpeedButton_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("SpeedButton_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func SpeedButton_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("SpeedButton_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpeedButton_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("SpeedButton_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func SpeedButton_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetClientHeight").Call(obj)
	return int32(ret)
}

func SpeedButton_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetClientHeight").Call(obj, uintptr(value))
}

func SpeedButton_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("SpeedButton_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpeedButton_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("SpeedButton_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpeedButton_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetClientWidth").Call(obj)
	return int32(ret)
}

func SpeedButton_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetClientWidth").Call(obj, uintptr(value))
}

func SpeedButton_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("SpeedButton_GetControlState").Call(obj)
	return TControlState(ret)
}

func SpeedButton_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("SpeedButton_SetControlState").Call(obj, uintptr(value))
}

func SpeedButton_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("SpeedButton_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func SpeedButton_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("SpeedButton_SetControlStyle").Call(obj, uintptr(value))
}

func SpeedButton_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpeedButton_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func SpeedButton_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetParent").Call(obj)
	return ret
}

func SpeedButton_SetParent(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetParent").Call(obj, value)
}

func SpeedButton_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetLeft").Call(obj)
	return int32(ret)
}

func SpeedButton_SetLeft(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetLeft").Call(obj, uintptr(value))
}

func SpeedButton_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetTop").Call(obj)
	return int32(ret)
}

func SpeedButton_SetTop(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetTop").Call(obj, uintptr(value))
}

func SpeedButton_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetWidth").Call(obj)
	return int32(ret)
}

func SpeedButton_SetWidth(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetWidth").Call(obj, uintptr(value))
}

func SpeedButton_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetHeight").Call(obj)
	return int32(ret)
}

func SpeedButton_SetHeight(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetHeight").Call(obj, uintptr(value))
}

func SpeedButton_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("SpeedButton_GetCursor").Call(obj)
	return TCursor(ret)
}

func SpeedButton_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("SpeedButton_SetCursor").Call(obj, uintptr(value))
}

func SpeedButton_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("SpeedButton_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func SpeedButton_SetHint(obj uintptr, value string) {
	getLazyProc("SpeedButton_SetHint").Call(obj, GoStrToDStr(value))
}

func SpeedButton_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetComponentCount").Call(obj)
	return int32(ret)
}

func SpeedButton_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpeedButton_GetComponentIndex").Call(obj)
	return int32(ret)
}

func SpeedButton_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("SpeedButton_SetComponentIndex").Call(obj, uintptr(value))
}

func SpeedButton_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetOwner").Call(obj)
	return ret
}

func SpeedButton_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("SpeedButton_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func SpeedButton_SetName(obj uintptr, value string) {
	getLazyProc("SpeedButton_SetName").Call(obj, GoStrToDStr(value))
}

func SpeedButton_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("SpeedButton_GetTag").Call(obj)
	return int(ret)
}

func SpeedButton_SetTag(obj uintptr, value int) {
	getLazyProc("SpeedButton_SetTag").Call(obj, uintptr(value))
}

func SpeedButton_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetAnchorSideLeft").Call(obj)
	return ret
}

func SpeedButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetAnchorSideLeft").Call(obj, value)
}

func SpeedButton_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetAnchorSideTop").Call(obj)
	return ret
}

func SpeedButton_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetAnchorSideTop").Call(obj, value)
}

func SpeedButton_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetAnchorSideRight").Call(obj)
	return ret
}

func SpeedButton_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetAnchorSideRight").Call(obj, value)
}

func SpeedButton_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetAnchorSideBottom").Call(obj)
	return ret
}

func SpeedButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetAnchorSideBottom").Call(obj, value)
}

func SpeedButton_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetBorderSpacing").Call(obj)
	return ret
}

func SpeedButton_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("SpeedButton_SetBorderSpacing").Call(obj, value)
}

func SpeedButton_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func SpeedButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("SpeedButton_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func SpeedButton_StaticClassType() TClass {
	r, _, _ := getLazyProc("SpeedButton_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TSplitter ---------------------------

func Splitter_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_Create").Call(obj)
	return ret
}

func Splitter_Free(obj uintptr) {
	getLazyProc("Splitter_Free").Call(obj)
}

func Splitter_BringToFront(obj uintptr) {
	getLazyProc("Splitter_BringToFront").Call(obj)
}

func Splitter_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Splitter_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Splitter_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Splitter_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Splitter_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Splitter_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Splitter_Hide(obj uintptr) {
	getLazyProc("Splitter_Hide").Call(obj)
}

func Splitter_Invalidate(obj uintptr) {
	getLazyProc("Splitter_Invalidate").Call(obj)
}

func Splitter_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Splitter_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Splitter_Refresh(obj uintptr) {
	getLazyProc("Splitter_Refresh").Call(obj)
}

func Splitter_Repaint(obj uintptr) {
	getLazyProc("Splitter_Repaint").Call(obj)
}

func Splitter_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Splitter_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Splitter_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Splitter_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Splitter_SendToBack(obj uintptr) {
	getLazyProc("Splitter_SendToBack").Call(obj)
}

func Splitter_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Splitter_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Splitter_Show(obj uintptr) {
	getLazyProc("Splitter_Show").Call(obj)
}

func Splitter_Update(obj uintptr) {
	getLazyProc("Splitter_Update").Call(obj)
}

func Splitter_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Splitter_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Splitter_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetTextLen").Call(obj)
	return int32(ret)
}

func Splitter_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Splitter_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Splitter_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Splitter_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Splitter_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Splitter_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Splitter_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Splitter_Assign").Call(obj, Source)
}

func Splitter_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Splitter_ClassType").Call(obj)
	return TClass(ret)
}

func Splitter_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Splitter_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Splitter_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_InstanceSize").Call(obj)
	return int32(ret)
}

func Splitter_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Splitter_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Splitter_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Splitter_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetHashCode").Call(obj)
	return int32(ret)
}

func Splitter_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Splitter_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Splitter_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Splitter_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Splitter_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Splitter_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Splitter_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Splitter_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Splitter_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Splitter_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Splitter_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Splitter_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Splitter_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Splitter_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Splitter_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Splitter_AnchorClient").Call(obj, uintptr(ASpace))
}

func Splitter_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Splitter_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Splitter_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Splitter_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Splitter_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Splitter_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Splitter_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Splitter_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Splitter_GetResizeAnchor(obj uintptr) TAnchorKind {
	ret, _, _ := getLazyProc("Splitter_GetResizeAnchor").Call(obj)
	return TAnchorKind(ret)
}

func Splitter_SetResizeAnchor(obj uintptr, value TAnchorKind) {
	getLazyProc("Splitter_SetResizeAnchor").Call(obj, uintptr(value))
}

func Splitter_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetCanvas").Call(obj)
	return ret
}

func Splitter_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Splitter_GetAlign").Call(obj)
	return TAlign(ret)
}

func Splitter_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Splitter_SetAlign").Call(obj, uintptr(value))
}

func Splitter_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Splitter_GetColor").Call(obj)
	return TColor(ret)
}

func Splitter_SetColor(obj uintptr, value TColor) {
	getLazyProc("Splitter_SetColor").Call(obj, uintptr(value))
}

func Splitter_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Splitter_GetCursor").Call(obj)
	return TCursor(ret)
}

func Splitter_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Splitter_SetCursor").Call(obj, uintptr(value))
}

func Splitter_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetConstraints").Call(obj)
	return ret
}

func Splitter_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetConstraints").Call(obj, value)
}

func Splitter_GetMinSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetMinSize").Call(obj)
	return int32(ret)
}

func Splitter_SetMinSize(obj uintptr, value int32) {
	getLazyProc("Splitter_SetMinSize").Call(obj, uintptr(value))
}

func Splitter_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func Splitter_SetParentColor(obj uintptr, value bool) {
	getLazyProc("Splitter_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func Splitter_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Splitter_SetVisible(obj uintptr, value bool) {
	getLazyProc("Splitter_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Splitter_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetWidth").Call(obj)
	return int32(ret)
}

func Splitter_SetWidth(obj uintptr, value int32) {
	getLazyProc("Splitter_SetWidth").Call(obj, uintptr(value))
}

func Splitter_SetOnPaint(obj uintptr, fn interface{}) {
	getLazyProc("Splitter_SetOnPaint").Call(obj, addEventToMap(obj, fn))
}

func Splitter_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Splitter_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Splitter_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Splitter_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetAction").Call(obj)
	return ret
}

func Splitter_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetAction").Call(obj, value)
}

func Splitter_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Splitter_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Splitter_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Splitter_SetAnchors").Call(obj, uintptr(value))
}

func Splitter_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Splitter_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Splitter_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Splitter_SetBiDiMode").Call(obj, uintptr(value))
}

func Splitter_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Splitter_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Splitter_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Splitter_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Splitter_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetClientHeight").Call(obj)
	return int32(ret)
}

func Splitter_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Splitter_SetClientHeight").Call(obj, uintptr(value))
}

func Splitter_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Splitter_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Splitter_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Splitter_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Splitter_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetClientWidth").Call(obj)
	return int32(ret)
}

func Splitter_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Splitter_SetClientWidth").Call(obj, uintptr(value))
}

func Splitter_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Splitter_GetControlState").Call(obj)
	return TControlState(ret)
}

func Splitter_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Splitter_SetControlState").Call(obj, uintptr(value))
}

func Splitter_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Splitter_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Splitter_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Splitter_SetControlStyle").Call(obj, uintptr(value))
}

func Splitter_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Splitter_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Splitter_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Splitter_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Splitter_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Splitter_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetParent").Call(obj)
	return ret
}

func Splitter_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetParent").Call(obj, value)
}

func Splitter_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetLeft").Call(obj)
	return int32(ret)
}

func Splitter_SetLeft(obj uintptr, value int32) {
	getLazyProc("Splitter_SetLeft").Call(obj, uintptr(value))
}

func Splitter_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetTop").Call(obj)
	return int32(ret)
}

func Splitter_SetTop(obj uintptr, value int32) {
	getLazyProc("Splitter_SetTop").Call(obj, uintptr(value))
}

func Splitter_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetHeight").Call(obj)
	return int32(ret)
}

func Splitter_SetHeight(obj uintptr, value int32) {
	getLazyProc("Splitter_SetHeight").Call(obj, uintptr(value))
}

func Splitter_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Splitter_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Splitter_SetHint(obj uintptr, value string) {
	getLazyProc("Splitter_SetHint").Call(obj, GoStrToDStr(value))
}

func Splitter_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetComponentCount").Call(obj)
	return int32(ret)
}

func Splitter_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Splitter_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Splitter_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Splitter_SetComponentIndex").Call(obj, uintptr(value))
}

func Splitter_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetOwner").Call(obj)
	return ret
}

func Splitter_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Splitter_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Splitter_SetName(obj uintptr, value string) {
	getLazyProc("Splitter_SetName").Call(obj, GoStrToDStr(value))
}

func Splitter_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Splitter_GetTag").Call(obj)
	return int(ret)
}

func Splitter_SetTag(obj uintptr, value int) {
	getLazyProc("Splitter_SetTag").Call(obj, uintptr(value))
}

func Splitter_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetAnchorSideLeft").Call(obj)
	return ret
}

func Splitter_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetAnchorSideLeft").Call(obj, value)
}

func Splitter_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetAnchorSideTop").Call(obj)
	return ret
}

func Splitter_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetAnchorSideTop").Call(obj, value)
}

func Splitter_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetAnchorSideRight").Call(obj)
	return ret
}

func Splitter_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetAnchorSideRight").Call(obj, value)
}

func Splitter_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetAnchorSideBottom").Call(obj)
	return ret
}

func Splitter_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetAnchorSideBottom").Call(obj, value)
}

func Splitter_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetBorderSpacing").Call(obj)
	return ret
}

func Splitter_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Splitter_SetBorderSpacing").Call(obj, value)
}

func Splitter_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Splitter_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Splitter_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Splitter_StaticClassType() TClass {
	r, _, _ := getLazyProc("Splitter_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TRadioGroup ---------------------------

func RadioGroup_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_Create").Call(obj)
	return ret
}

func RadioGroup_Free(obj uintptr) {
	getLazyProc("RadioGroup_Free").Call(obj)
}

func RadioGroup_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("RadioGroup_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func RadioGroup_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func RadioGroup_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func RadioGroup_DisableAlign(obj uintptr) {
	getLazyProc("RadioGroup_DisableAlign").Call(obj)
}

func RadioGroup_EnableAlign(obj uintptr) {
	getLazyProc("RadioGroup_EnableAlign").Call(obj)
}

func RadioGroup_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func RadioGroup_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("RadioGroup_InsertControl").Call(obj, AControl)
}

func RadioGroup_Invalidate(obj uintptr) {
	getLazyProc("RadioGroup_Invalidate").Call(obj)
}

func RadioGroup_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("RadioGroup_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func RadioGroup_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("RadioGroup_RemoveControl").Call(obj, AControl)
}

func RadioGroup_Realign(obj uintptr) {
	getLazyProc("RadioGroup_Realign").Call(obj)
}

func RadioGroup_Repaint(obj uintptr) {
	getLazyProc("RadioGroup_Repaint").Call(obj)
}

func RadioGroup_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("RadioGroup_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func RadioGroup_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("RadioGroup_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func RadioGroup_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("RadioGroup_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func RadioGroup_SetFocus(obj uintptr) {
	getLazyProc("RadioGroup_SetFocus").Call(obj)
}

func RadioGroup_Update(obj uintptr) {
	getLazyProc("RadioGroup_Update").Call(obj)
}

func RadioGroup_BringToFront(obj uintptr) {
	getLazyProc("RadioGroup_BringToFront").Call(obj)
}

func RadioGroup_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("RadioGroup_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioGroup_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("RadioGroup_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioGroup_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_Hide(obj uintptr) {
	getLazyProc("RadioGroup_Hide").Call(obj)
}

func RadioGroup_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("RadioGroup_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func RadioGroup_Refresh(obj uintptr) {
	getLazyProc("RadioGroup_Refresh").Call(obj)
}

func RadioGroup_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("RadioGroup_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioGroup_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("RadioGroup_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioGroup_SendToBack(obj uintptr) {
	getLazyProc("RadioGroup_SendToBack").Call(obj)
}

func RadioGroup_Show(obj uintptr) {
	getLazyProc("RadioGroup_Show").Call(obj)
}

func RadioGroup_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("RadioGroup_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func RadioGroup_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetTextLen").Call(obj)
	return int32(ret)
}

func RadioGroup_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("RadioGroup_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func RadioGroup_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func RadioGroup_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioGroup_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func RadioGroup_Assign(obj uintptr, Source uintptr) {
	getLazyProc("RadioGroup_Assign").Call(obj, Source)
}

func RadioGroup_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("RadioGroup_ClassType").Call(obj)
	return TClass(ret)
}

func RadioGroup_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioGroup_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func RadioGroup_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_InstanceSize").Call(obj)
	return int32(ret)
}

func RadioGroup_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("RadioGroup_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func RadioGroup_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetHashCode").Call(obj)
	return int32(ret)
}

func RadioGroup_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioGroup_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func RadioGroup_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("RadioGroup_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func RadioGroup_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("RadioGroup_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func RadioGroup_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("RadioGroup_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func RadioGroup_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("RadioGroup_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func RadioGroup_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("RadioGroup_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func RadioGroup_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("RadioGroup_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func RadioGroup_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("RadioGroup_AnchorClient").Call(obj, uintptr(ASpace))
}

func RadioGroup_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RadioGroup_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RadioGroup_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("RadioGroup_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func RadioGroup_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("RadioGroup_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func RadioGroup_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("RadioGroup_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func RadioGroup_SetOnSelectionChanged(obj uintptr, fn interface{}) {
	getLazyProc("RadioGroup_SetOnSelectionChanged").Call(obj, addEventToMap(obj, fn))
}

func RadioGroup_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("RadioGroup_GetAlign").Call(obj)
	return TAlign(ret)
}

func RadioGroup_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("RadioGroup_SetAlign").Call(obj, uintptr(value))
}

func RadioGroup_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("RadioGroup_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func RadioGroup_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("RadioGroup_SetAnchors").Call(obj, uintptr(value))
}

func RadioGroup_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("RadioGroup_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func RadioGroup_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("RadioGroup_SetBiDiMode").Call(obj, uintptr(value))
}

func RadioGroup_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioGroup_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func RadioGroup_SetCaption(obj uintptr, value string) {
	getLazyProc("RadioGroup_SetCaption").Call(obj, GoStrToDStr(value))
}

func RadioGroup_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("RadioGroup_GetColor").Call(obj)
	return TColor(ret)
}

func RadioGroup_SetColor(obj uintptr, value TColor) {
	getLazyProc("RadioGroup_SetColor").Call(obj, uintptr(value))
}

func RadioGroup_GetColumns(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetColumns").Call(obj)
	return int32(ret)
}

func RadioGroup_SetColumns(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetColumns").Call(obj, uintptr(value))
}

func RadioGroup_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("RadioGroup_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func RadioGroup_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("RadioGroup_SetDragCursor").Call(obj, uintptr(value))
}

func RadioGroup_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("RadioGroup_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func RadioGroup_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("RadioGroup_SetDragMode").Call(obj, uintptr(value))
}

func RadioGroup_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetEnabled(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetFont").Call(obj)
	return ret
}

func RadioGroup_SetFont(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetFont").Call(obj, value)
}

func RadioGroup_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetItemIndex").Call(obj)
	return int32(ret)
}

func RadioGroup_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetItemIndex").Call(obj, uintptr(value))
}

func RadioGroup_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetItems").Call(obj)
	return ret
}

func RadioGroup_SetItems(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetItems").Call(obj, value)
}

func RadioGroup_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetConstraints").Call(obj)
	return ret
}

func RadioGroup_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetConstraints").Call(obj, value)
}

func RadioGroup_GetParentBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetParentBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetParentBackground(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetParentBackground").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetParentColor(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetParentFont(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetPopupMenu").Call(obj)
	return ret
}

func RadioGroup_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetPopupMenu").Call(obj, value)
}

func RadioGroup_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetShowHint(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("RadioGroup_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func RadioGroup_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("RadioGroup_SetTabOrder").Call(obj, uintptr(value))
}

func RadioGroup_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetTabStop(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetVisible(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetVisible").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("RadioGroup_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func RadioGroup_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("RadioGroup_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func RadioGroup_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("RadioGroup_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func RadioGroup_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("RadioGroup_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func RadioGroup_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("RadioGroup_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func RadioGroup_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("RadioGroup_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func RadioGroup_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetDockClientCount").Call(obj)
	return int32(ret)
}

func RadioGroup_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetDockSite(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func RadioGroup_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetBrush").Call(obj)
	return ret
}

func RadioGroup_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetControlCount").Call(obj)
	return int32(ret)
}

func RadioGroup_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("RadioGroup_GetHandle").Call(obj)
	return HWND(ret)
}

func RadioGroup_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("RadioGroup_GetParentWindow").Call(obj)
	return HWND(ret)
}

func RadioGroup_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("RadioGroup_SetParentWindow").Call(obj, uintptr(value))
}

func RadioGroup_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("RadioGroup_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetAction").Call(obj)
	return ret
}

func RadioGroup_SetAction(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetAction").Call(obj, value)
}

func RadioGroup_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("RadioGroup_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioGroup_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("RadioGroup_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RadioGroup_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetClientHeight").Call(obj)
	return int32(ret)
}

func RadioGroup_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetClientHeight").Call(obj, uintptr(value))
}

func RadioGroup_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("RadioGroup_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioGroup_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("RadioGroup_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RadioGroup_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetClientWidth").Call(obj)
	return int32(ret)
}

func RadioGroup_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetClientWidth").Call(obj, uintptr(value))
}

func RadioGroup_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("RadioGroup_GetControlState").Call(obj)
	return TControlState(ret)
}

func RadioGroup_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("RadioGroup_SetControlState").Call(obj, uintptr(value))
}

func RadioGroup_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("RadioGroup_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func RadioGroup_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("RadioGroup_SetControlStyle").Call(obj, uintptr(value))
}

func RadioGroup_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("RadioGroup_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func RadioGroup_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetParent").Call(obj)
	return ret
}

func RadioGroup_SetParent(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetParent").Call(obj, value)
}

func RadioGroup_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetLeft").Call(obj)
	return int32(ret)
}

func RadioGroup_SetLeft(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetLeft").Call(obj, uintptr(value))
}

func RadioGroup_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetTop").Call(obj)
	return int32(ret)
}

func RadioGroup_SetTop(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetTop").Call(obj, uintptr(value))
}

func RadioGroup_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetWidth").Call(obj)
	return int32(ret)
}

func RadioGroup_SetWidth(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetWidth").Call(obj, uintptr(value))
}

func RadioGroup_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetHeight").Call(obj)
	return int32(ret)
}

func RadioGroup_SetHeight(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetHeight").Call(obj, uintptr(value))
}

func RadioGroup_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("RadioGroup_GetCursor").Call(obj)
	return TCursor(ret)
}

func RadioGroup_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("RadioGroup_SetCursor").Call(obj, uintptr(value))
}

func RadioGroup_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioGroup_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func RadioGroup_SetHint(obj uintptr, value string) {
	getLazyProc("RadioGroup_SetHint").Call(obj, GoStrToDStr(value))
}

func RadioGroup_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetComponentCount").Call(obj)
	return int32(ret)
}

func RadioGroup_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RadioGroup_GetComponentIndex").Call(obj)
	return int32(ret)
}

func RadioGroup_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("RadioGroup_SetComponentIndex").Call(obj, uintptr(value))
}

func RadioGroup_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetOwner").Call(obj)
	return ret
}

func RadioGroup_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("RadioGroup_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func RadioGroup_SetName(obj uintptr, value string) {
	getLazyProc("RadioGroup_SetName").Call(obj, GoStrToDStr(value))
}

func RadioGroup_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("RadioGroup_GetTag").Call(obj)
	return int(ret)
}

func RadioGroup_SetTag(obj uintptr, value int) {
	getLazyProc("RadioGroup_SetTag").Call(obj, uintptr(value))
}

func RadioGroup_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetAnchorSideLeft").Call(obj)
	return ret
}

func RadioGroup_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetAnchorSideLeft").Call(obj, value)
}

func RadioGroup_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetAnchorSideTop").Call(obj)
	return ret
}

func RadioGroup_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetAnchorSideTop").Call(obj, value)
}

func RadioGroup_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetAnchorSideRight").Call(obj)
	return ret
}

func RadioGroup_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetAnchorSideRight").Call(obj, value)
}

func RadioGroup_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetAnchorSideBottom").Call(obj)
	return ret
}

func RadioGroup_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetAnchorSideBottom").Call(obj, value)
}

func RadioGroup_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetChildSizing").Call(obj)
	return ret
}

func RadioGroup_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetChildSizing").Call(obj, value)
}

func RadioGroup_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetBorderSpacing").Call(obj)
	return ret
}

func RadioGroup_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("RadioGroup_SetBorderSpacing").Call(obj, value)
}

func RadioGroup_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func RadioGroup_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetControls").Call(obj, uintptr(Index))
	return ret
}

func RadioGroup_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func RadioGroup_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("RadioGroup_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func RadioGroup_StaticClassType() TClass {
	r, _, _ := getLazyProc("RadioGroup_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TStaticText ---------------------------

func StaticText_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_Create").Call(obj)
	return ret
}

func StaticText_Free(obj uintptr) {
	getLazyProc("StaticText_Free").Call(obj)
}

func StaticText_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func StaticText_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("StaticText_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func StaticText_DisableAlign(obj uintptr) {
	getLazyProc("StaticText_DisableAlign").Call(obj)
}

func StaticText_EnableAlign(obj uintptr) {
	getLazyProc("StaticText_EnableAlign").Call(obj)
}

func StaticText_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("StaticText_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func StaticText_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("StaticText_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func StaticText_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("StaticText_InsertControl").Call(obj, AControl)
}

func StaticText_Invalidate(obj uintptr) {
	getLazyProc("StaticText_Invalidate").Call(obj)
}

func StaticText_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("StaticText_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func StaticText_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("StaticText_RemoveControl").Call(obj, AControl)
}

func StaticText_Realign(obj uintptr) {
	getLazyProc("StaticText_Realign").Call(obj)
}

func StaticText_Repaint(obj uintptr) {
	getLazyProc("StaticText_Repaint").Call(obj)
}

func StaticText_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("StaticText_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func StaticText_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("StaticText_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func StaticText_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("StaticText_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func StaticText_SetFocus(obj uintptr) {
	getLazyProc("StaticText_SetFocus").Call(obj)
}

func StaticText_Update(obj uintptr) {
	getLazyProc("StaticText_Update").Call(obj)
}

func StaticText_BringToFront(obj uintptr) {
	getLazyProc("StaticText_BringToFront").Call(obj)
}

func StaticText_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("StaticText_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StaticText_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("StaticText_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StaticText_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_Hide(obj uintptr) {
	getLazyProc("StaticText_Hide").Call(obj)
}

func StaticText_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("StaticText_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func StaticText_Refresh(obj uintptr) {
	getLazyProc("StaticText_Refresh").Call(obj)
}

func StaticText_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("StaticText_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StaticText_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("StaticText_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StaticText_SendToBack(obj uintptr) {
	getLazyProc("StaticText_SendToBack").Call(obj)
}

func StaticText_Show(obj uintptr) {
	getLazyProc("StaticText_Show").Call(obj)
}

func StaticText_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("StaticText_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func StaticText_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetTextLen").Call(obj)
	return int32(ret)
}

func StaticText_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("StaticText_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func StaticText_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("StaticText_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func StaticText_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("StaticText_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func StaticText_Assign(obj uintptr, Source uintptr) {
	getLazyProc("StaticText_Assign").Call(obj, Source)
}

func StaticText_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("StaticText_ClassType").Call(obj)
	return TClass(ret)
}

func StaticText_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("StaticText_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func StaticText_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_InstanceSize").Call(obj)
	return int32(ret)
}

func StaticText_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("StaticText_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func StaticText_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func StaticText_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetHashCode").Call(obj)
	return int32(ret)
}

func StaticText_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("StaticText_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func StaticText_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("StaticText_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func StaticText_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("StaticText_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func StaticText_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("StaticText_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func StaticText_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("StaticText_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func StaticText_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("StaticText_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func StaticText_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("StaticText_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func StaticText_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("StaticText_AnchorClient").Call(obj, uintptr(ASpace))
}

func StaticText_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StaticText_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StaticText_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("StaticText_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func StaticText_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("StaticText_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func StaticText_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("StaticText_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func StaticText_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("StaticText_GetAlign").Call(obj)
	return TAlign(ret)
}

func StaticText_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("StaticText_SetAlign").Call(obj, uintptr(value))
}

func StaticText_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("StaticText_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func StaticText_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("StaticText_SetAlignment").Call(obj, uintptr(value))
}

func StaticText_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("StaticText_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func StaticText_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("StaticText_SetAnchors").Call(obj, uintptr(value))
}

func StaticText_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("StaticText_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("StaticText_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func StaticText_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("StaticText_SetBiDiMode").Call(obj, uintptr(value))
}

func StaticText_GetBorderStyle(obj uintptr) TStaticBorderStyle {
	ret, _, _ := getLazyProc("StaticText_GetBorderStyle").Call(obj)
	return TStaticBorderStyle(ret)
}

func StaticText_SetBorderStyle(obj uintptr, value TStaticBorderStyle) {
	getLazyProc("StaticText_SetBorderStyle").Call(obj, uintptr(value))
}

func StaticText_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("StaticText_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func StaticText_SetCaption(obj uintptr, value string) {
	getLazyProc("StaticText_SetCaption").Call(obj, GoStrToDStr(value))
}

func StaticText_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StaticText_GetColor").Call(obj)
	return TColor(ret)
}

func StaticText_SetColor(obj uintptr, value TColor) {
	getLazyProc("StaticText_SetColor").Call(obj, uintptr(value))
}

func StaticText_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetConstraints").Call(obj)
	return ret
}

func StaticText_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetConstraints").Call(obj, value)
}

func StaticText_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("StaticText_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("StaticText_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func StaticText_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("StaticText_SetDragCursor").Call(obj, uintptr(value))
}

func StaticText_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("StaticText_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func StaticText_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("StaticText_SetDragKind").Call(obj, uintptr(value))
}

func StaticText_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("StaticText_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func StaticText_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("StaticText_SetDragMode").Call(obj, uintptr(value))
}

func StaticText_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetEnabled(obj uintptr, value bool) {
	getLazyProc("StaticText_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetFocusControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetFocusControl").Call(obj)
	return ret
}

func StaticText_SetFocusControl(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetFocusControl").Call(obj, value)
}

func StaticText_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetFont").Call(obj)
	return ret
}

func StaticText_SetFont(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetFont").Call(obj, value)
}

func StaticText_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetParentColor(obj uintptr, value bool) {
	getLazyProc("StaticText_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("StaticText_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetParentFont(obj uintptr, value bool) {
	getLazyProc("StaticText_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("StaticText_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetPopupMenu").Call(obj)
	return ret
}

func StaticText_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetPopupMenu").Call(obj, value)
}

func StaticText_GetShowAccelChar(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetShowAccelChar").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetShowAccelChar(obj uintptr, value bool) {
	getLazyProc("StaticText_SetShowAccelChar").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetShowHint(obj uintptr, value bool) {
	getLazyProc("StaticText_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("StaticText_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func StaticText_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("StaticText_SetTabOrder").Call(obj, uintptr(value))
}

func StaticText_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetTabStop(obj uintptr, value bool) {
	getLazyProc("StaticText_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetTransparent(obj uintptr, value bool) {
	getLazyProc("StaticText_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetVisible(obj uintptr, value bool) {
	getLazyProc("StaticText_SetVisible").Call(obj, GoBoolToDBool(value))
}

func StaticText_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func StaticText_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("StaticText_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func StaticText_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetDockClientCount").Call(obj)
	return int32(ret)
}

func StaticText_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetDockSite(obj uintptr, value bool) {
	getLazyProc("StaticText_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func StaticText_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetBrush").Call(obj)
	return ret
}

func StaticText_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetControlCount").Call(obj)
	return int32(ret)
}

func StaticText_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("StaticText_GetHandle").Call(obj)
	return HWND(ret)
}

func StaticText_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("StaticText_GetParentWindow").Call(obj)
	return HWND(ret)
}

func StaticText_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("StaticText_SetParentWindow").Call(obj, uintptr(value))
}

func StaticText_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("StaticText_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func StaticText_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetAction").Call(obj)
	return ret
}

func StaticText_SetAction(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetAction").Call(obj, value)
}

func StaticText_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("StaticText_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StaticText_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("StaticText_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StaticText_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetClientHeight").Call(obj)
	return int32(ret)
}

func StaticText_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("StaticText_SetClientHeight").Call(obj, uintptr(value))
}

func StaticText_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("StaticText_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StaticText_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("StaticText_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StaticText_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetClientWidth").Call(obj)
	return int32(ret)
}

func StaticText_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("StaticText_SetClientWidth").Call(obj, uintptr(value))
}

func StaticText_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("StaticText_GetControlState").Call(obj)
	return TControlState(ret)
}

func StaticText_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("StaticText_SetControlState").Call(obj, uintptr(value))
}

func StaticText_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("StaticText_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func StaticText_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("StaticText_SetControlStyle").Call(obj, uintptr(value))
}

func StaticText_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("StaticText_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func StaticText_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetParent").Call(obj)
	return ret
}

func StaticText_SetParent(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetParent").Call(obj, value)
}

func StaticText_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetLeft").Call(obj)
	return int32(ret)
}

func StaticText_SetLeft(obj uintptr, value int32) {
	getLazyProc("StaticText_SetLeft").Call(obj, uintptr(value))
}

func StaticText_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetTop").Call(obj)
	return int32(ret)
}

func StaticText_SetTop(obj uintptr, value int32) {
	getLazyProc("StaticText_SetTop").Call(obj, uintptr(value))
}

func StaticText_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetWidth").Call(obj)
	return int32(ret)
}

func StaticText_SetWidth(obj uintptr, value int32) {
	getLazyProc("StaticText_SetWidth").Call(obj, uintptr(value))
}

func StaticText_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetHeight").Call(obj)
	return int32(ret)
}

func StaticText_SetHeight(obj uintptr, value int32) {
	getLazyProc("StaticText_SetHeight").Call(obj, uintptr(value))
}

func StaticText_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("StaticText_GetCursor").Call(obj)
	return TCursor(ret)
}

func StaticText_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("StaticText_SetCursor").Call(obj, uintptr(value))
}

func StaticText_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("StaticText_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func StaticText_SetHint(obj uintptr, value string) {
	getLazyProc("StaticText_SetHint").Call(obj, GoStrToDStr(value))
}

func StaticText_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetComponentCount").Call(obj)
	return int32(ret)
}

func StaticText_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StaticText_GetComponentIndex").Call(obj)
	return int32(ret)
}

func StaticText_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("StaticText_SetComponentIndex").Call(obj, uintptr(value))
}

func StaticText_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetOwner").Call(obj)
	return ret
}

func StaticText_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("StaticText_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func StaticText_SetName(obj uintptr, value string) {
	getLazyProc("StaticText_SetName").Call(obj, GoStrToDStr(value))
}

func StaticText_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("StaticText_GetTag").Call(obj)
	return int(ret)
}

func StaticText_SetTag(obj uintptr, value int) {
	getLazyProc("StaticText_SetTag").Call(obj, uintptr(value))
}

func StaticText_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetAnchorSideLeft").Call(obj)
	return ret
}

func StaticText_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetAnchorSideLeft").Call(obj, value)
}

func StaticText_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetAnchorSideTop").Call(obj)
	return ret
}

func StaticText_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetAnchorSideTop").Call(obj, value)
}

func StaticText_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetAnchorSideRight").Call(obj)
	return ret
}

func StaticText_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetAnchorSideRight").Call(obj, value)
}

func StaticText_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetAnchorSideBottom").Call(obj)
	return ret
}

func StaticText_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetAnchorSideBottom").Call(obj, value)
}

func StaticText_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetChildSizing").Call(obj)
	return ret
}

func StaticText_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetChildSizing").Call(obj, value)
}

func StaticText_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetBorderSpacing").Call(obj)
	return ret
}

func StaticText_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("StaticText_SetBorderSpacing").Call(obj, value)
}

func StaticText_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func StaticText_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetControls").Call(obj, uintptr(Index))
	return ret
}

func StaticText_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func StaticText_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("StaticText_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func StaticText_StaticClassType() TClass {
	r, _, _ := getLazyProc("StaticText_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TColorBox ---------------------------

func ColorBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_Create").Call(obj)
	return ret
}

func ColorBox_Free(obj uintptr) {
	getLazyProc("ColorBox_Free").Call(obj)
}

func ColorBox_AddItem(obj uintptr, Item string, AObject uintptr) {
	getLazyProc("ColorBox_AddItem").Call(obj, GoStrToDStr(Item), AObject)
}

func ColorBox_Clear(obj uintptr) {
	getLazyProc("ColorBox_Clear").Call(obj)
}

func ColorBox_ClearSelection(obj uintptr) {
	getLazyProc("ColorBox_ClearSelection").Call(obj)
}

func ColorBox_DeleteSelected(obj uintptr) {
	getLazyProc("ColorBox_DeleteSelected").Call(obj)
}

func ColorBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SelectAll(obj uintptr) {
	getLazyProc("ColorBox_SelectAll").Call(obj)
}

func ColorBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ColorBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ColorBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ColorBox_DisableAlign(obj uintptr) {
	getLazyProc("ColorBox_DisableAlign").Call(obj)
}

func ColorBox_EnableAlign(obj uintptr) {
	getLazyProc("ColorBox_EnableAlign").Call(obj)
}

func ColorBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ColorBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ColorBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ColorBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ColorBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ColorBox_InsertControl").Call(obj, AControl)
}

func ColorBox_Invalidate(obj uintptr) {
	getLazyProc("ColorBox_Invalidate").Call(obj)
}

func ColorBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ColorBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ColorBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ColorBox_RemoveControl").Call(obj, AControl)
}

func ColorBox_Realign(obj uintptr) {
	getLazyProc("ColorBox_Realign").Call(obj)
}

func ColorBox_Repaint(obj uintptr) {
	getLazyProc("ColorBox_Repaint").Call(obj)
}

func ColorBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ColorBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ColorBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ColorBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ColorBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ColorBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ColorBox_SetFocus(obj uintptr) {
	getLazyProc("ColorBox_SetFocus").Call(obj)
}

func ColorBox_Update(obj uintptr) {
	getLazyProc("ColorBox_Update").Call(obj)
}

func ColorBox_BringToFront(obj uintptr) {
	getLazyProc("ColorBox_BringToFront").Call(obj)
}

func ColorBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ColorBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ColorBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_Hide(obj uintptr) {
	getLazyProc("ColorBox_Hide").Call(obj)
}

func ColorBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ColorBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ColorBox_Refresh(obj uintptr) {
	getLazyProc("ColorBox_Refresh").Call(obj)
}

func ColorBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ColorBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ColorBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorBox_SendToBack(obj uintptr) {
	getLazyProc("ColorBox_SendToBack").Call(obj)
}

func ColorBox_Show(obj uintptr) {
	getLazyProc("ColorBox_Show").Call(obj)
}

func ColorBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ColorBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ColorBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetTextLen").Call(obj)
	return int32(ret)
}

func ColorBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ColorBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ColorBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ColorBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ColorBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ColorBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ColorBox_Assign").Call(obj, Source)
}

func ColorBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ColorBox_ClassType").Call(obj)
	return TClass(ret)
}

func ColorBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ColorBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_InstanceSize").Call(obj)
	return int32(ret)
}

func ColorBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ColorBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ColorBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ColorBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetHashCode").Call(obj)
	return int32(ret)
}

func ColorBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ColorBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ColorBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ColorBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ColorBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ColorBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ColorBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ColorBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ColorBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ColorBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ColorBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ColorBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ColorBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ColorBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ColorBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func ColorBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ColorBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ColorBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ColorBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ColorBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ColorBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ColorBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ColorBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func ColorBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ColorBox_SetAlign").Call(obj, uintptr(value))
}

func ColorBox_GetAutoComplete(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetAutoComplete").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetAutoComplete(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetAutoComplete").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetAutoDropDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetAutoDropDown").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetAutoDropDown(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetAutoDropDown").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetDefaultColorColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorBox_GetDefaultColorColor").Call(obj)
	return TColor(ret)
}

func ColorBox_SetDefaultColorColor(obj uintptr, value TColor) {
	getLazyProc("ColorBox_SetDefaultColorColor").Call(obj, uintptr(value))
}

func ColorBox_GetNoneColorColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorBox_GetNoneColorColor").Call(obj)
	return TColor(ret)
}

func ColorBox_SetNoneColorColor(obj uintptr, value TColor) {
	getLazyProc("ColorBox_SetNoneColorColor").Call(obj, uintptr(value))
}

func ColorBox_GetSelected(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorBox_GetSelected").Call(obj)
	return TColor(ret)
}

func ColorBox_SetSelected(obj uintptr, value TColor) {
	getLazyProc("ColorBox_SetSelected").Call(obj, uintptr(value))
}

func ColorBox_GetStyle(obj uintptr) TColorBoxStyle {
	ret, _, _ := getLazyProc("ColorBox_GetStyle").Call(obj)
	return TColorBoxStyle(ret)
}

func ColorBox_SetStyle(obj uintptr, value TColorBoxStyle) {
	getLazyProc("ColorBox_SetStyle").Call(obj, uintptr(value))
}

func ColorBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ColorBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ColorBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ColorBox_SetAnchors").Call(obj, uintptr(value))
}

func ColorBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ColorBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ColorBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ColorBox_SetBiDiMode").Call(obj, uintptr(value))
}

func ColorBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorBox_GetColor").Call(obj)
	return TColor(ret)
}

func ColorBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("ColorBox_SetColor").Call(obj, uintptr(value))
}

func ColorBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetConstraints").Call(obj)
	return ret
}

func ColorBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetConstraints").Call(obj, value)
}

func ColorBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetDropDownCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetDropDownCount").Call(obj)
	return int32(ret)
}

func ColorBox_SetDropDownCount(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetDropDownCount").Call(obj, uintptr(value))
}

func ColorBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetFont").Call(obj)
	return ret
}

func ColorBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetFont").Call(obj, value)
}

func ColorBox_GetItemHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetItemHeight").Call(obj)
	return int32(ret)
}

func ColorBox_SetItemHeight(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetItemHeight").Call(obj, uintptr(value))
}

func ColorBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetPopupMenu").Call(obj)
	return ret
}

func ColorBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetPopupMenu").Call(obj, value)
}

func ColorBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ColorBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ColorBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ColorBox_SetTabOrder").Call(obj, uintptr(value))
}

func ColorBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ColorBox_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnCloseUp(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnCloseUp").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnDropDown(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnDropDown").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_SetOnSelect(obj uintptr, fn interface{}) {
	getLazyProc("ColorBox_SetOnSelect").Call(obj, addEventToMap(obj, fn))
}

func ColorBox_GetCharCase(obj uintptr) TEditCharCase {
	ret, _, _ := getLazyProc("ColorBox_GetCharCase").Call(obj)
	return TEditCharCase(ret)
}

func ColorBox_SetCharCase(obj uintptr, value TEditCharCase) {
	getLazyProc("ColorBox_SetCharCase").Call(obj, uintptr(value))
}

func ColorBox_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorBox_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func ColorBox_SetSelText(obj uintptr, value string) {
	getLazyProc("ColorBox_SetSelText").Call(obj, GoStrToDStr(value))
}

func ColorBox_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetCanvas").Call(obj)
	return ret
}

func ColorBox_GetDroppedDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetDroppedDown").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetDroppedDown(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetDroppedDown").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetItems").Call(obj)
	return ret
}

func ColorBox_SetItems(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetItems").Call(obj, value)
}

func ColorBox_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetSelLength").Call(obj)
	return int32(ret)
}

func ColorBox_SetSelLength(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetSelLength").Call(obj, uintptr(value))
}

func ColorBox_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetSelStart").Call(obj)
	return int32(ret)
}

func ColorBox_SetSelStart(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetSelStart").Call(obj, uintptr(value))
}

func ColorBox_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetItemIndex").Call(obj)
	return int32(ret)
}

func ColorBox_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetItemIndex").Call(obj, uintptr(value))
}

func ColorBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ColorBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ColorBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetBrush").Call(obj)
	return ret
}

func ColorBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetControlCount").Call(obj)
	return int32(ret)
}

func ColorBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ColorBox_GetHandle").Call(obj)
	return HWND(ret)
}

func ColorBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ColorBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ColorBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ColorBox_SetParentWindow").Call(obj, uintptr(value))
}

func ColorBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ColorBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetAction").Call(obj)
	return ret
}

func ColorBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetAction").Call(obj, value)
}

func ColorBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ColorBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ColorBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ColorBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func ColorBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetClientHeight").Call(obj, uintptr(value))
}

func ColorBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ColorBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ColorBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func ColorBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetClientWidth").Call(obj, uintptr(value))
}

func ColorBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ColorBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func ColorBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ColorBox_SetControlState").Call(obj, uintptr(value))
}

func ColorBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ColorBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ColorBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ColorBox_SetControlStyle").Call(obj, uintptr(value))
}

func ColorBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetParent").Call(obj)
	return ret
}

func ColorBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetParent").Call(obj, value)
}

func ColorBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetLeft").Call(obj)
	return int32(ret)
}

func ColorBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetLeft").Call(obj, uintptr(value))
}

func ColorBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetTop").Call(obj)
	return int32(ret)
}

func ColorBox_SetTop(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetTop").Call(obj, uintptr(value))
}

func ColorBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetWidth").Call(obj)
	return int32(ret)
}

func ColorBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetWidth").Call(obj, uintptr(value))
}

func ColorBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetHeight").Call(obj)
	return int32(ret)
}

func ColorBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetHeight").Call(obj, uintptr(value))
}

func ColorBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ColorBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func ColorBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ColorBox_SetCursor").Call(obj, uintptr(value))
}

func ColorBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ColorBox_SetHint(obj uintptr, value string) {
	getLazyProc("ColorBox_SetHint").Call(obj, GoStrToDStr(value))
}

func ColorBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func ColorBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ColorBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ColorBox_SetComponentIndex").Call(obj, uintptr(value))
}

func ColorBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetOwner").Call(obj)
	return ret
}

func ColorBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ColorBox_SetName(obj uintptr, value string) {
	getLazyProc("ColorBox_SetName").Call(obj, GoStrToDStr(value))
}

func ColorBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ColorBox_GetTag").Call(obj)
	return int(ret)
}

func ColorBox_SetTag(obj uintptr, value int) {
	getLazyProc("ColorBox_SetTag").Call(obj, uintptr(value))
}

func ColorBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func ColorBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetAnchorSideLeft").Call(obj, value)
}

func ColorBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetAnchorSideTop").Call(obj)
	return ret
}

func ColorBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetAnchorSideTop").Call(obj, value)
}

func ColorBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetAnchorSideRight").Call(obj)
	return ret
}

func ColorBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetAnchorSideRight").Call(obj, value)
}

func ColorBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func ColorBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetAnchorSideBottom").Call(obj, value)
}

func ColorBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetChildSizing").Call(obj)
	return ret
}

func ColorBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetChildSizing").Call(obj, value)
}

func ColorBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetBorderSpacing").Call(obj)
	return ret
}

func ColorBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ColorBox_SetBorderSpacing").Call(obj, value)
}

func ColorBox_GetColors(obj uintptr, Index int32) TColor {
	ret, _, _ := getLazyProc("ColorBox_GetColors").Call(obj, uintptr(Index))
	return TColor(ret)
}

func ColorBox_GetColorNames(obj uintptr, Index int32) string {
	ret, _, _ := getLazyProc("ColorBox_GetColorNames").Call(obj, uintptr(Index))
	return DStrToGoStr(ret)
}

func ColorBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ColorBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ColorBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ColorBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ColorBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ColorBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("ColorBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TColorListBox ---------------------------

func ColorListBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_Create").Call(obj)
	return ret
}

func ColorListBox_Free(obj uintptr) {
	getLazyProc("ColorListBox_Free").Call(obj)
}

func ColorListBox_AddItem(obj uintptr, Item string, AObject uintptr) {
	getLazyProc("ColorListBox_AddItem").Call(obj, GoStrToDStr(Item), AObject)
}

func ColorListBox_Clear(obj uintptr) {
	getLazyProc("ColorListBox_Clear").Call(obj)
}

func ColorListBox_ClearSelection(obj uintptr) {
	getLazyProc("ColorListBox_ClearSelection").Call(obj)
}

func ColorListBox_DeleteSelected(obj uintptr) {
	getLazyProc("ColorListBox_DeleteSelected").Call(obj)
}

func ColorListBox_ItemAtPos(obj uintptr, Pos TPoint, Existing bool) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ItemAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(Existing))
	return int32(ret)
}

func ColorListBox_ItemRect(obj uintptr, Index int32) TRect {
	var ret TRect
	getLazyProc("ColorListBox_ItemRect").Call(obj, uintptr(Index), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_SelectAll(obj uintptr) {
	getLazyProc("ColorListBox_SelectAll").Call(obj)
}

func ColorListBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ColorListBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ColorListBox_DisableAlign(obj uintptr) {
	getLazyProc("ColorListBox_DisableAlign").Call(obj)
}

func ColorListBox_EnableAlign(obj uintptr) {
	getLazyProc("ColorListBox_EnableAlign").Call(obj)
}

func ColorListBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ColorListBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ColorListBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ColorListBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ColorListBox_InsertControl").Call(obj, AControl)
}

func ColorListBox_Invalidate(obj uintptr) {
	getLazyProc("ColorListBox_Invalidate").Call(obj)
}

func ColorListBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ColorListBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ColorListBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ColorListBox_RemoveControl").Call(obj, AControl)
}

func ColorListBox_Realign(obj uintptr) {
	getLazyProc("ColorListBox_Realign").Call(obj)
}

func ColorListBox_Repaint(obj uintptr) {
	getLazyProc("ColorListBox_Repaint").Call(obj)
}

func ColorListBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ColorListBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ColorListBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ColorListBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ColorListBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ColorListBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ColorListBox_SetFocus(obj uintptr) {
	getLazyProc("ColorListBox_SetFocus").Call(obj)
}

func ColorListBox_Update(obj uintptr) {
	getLazyProc("ColorListBox_Update").Call(obj)
}

func ColorListBox_BringToFront(obj uintptr) {
	getLazyProc("ColorListBox_BringToFront").Call(obj)
}

func ColorListBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ColorListBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ColorListBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_Hide(obj uintptr) {
	getLazyProc("ColorListBox_Hide").Call(obj)
}

func ColorListBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ColorListBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ColorListBox_Refresh(obj uintptr) {
	getLazyProc("ColorListBox_Refresh").Call(obj)
}

func ColorListBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ColorListBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ColorListBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_SendToBack(obj uintptr) {
	getLazyProc("ColorListBox_SendToBack").Call(obj)
}

func ColorListBox_Show(obj uintptr) {
	getLazyProc("ColorListBox_Show").Call(obj)
}

func ColorListBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ColorListBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ColorListBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetTextLen").Call(obj)
	return int32(ret)
}

func ColorListBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ColorListBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ColorListBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ColorListBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorListBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ColorListBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ColorListBox_Assign").Call(obj, Source)
}

func ColorListBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ColorListBox_ClassType").Call(obj)
	return TClass(ret)
}

func ColorListBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorListBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ColorListBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_InstanceSize").Call(obj)
	return int32(ret)
}

func ColorListBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ColorListBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ColorListBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetHashCode").Call(obj)
	return int32(ret)
}

func ColorListBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorListBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ColorListBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ColorListBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ColorListBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ColorListBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ColorListBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ColorListBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ColorListBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ColorListBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ColorListBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ColorListBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ColorListBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ColorListBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ColorListBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ColorListBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func ColorListBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ColorListBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ColorListBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ColorListBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ColorListBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ColorListBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ColorListBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ColorListBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ColorListBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ColorListBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func ColorListBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ColorListBox_SetAlign").Call(obj, uintptr(value))
}

func ColorListBox_GetDefaultColorColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorListBox_GetDefaultColorColor").Call(obj)
	return TColor(ret)
}

func ColorListBox_SetDefaultColorColor(obj uintptr, value TColor) {
	getLazyProc("ColorListBox_SetDefaultColorColor").Call(obj, uintptr(value))
}

func ColorListBox_GetNoneColorColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorListBox_GetNoneColorColor").Call(obj)
	return TColor(ret)
}

func ColorListBox_SetNoneColorColor(obj uintptr, value TColor) {
	getLazyProc("ColorListBox_SetNoneColorColor").Call(obj, uintptr(value))
}

func ColorListBox_GetSelected(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorListBox_GetSelected").Call(obj)
	return TColor(ret)
}

func ColorListBox_SetSelected(obj uintptr, value TColor) {
	getLazyProc("ColorListBox_SetSelected").Call(obj, uintptr(value))
}

func ColorListBox_GetStyle(obj uintptr) TColorBoxStyle {
	ret, _, _ := getLazyProc("ColorListBox_GetStyle").Call(obj)
	return TColorBoxStyle(ret)
}

func ColorListBox_SetStyle(obj uintptr, value TColorBoxStyle) {
	getLazyProc("ColorListBox_SetStyle").Call(obj, uintptr(value))
}

func ColorListBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ColorListBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ColorListBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ColorListBox_SetAnchors").Call(obj, uintptr(value))
}

func ColorListBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ColorListBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ColorListBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ColorListBox_SetBiDiMode").Call(obj, uintptr(value))
}

func ColorListBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorListBox_GetColor").Call(obj)
	return TColor(ret)
}

func ColorListBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("ColorListBox_SetColor").Call(obj, uintptr(value))
}

func ColorListBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetConstraints").Call(obj)
	return ret
}

func ColorListBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetConstraints").Call(obj, value)
}

func ColorListBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetFont").Call(obj)
	return ret
}

func ColorListBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetFont").Call(obj, value)
}

func ColorListBox_GetItemHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetItemHeight").Call(obj)
	return int32(ret)
}

func ColorListBox_SetItemHeight(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetItemHeight").Call(obj, uintptr(value))
}

func ColorListBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetPopupMenu").Call(obj)
	return ret
}

func ColorListBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetPopupMenu").Call(obj, value)
}

func ColorListBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ColorListBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ColorListBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ColorListBox_SetTabOrder").Call(obj, uintptr(value))
}

func ColorListBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ColorListBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ColorListBox_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetCanvas").Call(obj)
	return ret
}

func ColorListBox_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetCount").Call(obj)
	return int32(ret)
}

func ColorListBox_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetItems").Call(obj)
	return ret
}

func ColorListBox_SetItems(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetItems").Call(obj, value)
}

func ColorListBox_GetTopIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetTopIndex").Call(obj)
	return int32(ret)
}

func ColorListBox_SetTopIndex(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetTopIndex").Call(obj, uintptr(value))
}

func ColorListBox_GetMultiSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetMultiSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetMultiSelect(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetMultiSelect").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetSelCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetSelCount").Call(obj)
	return int32(ret)
}

func ColorListBox_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetItemIndex").Call(obj)
	return int32(ret)
}

func ColorListBox_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetItemIndex").Call(obj, uintptr(value))
}

func ColorListBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ColorListBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ColorListBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetBrush").Call(obj)
	return ret
}

func ColorListBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetControlCount").Call(obj)
	return int32(ret)
}

func ColorListBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ColorListBox_GetHandle").Call(obj)
	return HWND(ret)
}

func ColorListBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ColorListBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ColorListBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ColorListBox_SetParentWindow").Call(obj, uintptr(value))
}

func ColorListBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ColorListBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetAction").Call(obj)
	return ret
}

func ColorListBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetAction").Call(obj, value)
}

func ColorListBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ColorListBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ColorListBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ColorListBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func ColorListBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetClientHeight").Call(obj, uintptr(value))
}

func ColorListBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ColorListBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ColorListBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ColorListBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func ColorListBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetClientWidth").Call(obj, uintptr(value))
}

func ColorListBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ColorListBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func ColorListBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ColorListBox_SetControlState").Call(obj, uintptr(value))
}

func ColorListBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ColorListBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ColorListBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ColorListBox_SetControlStyle").Call(obj, uintptr(value))
}

func ColorListBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorListBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorListBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetParent").Call(obj)
	return ret
}

func ColorListBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetParent").Call(obj, value)
}

func ColorListBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetLeft").Call(obj)
	return int32(ret)
}

func ColorListBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetLeft").Call(obj, uintptr(value))
}

func ColorListBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetTop").Call(obj)
	return int32(ret)
}

func ColorListBox_SetTop(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetTop").Call(obj, uintptr(value))
}

func ColorListBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetWidth").Call(obj)
	return int32(ret)
}

func ColorListBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetWidth").Call(obj, uintptr(value))
}

func ColorListBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetHeight").Call(obj)
	return int32(ret)
}

func ColorListBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetHeight").Call(obj, uintptr(value))
}

func ColorListBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ColorListBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func ColorListBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ColorListBox_SetCursor").Call(obj, uintptr(value))
}

func ColorListBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorListBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ColorListBox_SetHint(obj uintptr, value string) {
	getLazyProc("ColorListBox_SetHint").Call(obj, GoStrToDStr(value))
}

func ColorListBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func ColorListBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorListBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ColorListBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ColorListBox_SetComponentIndex").Call(obj, uintptr(value))
}

func ColorListBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetOwner").Call(obj)
	return ret
}

func ColorListBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorListBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ColorListBox_SetName(obj uintptr, value string) {
	getLazyProc("ColorListBox_SetName").Call(obj, GoStrToDStr(value))
}

func ColorListBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ColorListBox_GetTag").Call(obj)
	return int(ret)
}

func ColorListBox_SetTag(obj uintptr, value int) {
	getLazyProc("ColorListBox_SetTag").Call(obj, uintptr(value))
}

func ColorListBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func ColorListBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetAnchorSideLeft").Call(obj, value)
}

func ColorListBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetAnchorSideTop").Call(obj)
	return ret
}

func ColorListBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetAnchorSideTop").Call(obj, value)
}

func ColorListBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetAnchorSideRight").Call(obj)
	return ret
}

func ColorListBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetAnchorSideRight").Call(obj, value)
}

func ColorListBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func ColorListBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetAnchorSideBottom").Call(obj, value)
}

func ColorListBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetChildSizing").Call(obj)
	return ret
}

func ColorListBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetChildSizing").Call(obj, value)
}

func ColorListBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetBorderSpacing").Call(obj)
	return ret
}

func ColorListBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ColorListBox_SetBorderSpacing").Call(obj, value)
}

func ColorListBox_GetColors(obj uintptr, Index int32) TColor {
	ret, _, _ := getLazyProc("ColorListBox_GetColors").Call(obj, uintptr(Index))
	return TColor(ret)
}

func ColorListBox_GetColorNames(obj uintptr, Index int32) string {
	ret, _, _ := getLazyProc("ColorListBox_GetColorNames").Call(obj, uintptr(Index))
	return DStrToGoStr(ret)
}

func ColorListBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ColorListBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ColorListBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ColorListBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ColorListBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ColorListBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("ColorListBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTrayIcon ---------------------------

func TrayIcon_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrayIcon_Create").Call(obj)
	return ret
}

func TrayIcon_Free(obj uintptr) {
	getLazyProc("TrayIcon_Free").Call(obj)
}

func TrayIcon_ShowBalloonHint(obj uintptr) {
	getLazyProc("TrayIcon_ShowBalloonHint").Call(obj)
}

func TrayIcon_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("TrayIcon_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func TrayIcon_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TrayIcon_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TrayIcon_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrayIcon_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func TrayIcon_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TrayIcon_Assign").Call(obj, Source)
}

func TrayIcon_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TrayIcon_ClassType").Call(obj)
	return TClass(ret)
}

func TrayIcon_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TrayIcon_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TrayIcon_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrayIcon_InstanceSize").Call(obj)
	return int32(ret)
}

func TrayIcon_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TrayIcon_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TrayIcon_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TrayIcon_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TrayIcon_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrayIcon_GetHashCode").Call(obj)
	return int32(ret)
}

func TrayIcon_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TrayIcon_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TrayIcon_GetAnimateInterval(obj uintptr) uint32 {
	ret, _, _ := getLazyProc("TrayIcon_GetAnimateInterval").Call(obj)
	return uint32(ret)
}

func TrayIcon_SetAnimateInterval(obj uintptr, value uint32) {
	getLazyProc("TrayIcon_SetAnimateInterval").Call(obj, uintptr(value))
}

func TrayIcon_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("TrayIcon_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func TrayIcon_SetHint(obj uintptr, value string) {
	getLazyProc("TrayIcon_SetHint").Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetBalloonHint(obj uintptr) string {
	ret, _, _ := getLazyProc("TrayIcon_GetBalloonHint").Call(obj)
	return DStrToGoStr(ret)
}

func TrayIcon_SetBalloonHint(obj uintptr, value string) {
	getLazyProc("TrayIcon_SetBalloonHint").Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetBalloonTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("TrayIcon_GetBalloonTitle").Call(obj)
	return DStrToGoStr(ret)
}

func TrayIcon_SetBalloonTitle(obj uintptr, value string) {
	getLazyProc("TrayIcon_SetBalloonTitle").Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetBalloonTimeout(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrayIcon_GetBalloonTimeout").Call(obj)
	return int32(ret)
}

func TrayIcon_SetBalloonTimeout(obj uintptr, value int32) {
	getLazyProc("TrayIcon_SetBalloonTimeout").Call(obj, uintptr(value))
}

func TrayIcon_GetBalloonFlags(obj uintptr) TBalloonFlags {
	ret, _, _ := getLazyProc("TrayIcon_GetBalloonFlags").Call(obj)
	return TBalloonFlags(ret)
}

func TrayIcon_SetBalloonFlags(obj uintptr, value TBalloonFlags) {
	getLazyProc("TrayIcon_SetBalloonFlags").Call(obj, uintptr(value))
}

func TrayIcon_GetIcon(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrayIcon_GetIcon").Call(obj)
	return ret
}

func TrayIcon_SetIcon(obj uintptr, value uintptr) {
	getLazyProc("TrayIcon_SetIcon").Call(obj, value)
}

func TrayIcon_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrayIcon_GetPopupMenu").Call(obj)
	return ret
}

func TrayIcon_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("TrayIcon_SetPopupMenu").Call(obj, value)
}

func TrayIcon_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrayIcon_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TrayIcon_SetVisible(obj uintptr, value bool) {
	getLazyProc("TrayIcon_SetVisible").Call(obj, GoBoolToDBool(value))
}

func TrayIcon_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("TrayIcon_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func TrayIcon_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("TrayIcon_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func TrayIcon_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("TrayIcon_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func TrayIcon_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("TrayIcon_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func TrayIcon_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("TrayIcon_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func TrayIcon_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrayIcon_GetComponentCount").Call(obj)
	return int32(ret)
}

func TrayIcon_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrayIcon_GetComponentIndex").Call(obj)
	return int32(ret)
}

func TrayIcon_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("TrayIcon_SetComponentIndex").Call(obj, uintptr(value))
}

func TrayIcon_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrayIcon_GetOwner").Call(obj)
	return ret
}

func TrayIcon_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("TrayIcon_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func TrayIcon_SetName(obj uintptr, value string) {
	getLazyProc("TrayIcon_SetName").Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("TrayIcon_GetTag").Call(obj)
	return int(ret)
}

func TrayIcon_SetTag(obj uintptr, value int) {
	getLazyProc("TrayIcon_SetTag").Call(obj, uintptr(value))
}

func TrayIcon_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("TrayIcon_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func TrayIcon_StaticClassType() TClass {
	r, _, _ := getLazyProc("TrayIcon_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TOpenDialog ---------------------------

func OpenDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("OpenDialog_Create").Call(obj)
	return ret
}

func OpenDialog_Free(obj uintptr) {
	getLazyProc("OpenDialog_Free").Call(obj)
}

func OpenDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("OpenDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func OpenDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("OpenDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func OpenDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("OpenDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func OpenDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("OpenDialog_Assign").Call(obj, Source)
}

func OpenDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("OpenDialog_ClassType").Call(obj)
	return TClass(ret)
}

func OpenDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func OpenDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("OpenDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func OpenDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("OpenDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func OpenDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func OpenDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_GetFiles(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("OpenDialog_GetFiles").Call(obj)
	return ret
}

func OpenDialog_GetDefaultExt(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_GetDefaultExt").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_SetDefaultExt(obj uintptr, value string) {
	getLazyProc("OpenDialog_SetDefaultExt").Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetFileName(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_GetFileName").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_SetFileName(obj uintptr, value string) {
	getLazyProc("OpenDialog_SetFileName").Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetFilter(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_GetFilter").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_SetFilter(obj uintptr, value string) {
	getLazyProc("OpenDialog_SetFilter").Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetFilterIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenDialog_GetFilterIndex").Call(obj)
	return int32(ret)
}

func OpenDialog_SetFilterIndex(obj uintptr, value int32) {
	getLazyProc("OpenDialog_SetFilterIndex").Call(obj, uintptr(value))
}

func OpenDialog_GetInitialDir(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_GetInitialDir").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_SetInitialDir(obj uintptr, value string) {
	getLazyProc("OpenDialog_SetInitialDir").Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetOptions(obj uintptr) TOpenOptions {
	ret, _, _ := getLazyProc("OpenDialog_GetOptions").Call(obj)
	return TOpenOptions(ret)
}

func OpenDialog_SetOptions(obj uintptr, value TOpenOptions) {
	getLazyProc("OpenDialog_SetOptions").Call(obj, uintptr(value))
}

func OpenDialog_GetTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_GetTitle").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_SetTitle(obj uintptr, value string) {
	getLazyProc("OpenDialog_SetTitle").Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("OpenDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func OpenDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("OpenDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func OpenDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("OpenDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func OpenDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func OpenDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func OpenDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("OpenDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func OpenDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("OpenDialog_GetOwner").Call(obj)
	return ret
}

func OpenDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func OpenDialog_SetName(obj uintptr, value string) {
	getLazyProc("OpenDialog_SetName").Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("OpenDialog_GetTag").Call(obj)
	return int(ret)
}

func OpenDialog_SetTag(obj uintptr, value int) {
	getLazyProc("OpenDialog_SetTag").Call(obj, uintptr(value))
}

func OpenDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("OpenDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func OpenDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("OpenDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TSaveDialog ---------------------------

func SaveDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SaveDialog_Create").Call(obj)
	return ret
}

func SaveDialog_Free(obj uintptr) {
	getLazyProc("SaveDialog_Free").Call(obj)
}

func SaveDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("SaveDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func SaveDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("SaveDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func SaveDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("SaveDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func SaveDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("SaveDialog_Assign").Call(obj, Source)
}

func SaveDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("SaveDialog_ClassType").Call(obj)
	return TClass(ret)
}

func SaveDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SaveDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func SaveDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("SaveDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func SaveDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("SaveDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func SaveDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SaveDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func SaveDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_GetFiles(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SaveDialog_GetFiles").Call(obj)
	return ret
}

func SaveDialog_GetDefaultExt(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_GetDefaultExt").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_SetDefaultExt(obj uintptr, value string) {
	getLazyProc("SaveDialog_SetDefaultExt").Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetFileName(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_GetFileName").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_SetFileName(obj uintptr, value string) {
	getLazyProc("SaveDialog_SetFileName").Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetFilter(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_GetFilter").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_SetFilter(obj uintptr, value string) {
	getLazyProc("SaveDialog_SetFilter").Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetFilterIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SaveDialog_GetFilterIndex").Call(obj)
	return int32(ret)
}

func SaveDialog_SetFilterIndex(obj uintptr, value int32) {
	getLazyProc("SaveDialog_SetFilterIndex").Call(obj, uintptr(value))
}

func SaveDialog_GetInitialDir(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_GetInitialDir").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_SetInitialDir(obj uintptr, value string) {
	getLazyProc("SaveDialog_SetInitialDir").Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetOptions(obj uintptr) TOpenOptions {
	ret, _, _ := getLazyProc("SaveDialog_GetOptions").Call(obj)
	return TOpenOptions(ret)
}

func SaveDialog_SetOptions(obj uintptr, value TOpenOptions) {
	getLazyProc("SaveDialog_SetOptions").Call(obj, uintptr(value))
}

func SaveDialog_GetTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_GetTitle").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_SetTitle(obj uintptr, value string) {
	getLazyProc("SaveDialog_SetTitle").Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("SaveDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func SaveDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("SaveDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func SaveDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("SaveDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func SaveDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SaveDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func SaveDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SaveDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func SaveDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("SaveDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func SaveDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SaveDialog_GetOwner").Call(obj)
	return ret
}

func SaveDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("SaveDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func SaveDialog_SetName(obj uintptr, value string) {
	getLazyProc("SaveDialog_SetName").Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("SaveDialog_GetTag").Call(obj)
	return int(ret)
}

func SaveDialog_SetTag(obj uintptr, value int) {
	getLazyProc("SaveDialog_SetTag").Call(obj, uintptr(value))
}

func SaveDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("SaveDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func SaveDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("SaveDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TColorDialog ---------------------------

func ColorDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorDialog_Create").Call(obj)
	return ret
}

func ColorDialog_Free(obj uintptr) {
	getLazyProc("ColorDialog_Free").Call(obj)
}

func ColorDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ColorDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ColorDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ColorDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ColorDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ColorDialog_Assign").Call(obj, Source)
}

func ColorDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ColorDialog_ClassType").Call(obj)
	return TClass(ret)
}

func ColorDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ColorDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func ColorDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ColorDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ColorDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ColorDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ColorDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func ColorDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ColorDialog_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ColorDialog_GetColor").Call(obj)
	return TColor(ret)
}

func ColorDialog_SetColor(obj uintptr, value TColor) {
	getLazyProc("ColorDialog_SetColor").Call(obj, uintptr(value))
}

func ColorDialog_GetCustomColors(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorDialog_GetCustomColors").Call(obj)
	return ret
}

func ColorDialog_SetCustomColors(obj uintptr, value uintptr) {
	getLazyProc("ColorDialog_SetCustomColors").Call(obj, value)
}

func ColorDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ColorDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func ColorDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("ColorDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func ColorDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("ColorDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func ColorDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func ColorDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ColorDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ColorDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ColorDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func ColorDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ColorDialog_GetOwner").Call(obj)
	return ret
}

func ColorDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ColorDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ColorDialog_SetName(obj uintptr, value string) {
	getLazyProc("ColorDialog_SetName").Call(obj, GoStrToDStr(value))
}

func ColorDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ColorDialog_GetTag").Call(obj)
	return int(ret)
}

func ColorDialog_SetTag(obj uintptr, value int) {
	getLazyProc("ColorDialog_SetTag").Call(obj, uintptr(value))
}

func ColorDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ColorDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ColorDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("ColorDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TFontDialog ---------------------------

func FontDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FontDialog_Create").Call(obj)
	return ret
}

func FontDialog_Free(obj uintptr) {
	getLazyProc("FontDialog_Free").Call(obj)
}

func FontDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("FontDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func FontDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("FontDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func FontDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("FontDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func FontDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("FontDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func FontDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("FontDialog_Assign").Call(obj, Source)
}

func FontDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("FontDialog_ClassType").Call(obj)
	return TClass(ret)
}

func FontDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("FontDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func FontDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FontDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func FontDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("FontDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func FontDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("FontDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func FontDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FontDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func FontDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("FontDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func FontDialog_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FontDialog_GetFont").Call(obj)
	return ret
}

func FontDialog_SetFont(obj uintptr, value uintptr) {
	getLazyProc("FontDialog_SetFont").Call(obj, value)
}

func FontDialog_GetOptions(obj uintptr) TFontDialogOptions {
	ret, _, _ := getLazyProc("FontDialog_GetOptions").Call(obj)
	return TFontDialogOptions(ret)
}

func FontDialog_SetOptions(obj uintptr, value TFontDialogOptions) {
	getLazyProc("FontDialog_SetOptions").Call(obj, uintptr(value))
}

func FontDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("FontDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func FontDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("FontDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func FontDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("FontDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func FontDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FontDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func FontDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FontDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func FontDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("FontDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func FontDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FontDialog_GetOwner").Call(obj)
	return ret
}

func FontDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("FontDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func FontDialog_SetName(obj uintptr, value string) {
	getLazyProc("FontDialog_SetName").Call(obj, GoStrToDStr(value))
}

func FontDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("FontDialog_GetTag").Call(obj)
	return int(ret)
}

func FontDialog_SetTag(obj uintptr, value int) {
	getLazyProc("FontDialog_SetTag").Call(obj, uintptr(value))
}

func FontDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("FontDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func FontDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("FontDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPrintDialog ---------------------------

func PrintDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PrintDialog_Create").Call(obj)
	return ret
}

func PrintDialog_Free(obj uintptr) {
	getLazyProc("PrintDialog_Free").Call(obj)
}

func PrintDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("PrintDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func PrintDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("PrintDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func PrintDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("PrintDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func PrintDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("PrintDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func PrintDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("PrintDialog_Assign").Call(obj, Source)
}

func PrintDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("PrintDialog_ClassType").Call(obj)
	return TClass(ret)
}

func PrintDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("PrintDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func PrintDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func PrintDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("PrintDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func PrintDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("PrintDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func PrintDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func PrintDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("PrintDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func PrintDialog_GetCollate(obj uintptr) bool {
	ret, _, _ := getLazyProc("PrintDialog_GetCollate").Call(obj)
	return DBoolToGoBool(ret)
}

func PrintDialog_SetCollate(obj uintptr, value bool) {
	getLazyProc("PrintDialog_SetCollate").Call(obj, GoBoolToDBool(value))
}

func PrintDialog_GetCopies(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetCopies").Call(obj)
	return int32(ret)
}

func PrintDialog_SetCopies(obj uintptr, value int32) {
	getLazyProc("PrintDialog_SetCopies").Call(obj, uintptr(value))
}

func PrintDialog_GetFromPage(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetFromPage").Call(obj)
	return int32(ret)
}

func PrintDialog_SetFromPage(obj uintptr, value int32) {
	getLazyProc("PrintDialog_SetFromPage").Call(obj, uintptr(value))
}

func PrintDialog_GetMinPage(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetMinPage").Call(obj)
	return int32(ret)
}

func PrintDialog_SetMinPage(obj uintptr, value int32) {
	getLazyProc("PrintDialog_SetMinPage").Call(obj, uintptr(value))
}

func PrintDialog_GetMaxPage(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetMaxPage").Call(obj)
	return int32(ret)
}

func PrintDialog_SetMaxPage(obj uintptr, value int32) {
	getLazyProc("PrintDialog_SetMaxPage").Call(obj, uintptr(value))
}

func PrintDialog_GetOptions(obj uintptr) TPrintDialogOptions {
	ret, _, _ := getLazyProc("PrintDialog_GetOptions").Call(obj)
	return TPrintDialogOptions(ret)
}

func PrintDialog_SetOptions(obj uintptr, value TPrintDialogOptions) {
	getLazyProc("PrintDialog_SetOptions").Call(obj, uintptr(value))
}

func PrintDialog_GetPrintToFile(obj uintptr) bool {
	ret, _, _ := getLazyProc("PrintDialog_GetPrintToFile").Call(obj)
	return DBoolToGoBool(ret)
}

func PrintDialog_SetPrintToFile(obj uintptr, value bool) {
	getLazyProc("PrintDialog_SetPrintToFile").Call(obj, GoBoolToDBool(value))
}

func PrintDialog_GetPrintRange(obj uintptr) TPrintRange {
	ret, _, _ := getLazyProc("PrintDialog_GetPrintRange").Call(obj)
	return TPrintRange(ret)
}

func PrintDialog_SetPrintRange(obj uintptr, value TPrintRange) {
	getLazyProc("PrintDialog_SetPrintRange").Call(obj, uintptr(value))
}

func PrintDialog_GetToPage(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetToPage").Call(obj)
	return int32(ret)
}

func PrintDialog_SetToPage(obj uintptr, value int32) {
	getLazyProc("PrintDialog_SetToPage").Call(obj, uintptr(value))
}

func PrintDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("PrintDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func PrintDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("PrintDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func PrintDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("PrintDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func PrintDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func PrintDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrintDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func PrintDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("PrintDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func PrintDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PrintDialog_GetOwner").Call(obj)
	return ret
}

func PrintDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("PrintDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func PrintDialog_SetName(obj uintptr, value string) {
	getLazyProc("PrintDialog_SetName").Call(obj, GoStrToDStr(value))
}

func PrintDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("PrintDialog_GetTag").Call(obj)
	return int(ret)
}

func PrintDialog_SetTag(obj uintptr, value int) {
	getLazyProc("PrintDialog_SetTag").Call(obj, uintptr(value))
}

func PrintDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("PrintDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func PrintDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("PrintDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TOpenPictureDialog ---------------------------

func OpenPictureDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("OpenPictureDialog_Create").Call(obj)
	return ret
}

func OpenPictureDialog_Free(obj uintptr) {
	getLazyProc("OpenPictureDialog_Free").Call(obj)
}

func OpenPictureDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("OpenPictureDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func OpenPictureDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("OpenPictureDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func OpenPictureDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("OpenPictureDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func OpenPictureDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("OpenPictureDialog_Assign").Call(obj, Source)
}

func OpenPictureDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("OpenPictureDialog_ClassType").Call(obj)
	return TClass(ret)
}

func OpenPictureDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenPictureDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func OpenPictureDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("OpenPictureDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func OpenPictureDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("OpenPictureDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func OpenPictureDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func OpenPictureDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_GetFilter(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetFilter").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_SetFilter(obj uintptr, value string) {
	getLazyProc("OpenPictureDialog_SetFilter").Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetFiles(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetFiles").Call(obj)
	return ret
}

func OpenPictureDialog_GetDefaultExt(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetDefaultExt").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_SetDefaultExt(obj uintptr, value string) {
	getLazyProc("OpenPictureDialog_SetDefaultExt").Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetFileName(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetFileName").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_SetFileName(obj uintptr, value string) {
	getLazyProc("OpenPictureDialog_SetFileName").Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetFilterIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetFilterIndex").Call(obj)
	return int32(ret)
}

func OpenPictureDialog_SetFilterIndex(obj uintptr, value int32) {
	getLazyProc("OpenPictureDialog_SetFilterIndex").Call(obj, uintptr(value))
}

func OpenPictureDialog_GetInitialDir(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetInitialDir").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_SetInitialDir(obj uintptr, value string) {
	getLazyProc("OpenPictureDialog_SetInitialDir").Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetOptions(obj uintptr) TOpenOptions {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetOptions").Call(obj)
	return TOpenOptions(ret)
}

func OpenPictureDialog_SetOptions(obj uintptr, value TOpenOptions) {
	getLazyProc("OpenPictureDialog_SetOptions").Call(obj, uintptr(value))
}

func OpenPictureDialog_GetTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetTitle").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_SetTitle(obj uintptr, value string) {
	getLazyProc("OpenPictureDialog_SetTitle").Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func OpenPictureDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("OpenPictureDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func OpenPictureDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("OpenPictureDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func OpenPictureDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func OpenPictureDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func OpenPictureDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("OpenPictureDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func OpenPictureDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetOwner").Call(obj)
	return ret
}

func OpenPictureDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func OpenPictureDialog_SetName(obj uintptr, value string) {
	getLazyProc("OpenPictureDialog_SetName").Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetTag").Call(obj)
	return int(ret)
}

func OpenPictureDialog_SetTag(obj uintptr, value int) {
	getLazyProc("OpenPictureDialog_SetTag").Call(obj, uintptr(value))
}

func OpenPictureDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("OpenPictureDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func OpenPictureDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("OpenPictureDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TSavePictureDialog ---------------------------

func SavePictureDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SavePictureDialog_Create").Call(obj)
	return ret
}

func SavePictureDialog_Free(obj uintptr) {
	getLazyProc("SavePictureDialog_Free").Call(obj)
}

func SavePictureDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("SavePictureDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func SavePictureDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("SavePictureDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func SavePictureDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("SavePictureDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func SavePictureDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("SavePictureDialog_Assign").Call(obj, Source)
}

func SavePictureDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("SavePictureDialog_ClassType").Call(obj)
	return TClass(ret)
}

func SavePictureDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SavePictureDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func SavePictureDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("SavePictureDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func SavePictureDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("SavePictureDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func SavePictureDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SavePictureDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func SavePictureDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_GetFilter(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_GetFilter").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_SetFilter(obj uintptr, value string) {
	getLazyProc("SavePictureDialog_SetFilter").Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetFiles(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SavePictureDialog_GetFiles").Call(obj)
	return ret
}

func SavePictureDialog_GetDefaultExt(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_GetDefaultExt").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_SetDefaultExt(obj uintptr, value string) {
	getLazyProc("SavePictureDialog_SetDefaultExt").Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetFileName(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_GetFileName").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_SetFileName(obj uintptr, value string) {
	getLazyProc("SavePictureDialog_SetFileName").Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetFilterIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SavePictureDialog_GetFilterIndex").Call(obj)
	return int32(ret)
}

func SavePictureDialog_SetFilterIndex(obj uintptr, value int32) {
	getLazyProc("SavePictureDialog_SetFilterIndex").Call(obj, uintptr(value))
}

func SavePictureDialog_GetInitialDir(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_GetInitialDir").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_SetInitialDir(obj uintptr, value string) {
	getLazyProc("SavePictureDialog_SetInitialDir").Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetOptions(obj uintptr) TOpenOptions {
	ret, _, _ := getLazyProc("SavePictureDialog_GetOptions").Call(obj)
	return TOpenOptions(ret)
}

func SavePictureDialog_SetOptions(obj uintptr, value TOpenOptions) {
	getLazyProc("SavePictureDialog_SetOptions").Call(obj, uintptr(value))
}

func SavePictureDialog_GetTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_GetTitle").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_SetTitle(obj uintptr, value string) {
	getLazyProc("SavePictureDialog_SetTitle").Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("SavePictureDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func SavePictureDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("SavePictureDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func SavePictureDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("SavePictureDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func SavePictureDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SavePictureDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func SavePictureDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SavePictureDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func SavePictureDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("SavePictureDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func SavePictureDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SavePictureDialog_GetOwner").Call(obj)
	return ret
}

func SavePictureDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("SavePictureDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func SavePictureDialog_SetName(obj uintptr, value string) {
	getLazyProc("SavePictureDialog_SetName").Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("SavePictureDialog_GetTag").Call(obj)
	return int(ret)
}

func SavePictureDialog_SetTag(obj uintptr, value int) {
	getLazyProc("SavePictureDialog_SetTag").Call(obj, uintptr(value))
}

func SavePictureDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("SavePictureDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func SavePictureDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("SavePictureDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TSelectDirectoryDialog ---------------------------

func SelectDirectoryDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_Create").Call(obj)
	return ret
}

func SelectDirectoryDialog_Free(obj uintptr) {
	getLazyProc("SelectDirectoryDialog_Free").Call(obj)
}

func SelectDirectoryDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func SelectDirectoryDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("SelectDirectoryDialog_Assign").Call(obj, Source)
}

func SelectDirectoryDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_ClassType").Call(obj)
	return TClass(ret)
}

func SelectDirectoryDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func SelectDirectoryDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func SelectDirectoryDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_GetFiles(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetFiles").Call(obj)
	return ret
}

func SelectDirectoryDialog_GetDefaultExt(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetDefaultExt").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetDefaultExt(obj uintptr, value string) {
	getLazyProc("SelectDirectoryDialog_SetDefaultExt").Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetFileName(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetFileName").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetFileName(obj uintptr, value string) {
	getLazyProc("SelectDirectoryDialog_SetFileName").Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetFilter(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetFilter").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetFilter(obj uintptr, value string) {
	getLazyProc("SelectDirectoryDialog_SetFilter").Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetFilterIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetFilterIndex").Call(obj)
	return int32(ret)
}

func SelectDirectoryDialog_SetFilterIndex(obj uintptr, value int32) {
	getLazyProc("SelectDirectoryDialog_SetFilterIndex").Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetInitialDir(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetInitialDir").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetInitialDir(obj uintptr, value string) {
	getLazyProc("SelectDirectoryDialog_SetInitialDir").Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetOptions(obj uintptr) TOpenOptions {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetOptions").Call(obj)
	return TOpenOptions(ret)
}

func SelectDirectoryDialog_SetOptions(obj uintptr, value TOpenOptions) {
	getLazyProc("SelectDirectoryDialog_SetOptions").Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetTitle").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetTitle(obj uintptr, value string) {
	getLazyProc("SelectDirectoryDialog_SetTitle").Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func SelectDirectoryDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("SelectDirectoryDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func SelectDirectoryDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("SelectDirectoryDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func SelectDirectoryDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func SelectDirectoryDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func SelectDirectoryDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("SelectDirectoryDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetOwner").Call(obj)
	return ret
}

func SelectDirectoryDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetName(obj uintptr, value string) {
	getLazyProc("SelectDirectoryDialog_SetName").Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetTag").Call(obj)
	return int(ret)
}

func SelectDirectoryDialog_SetTag(obj uintptr, value int) {
	getLazyProc("SelectDirectoryDialog_SetTag").Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("SelectDirectoryDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func SelectDirectoryDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("SelectDirectoryDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TRichEdit ---------------------------

func RichEdit_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_Create").Call(obj)
	return ret
}

func RichEdit_Free(obj uintptr) {
	getLazyProc("RichEdit_Free").Call(obj)
}

func RichEdit_Clear(obj uintptr) {
	getLazyProc("RichEdit_Clear").Call(obj)
}

func RichEdit_FindText(obj uintptr, SearchStr string, StartPos int32, Length int32, Options TSearchTypes) int32 {
	ret, _, _ := getLazyProc("RichEdit_FindText").Call(obj, GoStrToDStr(SearchStr), uintptr(StartPos), uintptr(Length), uintptr(Options))
	return int32(ret)
}

func RichEdit_ClearSelection(obj uintptr) {
	getLazyProc("RichEdit_ClearSelection").Call(obj)
}

func RichEdit_CopyToClipboard(obj uintptr) {
	getLazyProc("RichEdit_CopyToClipboard").Call(obj)
}

func RichEdit_CutToClipboard(obj uintptr) {
	getLazyProc("RichEdit_CutToClipboard").Call(obj)
}

func RichEdit_PasteFromClipboard(obj uintptr) {
	getLazyProc("RichEdit_PasteFromClipboard").Call(obj)
}

func RichEdit_Undo(obj uintptr) {
	getLazyProc("RichEdit_Undo").Call(obj)
}

func RichEdit_SelectAll(obj uintptr) {
	getLazyProc("RichEdit_SelectAll").Call(obj)
}

func RichEdit_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func RichEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("RichEdit_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func RichEdit_DisableAlign(obj uintptr) {
	getLazyProc("RichEdit_DisableAlign").Call(obj)
}

func RichEdit_EnableAlign(obj uintptr) {
	getLazyProc("RichEdit_EnableAlign").Call(obj)
}

func RichEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("RichEdit_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func RichEdit_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("RichEdit_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func RichEdit_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("RichEdit_InsertControl").Call(obj, AControl)
}

func RichEdit_Invalidate(obj uintptr) {
	getLazyProc("RichEdit_Invalidate").Call(obj)
}

func RichEdit_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("RichEdit_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func RichEdit_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("RichEdit_RemoveControl").Call(obj, AControl)
}

func RichEdit_Realign(obj uintptr) {
	getLazyProc("RichEdit_Realign").Call(obj)
}

func RichEdit_Repaint(obj uintptr) {
	getLazyProc("RichEdit_Repaint").Call(obj)
}

func RichEdit_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("RichEdit_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func RichEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("RichEdit_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func RichEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("RichEdit_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func RichEdit_SetFocus(obj uintptr) {
	getLazyProc("RichEdit_SetFocus").Call(obj)
}

func RichEdit_Update(obj uintptr) {
	getLazyProc("RichEdit_Update").Call(obj)
}

func RichEdit_BringToFront(obj uintptr) {
	getLazyProc("RichEdit_BringToFront").Call(obj)
}

func RichEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("RichEdit_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("RichEdit_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_Hide(obj uintptr) {
	getLazyProc("RichEdit_Hide").Call(obj)
}

func RichEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("RichEdit_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func RichEdit_Refresh(obj uintptr) {
	getLazyProc("RichEdit_Refresh").Call(obj)
}

func RichEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("RichEdit_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("RichEdit_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_SendToBack(obj uintptr) {
	getLazyProc("RichEdit_SendToBack").Call(obj)
}

func RichEdit_Show(obj uintptr) {
	getLazyProc("RichEdit_Show").Call(obj)
}

func RichEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("RichEdit_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func RichEdit_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetTextLen").Call(obj)
	return int32(ret)
}

func RichEdit_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("RichEdit_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func RichEdit_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("RichEdit_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func RichEdit_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_Assign(obj uintptr, Source uintptr) {
	getLazyProc("RichEdit_Assign").Call(obj, Source)
}

func RichEdit_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("RichEdit_ClassType").Call(obj)
	return TClass(ret)
}

func RichEdit_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_InstanceSize").Call(obj)
	return int32(ret)
}

func RichEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("RichEdit_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func RichEdit_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func RichEdit_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetHashCode").Call(obj)
	return int32(ret)
}

func RichEdit_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("RichEdit_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func RichEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("RichEdit_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func RichEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("RichEdit_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func RichEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("RichEdit_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func RichEdit_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("RichEdit_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func RichEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("RichEdit_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func RichEdit_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("RichEdit_AnchorClient").Call(obj, uintptr(ASpace))
}

func RichEdit_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("RichEdit_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func RichEdit_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("RichEdit_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func RichEdit_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("RichEdit_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func RichEdit_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("RichEdit_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func RichEdit_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("RichEdit_GetAlign").Call(obj)
	return TAlign(ret)
}

func RichEdit_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("RichEdit_SetAlign").Call(obj, uintptr(value))
}

func RichEdit_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("RichEdit_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func RichEdit_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("RichEdit_SetAlignment").Call(obj, uintptr(value))
}

func RichEdit_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("RichEdit_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func RichEdit_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("RichEdit_SetAnchors").Call(obj, uintptr(value))
}

func RichEdit_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("RichEdit_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func RichEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("RichEdit_SetBiDiMode").Call(obj, uintptr(value))
}

func RichEdit_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("RichEdit_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func RichEdit_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("RichEdit_SetBorderStyle").Call(obj, uintptr(value))
}

func RichEdit_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetBorderWidth").Call(obj)
	return int32(ret)
}

func RichEdit_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetBorderWidth").Call(obj, uintptr(value))
}

func RichEdit_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("RichEdit_GetColor").Call(obj)
	return TColor(ret)
}

func RichEdit_SetColor(obj uintptr, value TColor) {
	getLazyProc("RichEdit_SetColor").Call(obj, uintptr(value))
}

func RichEdit_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("RichEdit_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func RichEdit_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("RichEdit_SetDragCursor").Call(obj, uintptr(value))
}

func RichEdit_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("RichEdit_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func RichEdit_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("RichEdit_SetDragKind").Call(obj, uintptr(value))
}

func RichEdit_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("RichEdit_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func RichEdit_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("RichEdit_SetDragMode").Call(obj, uintptr(value))
}

func RichEdit_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetEnabled(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetFont").Call(obj)
	return ret
}

func RichEdit_SetFont(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetFont").Call(obj, value)
}

func RichEdit_GetHideSelection(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetHideSelection").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetHideSelection(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetHideSelection").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetConstraints").Call(obj)
	return ret
}

func RichEdit_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetConstraints").Call(obj, value)
}

func RichEdit_GetLines(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetLines").Call(obj)
	return ret
}

func RichEdit_SetLines(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetLines").Call(obj, value)
}

func RichEdit_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetMaxLength").Call(obj)
	return int32(ret)
}

func RichEdit_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetMaxLength").Call(obj, uintptr(value))
}

func RichEdit_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetParentColor(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetParentFont(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetPopupMenu").Call(obj)
	return ret
}

func RichEdit_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetPopupMenu").Call(obj, value)
}

func RichEdit_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetScrollBars(obj uintptr) TScrollStyle {
	ret, _, _ := getLazyProc("RichEdit_GetScrollBars").Call(obj)
	return TScrollStyle(ret)
}

func RichEdit_SetScrollBars(obj uintptr, value TScrollStyle) {
	getLazyProc("RichEdit_SetScrollBars").Call(obj, uintptr(value))
}

func RichEdit_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetShowHint(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("RichEdit_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func RichEdit_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("RichEdit_SetTabOrder").Call(obj, uintptr(value))
}

func RichEdit_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetTabStop(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetVisible(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetVisible").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetWantTabs(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetWantTabs").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetWantTabs(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetWantTabs").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetWantReturns(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetWantReturns").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetWantReturns(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetWantReturns").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetWordWrap(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetWordWrap").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetWordWrap(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetWordWrap").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetZoom(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetZoom").Call(obj)
	return int32(ret)
}

func RichEdit_SetZoom(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetZoom").Call(obj, uintptr(value))
}

func RichEdit_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseWheel(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseWheel").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("RichEdit_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func RichEdit_GetDefAttributes(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetDefAttributes").Call(obj)
	return ret
}

func RichEdit_SetDefAttributes(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetDefAttributes").Call(obj, value)
}

func RichEdit_GetSelAttributes(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetSelAttributes").Call(obj)
	return ret
}

func RichEdit_SetSelAttributes(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetSelAttributes").Call(obj, value)
}

func RichEdit_GetParagraph(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetParagraph").Call(obj)
	return ret
}

func RichEdit_GetCaretPos(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("RichEdit_GetCaretPos").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_SetCaretPos(obj uintptr, value TPoint) {
	getLazyProc("RichEdit_SetCaretPos").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RichEdit_GetCanUndo(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetCanUndo").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetModified(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetModified").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetSelLength").Call(obj)
	return int32(ret)
}

func RichEdit_SetSelLength(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetSelLength").Call(obj, uintptr(value))
}

func RichEdit_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetSelStart").Call(obj)
	return int32(ret)
}

func RichEdit_SetSelStart(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetSelStart").Call(obj, uintptr(value))
}

func RichEdit_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_SetSelText(obj uintptr, value string) {
	getLazyProc("RichEdit_SetSelText").Call(obj, GoStrToDStr(value))
}

func RichEdit_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_SetText(obj uintptr, value string) {
	getLazyProc("RichEdit_SetText").Call(obj, GoStrToDStr(value))
}

func RichEdit_GetTextHint(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_GetTextHint").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_SetTextHint(obj uintptr, value string) {
	getLazyProc("RichEdit_SetTextHint").Call(obj, GoStrToDStr(value))
}

func RichEdit_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetDockClientCount").Call(obj)
	return int32(ret)
}

func RichEdit_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetDockSite(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func RichEdit_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetBrush").Call(obj)
	return ret
}

func RichEdit_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetControlCount").Call(obj)
	return int32(ret)
}

func RichEdit_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("RichEdit_GetHandle").Call(obj)
	return HWND(ret)
}

func RichEdit_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("RichEdit_GetParentWindow").Call(obj)
	return HWND(ret)
}

func RichEdit_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("RichEdit_SetParentWindow").Call(obj, uintptr(value))
}

func RichEdit_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("RichEdit_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetAction").Call(obj)
	return ret
}

func RichEdit_SetAction(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetAction").Call(obj, value)
}

func RichEdit_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("RichEdit_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("RichEdit_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RichEdit_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetClientHeight").Call(obj)
	return int32(ret)
}

func RichEdit_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetClientHeight").Call(obj, uintptr(value))
}

func RichEdit_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("RichEdit_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("RichEdit_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func RichEdit_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetClientWidth").Call(obj)
	return int32(ret)
}

func RichEdit_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetClientWidth").Call(obj, uintptr(value))
}

func RichEdit_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("RichEdit_GetControlState").Call(obj)
	return TControlState(ret)
}

func RichEdit_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("RichEdit_SetControlState").Call(obj, uintptr(value))
}

func RichEdit_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("RichEdit_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func RichEdit_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("RichEdit_SetControlStyle").Call(obj, uintptr(value))
}

func RichEdit_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("RichEdit_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func RichEdit_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetParent").Call(obj)
	return ret
}

func RichEdit_SetParent(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetParent").Call(obj, value)
}

func RichEdit_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetLeft").Call(obj)
	return int32(ret)
}

func RichEdit_SetLeft(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetLeft").Call(obj, uintptr(value))
}

func RichEdit_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetTop").Call(obj)
	return int32(ret)
}

func RichEdit_SetTop(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetTop").Call(obj, uintptr(value))
}

func RichEdit_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetWidth").Call(obj)
	return int32(ret)
}

func RichEdit_SetWidth(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetWidth").Call(obj, uintptr(value))
}

func RichEdit_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetHeight").Call(obj)
	return int32(ret)
}

func RichEdit_SetHeight(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetHeight").Call(obj, uintptr(value))
}

func RichEdit_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("RichEdit_GetCursor").Call(obj)
	return TCursor(ret)
}

func RichEdit_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("RichEdit_SetCursor").Call(obj, uintptr(value))
}

func RichEdit_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_SetHint(obj uintptr, value string) {
	getLazyProc("RichEdit_SetHint").Call(obj, GoStrToDStr(value))
}

func RichEdit_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetComponentCount").Call(obj)
	return int32(ret)
}

func RichEdit_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("RichEdit_GetComponentIndex").Call(obj)
	return int32(ret)
}

func RichEdit_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("RichEdit_SetComponentIndex").Call(obj, uintptr(value))
}

func RichEdit_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetOwner").Call(obj)
	return ret
}

func RichEdit_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("RichEdit_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func RichEdit_SetName(obj uintptr, value string) {
	getLazyProc("RichEdit_SetName").Call(obj, GoStrToDStr(value))
}

func RichEdit_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("RichEdit_GetTag").Call(obj)
	return int(ret)
}

func RichEdit_SetTag(obj uintptr, value int) {
	getLazyProc("RichEdit_SetTag").Call(obj, uintptr(value))
}

func RichEdit_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetAnchorSideLeft").Call(obj)
	return ret
}

func RichEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetAnchorSideLeft").Call(obj, value)
}

func RichEdit_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetAnchorSideTop").Call(obj)
	return ret
}

func RichEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetAnchorSideTop").Call(obj, value)
}

func RichEdit_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetAnchorSideRight").Call(obj)
	return ret
}

func RichEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetAnchorSideRight").Call(obj, value)
}

func RichEdit_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetAnchorSideBottom").Call(obj)
	return ret
}

func RichEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetAnchorSideBottom").Call(obj, value)
}

func RichEdit_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetChildSizing").Call(obj)
	return ret
}

func RichEdit_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetChildSizing").Call(obj, value)
}

func RichEdit_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetBorderSpacing").Call(obj)
	return ret
}

func RichEdit_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("RichEdit_SetBorderSpacing").Call(obj, value)
}

func RichEdit_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func RichEdit_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetControls").Call(obj, uintptr(Index))
	return ret
}

func RichEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func RichEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("RichEdit_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func RichEdit_StaticClassType() TClass {
	r, _, _ := getLazyProc("RichEdit_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTrackBar ---------------------------

func TrackBar_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_Create").Call(obj)
	return ret
}

func TrackBar_Free(obj uintptr) {
	getLazyProc("TrackBar_Free").Call(obj)
}

func TrackBar_SetTick(obj uintptr, Value int32) {
	getLazyProc("TrackBar_SetTick").Call(obj, uintptr(Value))
}

func TrackBar_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func TrackBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("TrackBar_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func TrackBar_DisableAlign(obj uintptr) {
	getLazyProc("TrackBar_DisableAlign").Call(obj)
}

func TrackBar_EnableAlign(obj uintptr) {
	getLazyProc("TrackBar_EnableAlign").Call(obj)
}

func TrackBar_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("TrackBar_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func TrackBar_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("TrackBar_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func TrackBar_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("TrackBar_InsertControl").Call(obj, AControl)
}

func TrackBar_Invalidate(obj uintptr) {
	getLazyProc("TrackBar_Invalidate").Call(obj)
}

func TrackBar_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("TrackBar_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func TrackBar_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("TrackBar_RemoveControl").Call(obj, AControl)
}

func TrackBar_Realign(obj uintptr) {
	getLazyProc("TrackBar_Realign").Call(obj)
}

func TrackBar_Repaint(obj uintptr) {
	getLazyProc("TrackBar_Repaint").Call(obj)
}

func TrackBar_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("TrackBar_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func TrackBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("TrackBar_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func TrackBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("TrackBar_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func TrackBar_SetFocus(obj uintptr) {
	getLazyProc("TrackBar_SetFocus").Call(obj)
}

func TrackBar_Update(obj uintptr) {
	getLazyProc("TrackBar_Update").Call(obj)
}

func TrackBar_BringToFront(obj uintptr) {
	getLazyProc("TrackBar_BringToFront").Call(obj)
}

func TrackBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("TrackBar_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TrackBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("TrackBar_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TrackBar_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_Hide(obj uintptr) {
	getLazyProc("TrackBar_Hide").Call(obj)
}

func TrackBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("TrackBar_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func TrackBar_Refresh(obj uintptr) {
	getLazyProc("TrackBar_Refresh").Call(obj)
}

func TrackBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("TrackBar_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TrackBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("TrackBar_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TrackBar_SendToBack(obj uintptr) {
	getLazyProc("TrackBar_SendToBack").Call(obj)
}

func TrackBar_Show(obj uintptr) {
	getLazyProc("TrackBar_Show").Call(obj)
}

func TrackBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("TrackBar_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func TrackBar_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetTextLen").Call(obj)
	return int32(ret)
}

func TrackBar_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("TrackBar_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func TrackBar_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("TrackBar_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func TrackBar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TrackBar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TrackBar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TrackBar_Assign").Call(obj, Source)
}

func TrackBar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TrackBar_ClassType").Call(obj)
	return TClass(ret)
}

func TrackBar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TrackBar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TrackBar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_InstanceSize").Call(obj)
	return int32(ret)
}

func TrackBar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TrackBar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TrackBar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TrackBar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetHashCode").Call(obj)
	return int32(ret)
}

func TrackBar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TrackBar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TrackBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("TrackBar_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func TrackBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("TrackBar_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func TrackBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("TrackBar_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func TrackBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("TrackBar_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func TrackBar_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("TrackBar_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func TrackBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("TrackBar_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func TrackBar_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("TrackBar_AnchorClient").Call(obj, uintptr(ASpace))
}

func TrackBar_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TrackBar_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TrackBar_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("TrackBar_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func TrackBar_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("TrackBar_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func TrackBar_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("TrackBar_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func TrackBar_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("TrackBar_GetAlign").Call(obj)
	return TAlign(ret)
}

func TrackBar_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("TrackBar_SetAlign").Call(obj, uintptr(value))
}

func TrackBar_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("TrackBar_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func TrackBar_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("TrackBar_SetAnchors").Call(obj, uintptr(value))
}

func TrackBar_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetBorderWidth").Call(obj)
	return int32(ret)
}

func TrackBar_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetBorderWidth").Call(obj, uintptr(value))
}

func TrackBar_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("TrackBar_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func TrackBar_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("TrackBar_SetDragCursor").Call(obj, uintptr(value))
}

func TrackBar_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("TrackBar_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func TrackBar_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("TrackBar_SetDragMode").Call(obj, uintptr(value))
}

func TrackBar_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetEnabled(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetConstraints").Call(obj)
	return ret
}

func TrackBar_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetConstraints").Call(obj, value)
}

func TrackBar_GetLineSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetLineSize").Call(obj)
	return int32(ret)
}

func TrackBar_SetLineSize(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetLineSize").Call(obj, uintptr(value))
}

func TrackBar_GetMax(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetMax").Call(obj)
	return int32(ret)
}

func TrackBar_SetMax(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetMax").Call(obj, uintptr(value))
}

func TrackBar_GetMin(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetMin").Call(obj)
	return int32(ret)
}

func TrackBar_SetMin(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetMin").Call(obj, uintptr(value))
}

func TrackBar_GetOrientation(obj uintptr) TTrackBarOrientation {
	ret, _, _ := getLazyProc("TrackBar_GetOrientation").Call(obj)
	return TTrackBarOrientation(ret)
}

func TrackBar_SetOrientation(obj uintptr, value TTrackBarOrientation) {
	getLazyProc("TrackBar_SetOrientation").Call(obj, uintptr(value))
}

func TrackBar_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetPageSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetPageSize").Call(obj)
	return int32(ret)
}

func TrackBar_SetPageSize(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetPageSize").Call(obj, uintptr(value))
}

func TrackBar_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetPopupMenu").Call(obj)
	return ret
}

func TrackBar_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetPopupMenu").Call(obj, value)
}

func TrackBar_GetFrequency(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetFrequency").Call(obj)
	return int32(ret)
}

func TrackBar_SetFrequency(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetFrequency").Call(obj, uintptr(value))
}

func TrackBar_GetPosition(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetPosition").Call(obj)
	return int32(ret)
}

func TrackBar_SetPosition(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetPosition").Call(obj, uintptr(value))
}

func TrackBar_GetSelEnd(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetSelEnd").Call(obj)
	return int32(ret)
}

func TrackBar_SetSelEnd(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetSelEnd").Call(obj, uintptr(value))
}

func TrackBar_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetSelStart").Call(obj)
	return int32(ret)
}

func TrackBar_SetSelStart(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetSelStart").Call(obj, uintptr(value))
}

func TrackBar_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetShowHint(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetShowSelRange(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetShowSelRange").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetShowSelRange(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetShowSelRange").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("TrackBar_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func TrackBar_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("TrackBar_SetTabOrder").Call(obj, uintptr(value))
}

func TrackBar_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetTabStop(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetTickMarks(obj uintptr) TTickMark {
	ret, _, _ := getLazyProc("TrackBar_GetTickMarks").Call(obj)
	return TTickMark(ret)
}

func TrackBar_SetTickMarks(obj uintptr, value TTickMark) {
	getLazyProc("TrackBar_SetTickMarks").Call(obj, uintptr(value))
}

func TrackBar_GetTickStyle(obj uintptr) TTickStyle {
	ret, _, _ := getLazyProc("TrackBar_GetTickStyle").Call(obj)
	return TTickStyle(ret)
}

func TrackBar_SetTickStyle(obj uintptr, value TTickStyle) {
	getLazyProc("TrackBar_SetTickStyle").Call(obj, uintptr(value))
}

func TrackBar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetVisible(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func TrackBar_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("TrackBar_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func TrackBar_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetDockClientCount").Call(obj)
	return int32(ret)
}

func TrackBar_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetDockSite(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func TrackBar_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetBrush").Call(obj)
	return ret
}

func TrackBar_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetControlCount").Call(obj)
	return int32(ret)
}

func TrackBar_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("TrackBar_GetHandle").Call(obj)
	return HWND(ret)
}

func TrackBar_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("TrackBar_GetParentWindow").Call(obj)
	return HWND(ret)
}

func TrackBar_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("TrackBar_SetParentWindow").Call(obj, uintptr(value))
}

func TrackBar_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("TrackBar_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetAction").Call(obj)
	return ret
}

func TrackBar_SetAction(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetAction").Call(obj, value)
}

func TrackBar_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("TrackBar_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func TrackBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("TrackBar_SetBiDiMode").Call(obj, uintptr(value))
}

func TrackBar_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("TrackBar_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TrackBar_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("TrackBar_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func TrackBar_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetClientHeight").Call(obj)
	return int32(ret)
}

func TrackBar_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetClientHeight").Call(obj, uintptr(value))
}

func TrackBar_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("TrackBar_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TrackBar_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("TrackBar_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TrackBar_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetClientWidth").Call(obj)
	return int32(ret)
}

func TrackBar_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetClientWidth").Call(obj, uintptr(value))
}

func TrackBar_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("TrackBar_GetControlState").Call(obj)
	return TControlState(ret)
}

func TrackBar_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("TrackBar_SetControlState").Call(obj, uintptr(value))
}

func TrackBar_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("TrackBar_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func TrackBar_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("TrackBar_SetControlStyle").Call(obj, uintptr(value))
}

func TrackBar_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("TrackBar_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func TrackBar_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetParent").Call(obj)
	return ret
}

func TrackBar_SetParent(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetParent").Call(obj, value)
}

func TrackBar_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetLeft").Call(obj)
	return int32(ret)
}

func TrackBar_SetLeft(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetLeft").Call(obj, uintptr(value))
}

func TrackBar_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetTop").Call(obj)
	return int32(ret)
}

func TrackBar_SetTop(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetTop").Call(obj, uintptr(value))
}

func TrackBar_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetWidth").Call(obj)
	return int32(ret)
}

func TrackBar_SetWidth(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetWidth").Call(obj, uintptr(value))
}

func TrackBar_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetHeight").Call(obj)
	return int32(ret)
}

func TrackBar_SetHeight(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetHeight").Call(obj, uintptr(value))
}

func TrackBar_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("TrackBar_GetCursor").Call(obj)
	return TCursor(ret)
}

func TrackBar_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("TrackBar_SetCursor").Call(obj, uintptr(value))
}

func TrackBar_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("TrackBar_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func TrackBar_SetHint(obj uintptr, value string) {
	getLazyProc("TrackBar_SetHint").Call(obj, GoStrToDStr(value))
}

func TrackBar_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetComponentCount").Call(obj)
	return int32(ret)
}

func TrackBar_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TrackBar_GetComponentIndex").Call(obj)
	return int32(ret)
}

func TrackBar_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("TrackBar_SetComponentIndex").Call(obj, uintptr(value))
}

func TrackBar_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetOwner").Call(obj)
	return ret
}

func TrackBar_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("TrackBar_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func TrackBar_SetName(obj uintptr, value string) {
	getLazyProc("TrackBar_SetName").Call(obj, GoStrToDStr(value))
}

func TrackBar_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("TrackBar_GetTag").Call(obj)
	return int(ret)
}

func TrackBar_SetTag(obj uintptr, value int) {
	getLazyProc("TrackBar_SetTag").Call(obj, uintptr(value))
}

func TrackBar_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetAnchorSideLeft").Call(obj)
	return ret
}

func TrackBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetAnchorSideLeft").Call(obj, value)
}

func TrackBar_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetAnchorSideTop").Call(obj)
	return ret
}

func TrackBar_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetAnchorSideTop").Call(obj, value)
}

func TrackBar_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetAnchorSideRight").Call(obj)
	return ret
}

func TrackBar_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetAnchorSideRight").Call(obj, value)
}

func TrackBar_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetAnchorSideBottom").Call(obj)
	return ret
}

func TrackBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetAnchorSideBottom").Call(obj, value)
}

func TrackBar_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetChildSizing").Call(obj)
	return ret
}

func TrackBar_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetChildSizing").Call(obj, value)
}

func TrackBar_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetBorderSpacing").Call(obj)
	return ret
}

func TrackBar_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("TrackBar_SetBorderSpacing").Call(obj, value)
}

func TrackBar_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func TrackBar_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetControls").Call(obj, uintptr(Index))
	return ret
}

func TrackBar_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func TrackBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("TrackBar_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func TrackBar_StaticClassType() TClass {
	r, _, _ := getLazyProc("TrackBar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TImageList ---------------------------

func ImageList_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageList_Create").Call(obj)
	return ret
}

func ImageList_Free(obj uintptr) {
	getLazyProc("ImageList_Free").Call(obj)
}

func ImageList_StretchDraw(obj uintptr, ACanvas uintptr, AIndex int32, ARect TRect, AEnabled bool) {
	getLazyProc("ImageList_StretchDraw").Call(obj, ACanvas, uintptr(AIndex), uintptr(unsafe.Pointer(&ARect)), GoBoolToDBool(AEnabled))
}

func ImageList_AddSliced(obj uintptr, Image uintptr, AHorizontalCount int32, AVerticalCount int32) int32 {
	ret, _, _ := getLazyProc("ImageList_AddSliced").Call(obj, Image, uintptr(AHorizontalCount), uintptr(AVerticalCount))
	return int32(ret)
}

func ImageList_GetHotSpot(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ImageList_GetHotSpot").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageList_HideDragImage(obj uintptr) {
	getLazyProc("ImageList_HideDragImage").Call(obj)
}

func ImageList_ShowDragImage(obj uintptr) {
	getLazyProc("ImageList_ShowDragImage").Call(obj)
}

func ImageList_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ImageList_Assign").Call(obj, Source)
}

func ImageList_Add(obj uintptr, Image uintptr, Mask uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_Add").Call(obj, Image, Mask)
	return int32(ret)
}

func ImageList_AddIcon(obj uintptr, Image uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_AddIcon").Call(obj, Image)
	return int32(ret)
}

func ImageList_AddImages(obj uintptr, Value uintptr) {
	getLazyProc("ImageList_AddImages").Call(obj, Value)
}

func ImageList_AddMasked(obj uintptr, Image uintptr, MaskColor TColor) int32 {
	ret, _, _ := getLazyProc("ImageList_AddMasked").Call(obj, Image, uintptr(MaskColor))
	return int32(ret)
}

func ImageList_Clear(obj uintptr) {
	getLazyProc("ImageList_Clear").Call(obj)
}

func ImageList_Delete(obj uintptr, Index int32) {
	getLazyProc("ImageList_Delete").Call(obj, uintptr(Index))
}

func ImageList_Insert(obj uintptr, Index int32, Image uintptr, Mask uintptr) {
	getLazyProc("ImageList_Insert").Call(obj, uintptr(Index), Image, Mask)
}

func ImageList_InsertIcon(obj uintptr, Index int32, Image uintptr) {
	getLazyProc("ImageList_InsertIcon").Call(obj, uintptr(Index), Image)
}

func ImageList_InsertMasked(obj uintptr, Index int32, Image uintptr, MaskColor TColor) {
	getLazyProc("ImageList_InsertMasked").Call(obj, uintptr(Index), Image, uintptr(MaskColor))
}

func ImageList_Move(obj uintptr, CurIndex int32, NewIndex int32) {
	getLazyProc("ImageList_Move").Call(obj, uintptr(CurIndex), uintptr(NewIndex))
}

func ImageList_Replace(obj uintptr, Index int32, Image uintptr, Mask uintptr) {
	getLazyProc("ImageList_Replace").Call(obj, uintptr(Index), Image, Mask)
}

func ImageList_ReplaceMasked(obj uintptr, Index int32, NewImage uintptr, MaskColor TColor) {
	getLazyProc("ImageList_ReplaceMasked").Call(obj, uintptr(Index), NewImage, uintptr(MaskColor))
}

func ImageList_BeginUpdate(obj uintptr) {
	getLazyProc("ImageList_BeginUpdate").Call(obj)
}

func ImageList_EndUpdate(obj uintptr) {
	getLazyProc("ImageList_EndUpdate").Call(obj)
}

func ImageList_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ImageList_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ImageList_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageList_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ImageList_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageList_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageList_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ImageList_ClassType").Call(obj)
	return TClass(ret)
}

func ImageList_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageList_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ImageList_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_InstanceSize").Call(obj)
	return int32(ret)
}

func ImageList_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ImageList_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ImageList_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageList_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ImageList_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_GetHashCode").Call(obj)
	return int32(ret)
}

func ImageList_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageList_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ImageList_GetScaled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageList_GetScaled").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageList_SetScaled(obj uintptr, value bool) {
	getLazyProc("ImageList_SetScaled").Call(obj, GoBoolToDBool(value))
}

func ImageList_GetShareImages(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageList_GetShareImages").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageList_SetShareImages(obj uintptr, value bool) {
	getLazyProc("ImageList_SetShareImages").Call(obj, GoBoolToDBool(value))
}

func ImageList_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_GetCount").Call(obj)
	return int32(ret)
}

func ImageList_GetBlendColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ImageList_GetBlendColor").Call(obj)
	return TColor(ret)
}

func ImageList_SetBlendColor(obj uintptr, value TColor) {
	getLazyProc("ImageList_SetBlendColor").Call(obj, uintptr(value))
}

func ImageList_GetBkColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ImageList_GetBkColor").Call(obj)
	return TColor(ret)
}

func ImageList_SetBkColor(obj uintptr, value TColor) {
	getLazyProc("ImageList_SetBkColor").Call(obj, uintptr(value))
}

func ImageList_GetAllocBy(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_GetAllocBy").Call(obj)
	return int32(ret)
}

func ImageList_SetAllocBy(obj uintptr, value int32) {
	getLazyProc("ImageList_SetAllocBy").Call(obj, uintptr(value))
}

func ImageList_GetDrawingStyle(obj uintptr) TDrawingStyle {
	ret, _, _ := getLazyProc("ImageList_GetDrawingStyle").Call(obj)
	return TDrawingStyle(ret)
}

func ImageList_SetDrawingStyle(obj uintptr, value TDrawingStyle) {
	getLazyProc("ImageList_SetDrawingStyle").Call(obj, uintptr(value))
}

func ImageList_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_GetHeight").Call(obj)
	return int32(ret)
}

func ImageList_SetHeight(obj uintptr, value int32) {
	getLazyProc("ImageList_SetHeight").Call(obj, uintptr(value))
}

func ImageList_GetImageType(obj uintptr) TImageType {
	ret, _, _ := getLazyProc("ImageList_GetImageType").Call(obj)
	return TImageType(ret)
}

func ImageList_SetImageType(obj uintptr, value TImageType) {
	getLazyProc("ImageList_SetImageType").Call(obj, uintptr(value))
}

func ImageList_GetMasked(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageList_GetMasked").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageList_SetMasked(obj uintptr, value bool) {
	getLazyProc("ImageList_SetMasked").Call(obj, GoBoolToDBool(value))
}

func ImageList_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ImageList_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ImageList_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_GetWidth").Call(obj)
	return int32(ret)
}

func ImageList_SetWidth(obj uintptr, value int32) {
	getLazyProc("ImageList_SetWidth").Call(obj, uintptr(value))
}

func ImageList_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ImageList_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ImageList_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ImageList_SetDragCursor").Call(obj, uintptr(value))
}

func ImageList_GetDragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageList_GetDragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageList_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_GetComponentCount").Call(obj)
	return int32(ret)
}

func ImageList_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageList_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ImageList_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ImageList_SetComponentIndex").Call(obj, uintptr(value))
}

func ImageList_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageList_GetOwner").Call(obj)
	return ret
}

func ImageList_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageList_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ImageList_SetName(obj uintptr, value string) {
	getLazyProc("ImageList_SetName").Call(obj, GoStrToDStr(value))
}

func ImageList_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ImageList_GetTag").Call(obj)
	return int(ret)
}

func ImageList_SetTag(obj uintptr, value int) {
	getLazyProc("ImageList_SetTag").Call(obj, uintptr(value))
}

func ImageList_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ImageList_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ImageList_StaticClassType() TClass {
	r, _, _ := getLazyProc("ImageList_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TUpDown ---------------------------

func UpDown_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_Create").Call(obj)
	return ret
}

func UpDown_Free(obj uintptr) {
	getLazyProc("UpDown_Free").Call(obj)
}

func UpDown_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func UpDown_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("UpDown_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func UpDown_DisableAlign(obj uintptr) {
	getLazyProc("UpDown_DisableAlign").Call(obj)
}

func UpDown_EnableAlign(obj uintptr) {
	getLazyProc("UpDown_EnableAlign").Call(obj)
}

func UpDown_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("UpDown_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func UpDown_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("UpDown_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func UpDown_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("UpDown_InsertControl").Call(obj, AControl)
}

func UpDown_Invalidate(obj uintptr) {
	getLazyProc("UpDown_Invalidate").Call(obj)
}

func UpDown_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("UpDown_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func UpDown_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("UpDown_RemoveControl").Call(obj, AControl)
}

func UpDown_Realign(obj uintptr) {
	getLazyProc("UpDown_Realign").Call(obj)
}

func UpDown_Repaint(obj uintptr) {
	getLazyProc("UpDown_Repaint").Call(obj)
}

func UpDown_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("UpDown_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func UpDown_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("UpDown_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func UpDown_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("UpDown_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func UpDown_SetFocus(obj uintptr) {
	getLazyProc("UpDown_SetFocus").Call(obj)
}

func UpDown_Update(obj uintptr) {
	getLazyProc("UpDown_Update").Call(obj)
}

func UpDown_BringToFront(obj uintptr) {
	getLazyProc("UpDown_BringToFront").Call(obj)
}

func UpDown_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("UpDown_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func UpDown_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("UpDown_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func UpDown_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_Hide(obj uintptr) {
	getLazyProc("UpDown_Hide").Call(obj)
}

func UpDown_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("UpDown_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func UpDown_Refresh(obj uintptr) {
	getLazyProc("UpDown_Refresh").Call(obj)
}

func UpDown_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("UpDown_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func UpDown_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("UpDown_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func UpDown_SendToBack(obj uintptr) {
	getLazyProc("UpDown_SendToBack").Call(obj)
}

func UpDown_Show(obj uintptr) {
	getLazyProc("UpDown_Show").Call(obj)
}

func UpDown_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("UpDown_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func UpDown_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetTextLen").Call(obj)
	return int32(ret)
}

func UpDown_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("UpDown_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func UpDown_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("UpDown_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func UpDown_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("UpDown_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func UpDown_Assign(obj uintptr, Source uintptr) {
	getLazyProc("UpDown_Assign").Call(obj, Source)
}

func UpDown_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("UpDown_ClassType").Call(obj)
	return TClass(ret)
}

func UpDown_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("UpDown_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func UpDown_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_InstanceSize").Call(obj)
	return int32(ret)
}

func UpDown_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("UpDown_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func UpDown_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func UpDown_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetHashCode").Call(obj)
	return int32(ret)
}

func UpDown_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("UpDown_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func UpDown_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("UpDown_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func UpDown_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("UpDown_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func UpDown_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("UpDown_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func UpDown_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("UpDown_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func UpDown_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("UpDown_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func UpDown_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("UpDown_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func UpDown_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("UpDown_AnchorClient").Call(obj, uintptr(ASpace))
}

func UpDown_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("UpDown_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func UpDown_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("UpDown_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func UpDown_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("UpDown_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func UpDown_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("UpDown_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func UpDown_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("UpDown_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func UpDown_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("UpDown_SetAnchors").Call(obj, uintptr(value))
}

func UpDown_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("UpDown_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetEnabled(obj uintptr, value bool) {
	getLazyProc("UpDown_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("UpDown_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func UpDown_SetHint(obj uintptr, value string) {
	getLazyProc("UpDown_SetHint").Call(obj, GoStrToDStr(value))
}

func UpDown_GetMin(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetMin").Call(obj)
	return int32(ret)
}

func UpDown_SetMin(obj uintptr, value int32) {
	getLazyProc("UpDown_SetMin").Call(obj, uintptr(value))
}

func UpDown_GetMax(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetMax").Call(obj)
	return int32(ret)
}

func UpDown_SetMax(obj uintptr, value int32) {
	getLazyProc("UpDown_SetMax").Call(obj, uintptr(value))
}

func UpDown_GetIncrement(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetIncrement").Call(obj)
	return int32(ret)
}

func UpDown_SetIncrement(obj uintptr, value int32) {
	getLazyProc("UpDown_SetIncrement").Call(obj, uintptr(value))
}

func UpDown_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetConstraints").Call(obj)
	return ret
}

func UpDown_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetConstraints").Call(obj, value)
}

func UpDown_GetOrientation(obj uintptr) TUDOrientation {
	ret, _, _ := getLazyProc("UpDown_GetOrientation").Call(obj)
	return TUDOrientation(ret)
}

func UpDown_SetOrientation(obj uintptr, value TUDOrientation) {
	getLazyProc("UpDown_SetOrientation").Call(obj, uintptr(value))
}

func UpDown_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("UpDown_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("UpDown_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetPopupMenu").Call(obj)
	return ret
}

func UpDown_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetPopupMenu").Call(obj, value)
}

func UpDown_GetPosition(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetPosition").Call(obj)
	return int32(ret)
}

func UpDown_SetPosition(obj uintptr, value int32) {
	getLazyProc("UpDown_SetPosition").Call(obj, uintptr(value))
}

func UpDown_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetShowHint(obj uintptr, value bool) {
	getLazyProc("UpDown_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("UpDown_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func UpDown_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("UpDown_SetTabOrder").Call(obj, uintptr(value))
}

func UpDown_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetTabStop(obj uintptr, value bool) {
	getLazyProc("UpDown_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetVisible(obj uintptr, value bool) {
	getLazyProc("UpDown_SetVisible").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetWrap(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetWrap").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetWrap(obj uintptr, value bool) {
	getLazyProc("UpDown_SetWrap").Call(obj, GoBoolToDBool(value))
}

func UpDown_SetOnChanging(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnChanging").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func UpDown_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("UpDown_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func UpDown_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetDockClientCount").Call(obj)
	return int32(ret)
}

func UpDown_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetDockSite(obj uintptr, value bool) {
	getLazyProc("UpDown_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func UpDown_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetBrush").Call(obj)
	return ret
}

func UpDown_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetControlCount").Call(obj)
	return int32(ret)
}

func UpDown_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("UpDown_GetHandle").Call(obj)
	return HWND(ret)
}

func UpDown_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("UpDown_GetParentWindow").Call(obj)
	return HWND(ret)
}

func UpDown_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("UpDown_SetParentWindow").Call(obj, uintptr(value))
}

func UpDown_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("UpDown_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func UpDown_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetAction").Call(obj)
	return ret
}

func UpDown_SetAction(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetAction").Call(obj, value)
}

func UpDown_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("UpDown_GetAlign").Call(obj)
	return TAlign(ret)
}

func UpDown_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("UpDown_SetAlign").Call(obj, uintptr(value))
}

func UpDown_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("UpDown_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func UpDown_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("UpDown_SetBiDiMode").Call(obj, uintptr(value))
}

func UpDown_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("UpDown_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func UpDown_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("UpDown_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func UpDown_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetClientHeight").Call(obj)
	return int32(ret)
}

func UpDown_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("UpDown_SetClientHeight").Call(obj, uintptr(value))
}

func UpDown_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("UpDown_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func UpDown_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("UpDown_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func UpDown_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetClientWidth").Call(obj)
	return int32(ret)
}

func UpDown_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("UpDown_SetClientWidth").Call(obj, uintptr(value))
}

func UpDown_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("UpDown_GetControlState").Call(obj)
	return TControlState(ret)
}

func UpDown_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("UpDown_SetControlState").Call(obj, uintptr(value))
}

func UpDown_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("UpDown_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func UpDown_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("UpDown_SetControlStyle").Call(obj, uintptr(value))
}

func UpDown_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("UpDown_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func UpDown_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetParent").Call(obj)
	return ret
}

func UpDown_SetParent(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetParent").Call(obj, value)
}

func UpDown_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetLeft").Call(obj)
	return int32(ret)
}

func UpDown_SetLeft(obj uintptr, value int32) {
	getLazyProc("UpDown_SetLeft").Call(obj, uintptr(value))
}

func UpDown_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetTop").Call(obj)
	return int32(ret)
}

func UpDown_SetTop(obj uintptr, value int32) {
	getLazyProc("UpDown_SetTop").Call(obj, uintptr(value))
}

func UpDown_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetWidth").Call(obj)
	return int32(ret)
}

func UpDown_SetWidth(obj uintptr, value int32) {
	getLazyProc("UpDown_SetWidth").Call(obj, uintptr(value))
}

func UpDown_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetHeight").Call(obj)
	return int32(ret)
}

func UpDown_SetHeight(obj uintptr, value int32) {
	getLazyProc("UpDown_SetHeight").Call(obj, uintptr(value))
}

func UpDown_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("UpDown_GetCursor").Call(obj)
	return TCursor(ret)
}

func UpDown_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("UpDown_SetCursor").Call(obj, uintptr(value))
}

func UpDown_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetComponentCount").Call(obj)
	return int32(ret)
}

func UpDown_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("UpDown_GetComponentIndex").Call(obj)
	return int32(ret)
}

func UpDown_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("UpDown_SetComponentIndex").Call(obj, uintptr(value))
}

func UpDown_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetOwner").Call(obj)
	return ret
}

func UpDown_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("UpDown_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func UpDown_SetName(obj uintptr, value string) {
	getLazyProc("UpDown_SetName").Call(obj, GoStrToDStr(value))
}

func UpDown_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("UpDown_GetTag").Call(obj)
	return int(ret)
}

func UpDown_SetTag(obj uintptr, value int) {
	getLazyProc("UpDown_SetTag").Call(obj, uintptr(value))
}

func UpDown_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetAnchorSideLeft").Call(obj)
	return ret
}

func UpDown_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetAnchorSideLeft").Call(obj, value)
}

func UpDown_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetAnchorSideTop").Call(obj)
	return ret
}

func UpDown_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetAnchorSideTop").Call(obj, value)
}

func UpDown_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetAnchorSideRight").Call(obj)
	return ret
}

func UpDown_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetAnchorSideRight").Call(obj, value)
}

func UpDown_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetAnchorSideBottom").Call(obj)
	return ret
}

func UpDown_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetAnchorSideBottom").Call(obj, value)
}

func UpDown_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetChildSizing").Call(obj)
	return ret
}

func UpDown_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetChildSizing").Call(obj, value)
}

func UpDown_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetBorderSpacing").Call(obj)
	return ret
}

func UpDown_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("UpDown_SetBorderSpacing").Call(obj, value)
}

func UpDown_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func UpDown_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetControls").Call(obj, uintptr(Index))
	return ret
}

func UpDown_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func UpDown_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("UpDown_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func UpDown_StaticClassType() TClass {
	r, _, _ := getLazyProc("UpDown_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TProgressBar ---------------------------

func ProgressBar_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_Create").Call(obj)
	return ret
}

func ProgressBar_Free(obj uintptr) {
	getLazyProc("ProgressBar_Free").Call(obj)
}

func ProgressBar_StepIt(obj uintptr) {
	getLazyProc("ProgressBar_StepIt").Call(obj)
}

func ProgressBar_StepBy(obj uintptr, Delta int32) {
	getLazyProc("ProgressBar_StepBy").Call(obj, uintptr(Delta))
}

func ProgressBar_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ProgressBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ProgressBar_DisableAlign(obj uintptr) {
	getLazyProc("ProgressBar_DisableAlign").Call(obj)
}

func ProgressBar_EnableAlign(obj uintptr) {
	getLazyProc("ProgressBar_EnableAlign").Call(obj)
}

func ProgressBar_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ProgressBar_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ProgressBar_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ProgressBar_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ProgressBar_InsertControl").Call(obj, AControl)
}

func ProgressBar_Invalidate(obj uintptr) {
	getLazyProc("ProgressBar_Invalidate").Call(obj)
}

func ProgressBar_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ProgressBar_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ProgressBar_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ProgressBar_RemoveControl").Call(obj, AControl)
}

func ProgressBar_Realign(obj uintptr) {
	getLazyProc("ProgressBar_Realign").Call(obj)
}

func ProgressBar_Repaint(obj uintptr) {
	getLazyProc("ProgressBar_Repaint").Call(obj)
}

func ProgressBar_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ProgressBar_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ProgressBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ProgressBar_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ProgressBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ProgressBar_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ProgressBar_SetFocus(obj uintptr) {
	getLazyProc("ProgressBar_SetFocus").Call(obj)
}

func ProgressBar_Update(obj uintptr) {
	getLazyProc("ProgressBar_Update").Call(obj)
}

func ProgressBar_BringToFront(obj uintptr) {
	getLazyProc("ProgressBar_BringToFront").Call(obj)
}

func ProgressBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ProgressBar_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ProgressBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ProgressBar_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ProgressBar_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_Hide(obj uintptr) {
	getLazyProc("ProgressBar_Hide").Call(obj)
}

func ProgressBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ProgressBar_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ProgressBar_Refresh(obj uintptr) {
	getLazyProc("ProgressBar_Refresh").Call(obj)
}

func ProgressBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ProgressBar_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ProgressBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ProgressBar_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ProgressBar_SendToBack(obj uintptr) {
	getLazyProc("ProgressBar_SendToBack").Call(obj)
}

func ProgressBar_Show(obj uintptr) {
	getLazyProc("ProgressBar_Show").Call(obj)
}

func ProgressBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ProgressBar_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ProgressBar_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetTextLen").Call(obj)
	return int32(ret)
}

func ProgressBar_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ProgressBar_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ProgressBar_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ProgressBar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ProgressBar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ProgressBar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ProgressBar_Assign").Call(obj, Source)
}

func ProgressBar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ProgressBar_ClassType").Call(obj)
	return TClass(ret)
}

func ProgressBar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ProgressBar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ProgressBar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_InstanceSize").Call(obj)
	return int32(ret)
}

func ProgressBar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ProgressBar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ProgressBar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetHashCode").Call(obj)
	return int32(ret)
}

func ProgressBar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ProgressBar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ProgressBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ProgressBar_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ProgressBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ProgressBar_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ProgressBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ProgressBar_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ProgressBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ProgressBar_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ProgressBar_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ProgressBar_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ProgressBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ProgressBar_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ProgressBar_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ProgressBar_AnchorClient").Call(obj, uintptr(ASpace))
}

func ProgressBar_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ProgressBar_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ProgressBar_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ProgressBar_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ProgressBar_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ProgressBar_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ProgressBar_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ProgressBar_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ProgressBar_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ProgressBar_GetAlign").Call(obj)
	return TAlign(ret)
}

func ProgressBar_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ProgressBar_SetAlign").Call(obj, uintptr(value))
}

func ProgressBar_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ProgressBar_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ProgressBar_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ProgressBar_SetAnchors").Call(obj, uintptr(value))
}

func ProgressBar_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetBorderWidth").Call(obj)
	return int32(ret)
}

func ProgressBar_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetBorderWidth").Call(obj, uintptr(value))
}

func ProgressBar_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ProgressBar_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ProgressBar_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ProgressBar_SetDragCursor").Call(obj, uintptr(value))
}

func ProgressBar_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ProgressBar_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ProgressBar_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ProgressBar_SetDragKind").Call(obj, uintptr(value))
}

func ProgressBar_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ProgressBar_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ProgressBar_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ProgressBar_SetDragMode").Call(obj, uintptr(value))
}

func ProgressBar_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ProgressBar_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ProgressBar_SetHint(obj uintptr, value string) {
	getLazyProc("ProgressBar_SetHint").Call(obj, GoStrToDStr(value))
}

func ProgressBar_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetConstraints").Call(obj)
	return ret
}

func ProgressBar_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetConstraints").Call(obj, value)
}

func ProgressBar_GetMin(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetMin").Call(obj)
	return int32(ret)
}

func ProgressBar_SetMin(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetMin").Call(obj, uintptr(value))
}

func ProgressBar_GetMax(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetMax").Call(obj)
	return int32(ret)
}

func ProgressBar_SetMax(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetMax").Call(obj, uintptr(value))
}

func ProgressBar_GetOrientation(obj uintptr) TProgressBarOrientation {
	ret, _, _ := getLazyProc("ProgressBar_GetOrientation").Call(obj)
	return TProgressBarOrientation(ret)
}

func ProgressBar_SetOrientation(obj uintptr, value TProgressBarOrientation) {
	getLazyProc("ProgressBar_SetOrientation").Call(obj, uintptr(value))
}

func ProgressBar_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetPopupMenu").Call(obj)
	return ret
}

func ProgressBar_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetPopupMenu").Call(obj, value)
}

func ProgressBar_GetPosition(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetPosition").Call(obj)
	return int32(ret)
}

func ProgressBar_SetPosition(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetPosition").Call(obj, uintptr(value))
}

func ProgressBar_GetSmooth(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetSmooth").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetSmooth(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetSmooth").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetStyle(obj uintptr) TProgressBarStyle {
	ret, _, _ := getLazyProc("ProgressBar_GetStyle").Call(obj)
	return TProgressBarStyle(ret)
}

func ProgressBar_SetStyle(obj uintptr, value TProgressBarStyle) {
	getLazyProc("ProgressBar_SetStyle").Call(obj, uintptr(value))
}

func ProgressBar_GetStep(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetStep").Call(obj)
	return int32(ret)
}

func ProgressBar_SetStep(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetStep").Call(obj, uintptr(value))
}

func ProgressBar_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ProgressBar_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ProgressBar_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ProgressBar_SetTabOrder").Call(obj, uintptr(value))
}

func ProgressBar_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetVisible(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ProgressBar_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ProgressBar_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ProgressBar_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ProgressBar_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetBrush").Call(obj)
	return ret
}

func ProgressBar_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetControlCount").Call(obj)
	return int32(ret)
}

func ProgressBar_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ProgressBar_GetHandle").Call(obj)
	return HWND(ret)
}

func ProgressBar_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ProgressBar_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ProgressBar_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ProgressBar_SetParentWindow").Call(obj, uintptr(value))
}

func ProgressBar_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ProgressBar_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetAction").Call(obj)
	return ret
}

func ProgressBar_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetAction").Call(obj, value)
}

func ProgressBar_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ProgressBar_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ProgressBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ProgressBar_SetBiDiMode").Call(obj, uintptr(value))
}

func ProgressBar_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ProgressBar_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ProgressBar_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ProgressBar_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ProgressBar_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetClientHeight").Call(obj)
	return int32(ret)
}

func ProgressBar_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetClientHeight").Call(obj, uintptr(value))
}

func ProgressBar_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ProgressBar_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ProgressBar_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ProgressBar_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ProgressBar_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetClientWidth").Call(obj)
	return int32(ret)
}

func ProgressBar_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetClientWidth").Call(obj, uintptr(value))
}

func ProgressBar_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ProgressBar_GetControlState").Call(obj)
	return TControlState(ret)
}

func ProgressBar_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ProgressBar_SetControlState").Call(obj, uintptr(value))
}

func ProgressBar_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ProgressBar_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ProgressBar_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ProgressBar_SetControlStyle").Call(obj, uintptr(value))
}

func ProgressBar_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ProgressBar_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ProgressBar_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetParent").Call(obj)
	return ret
}

func ProgressBar_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetParent").Call(obj, value)
}

func ProgressBar_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetLeft").Call(obj)
	return int32(ret)
}

func ProgressBar_SetLeft(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetLeft").Call(obj, uintptr(value))
}

func ProgressBar_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetTop").Call(obj)
	return int32(ret)
}

func ProgressBar_SetTop(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetTop").Call(obj, uintptr(value))
}

func ProgressBar_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetWidth").Call(obj)
	return int32(ret)
}

func ProgressBar_SetWidth(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetWidth").Call(obj, uintptr(value))
}

func ProgressBar_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetHeight").Call(obj)
	return int32(ret)
}

func ProgressBar_SetHeight(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetHeight").Call(obj, uintptr(value))
}

func ProgressBar_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ProgressBar_GetCursor").Call(obj)
	return TCursor(ret)
}

func ProgressBar_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ProgressBar_SetCursor").Call(obj, uintptr(value))
}

func ProgressBar_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetComponentCount").Call(obj)
	return int32(ret)
}

func ProgressBar_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ProgressBar_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ProgressBar_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ProgressBar_SetComponentIndex").Call(obj, uintptr(value))
}

func ProgressBar_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetOwner").Call(obj)
	return ret
}

func ProgressBar_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ProgressBar_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ProgressBar_SetName(obj uintptr, value string) {
	getLazyProc("ProgressBar_SetName").Call(obj, GoStrToDStr(value))
}

func ProgressBar_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ProgressBar_GetTag").Call(obj)
	return int(ret)
}

func ProgressBar_SetTag(obj uintptr, value int) {
	getLazyProc("ProgressBar_SetTag").Call(obj, uintptr(value))
}

func ProgressBar_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetAnchorSideLeft").Call(obj)
	return ret
}

func ProgressBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetAnchorSideLeft").Call(obj, value)
}

func ProgressBar_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetAnchorSideTop").Call(obj)
	return ret
}

func ProgressBar_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetAnchorSideTop").Call(obj, value)
}

func ProgressBar_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetAnchorSideRight").Call(obj)
	return ret
}

func ProgressBar_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetAnchorSideRight").Call(obj, value)
}

func ProgressBar_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetAnchorSideBottom").Call(obj)
	return ret
}

func ProgressBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetAnchorSideBottom").Call(obj, value)
}

func ProgressBar_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetChildSizing").Call(obj)
	return ret
}

func ProgressBar_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetChildSizing").Call(obj, value)
}

func ProgressBar_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetBorderSpacing").Call(obj)
	return ret
}

func ProgressBar_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ProgressBar_SetBorderSpacing").Call(obj, value)
}

func ProgressBar_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ProgressBar_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ProgressBar_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ProgressBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ProgressBar_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ProgressBar_StaticClassType() TClass {
	r, _, _ := getLazyProc("ProgressBar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TDateTimePicker ---------------------------

func DateTimePicker_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_Create").Call(obj)
	return ret
}

func DateTimePicker_Free(obj uintptr) {
	getLazyProc("DateTimePicker_Free").Call(obj)
}

func DateTimePicker_DateIsNull(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_DateIsNull").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SelectDate(obj uintptr) {
	getLazyProc("DateTimePicker_SelectDate").Call(obj)
}

func DateTimePicker_SelectTime(obj uintptr) {
	getLazyProc("DateTimePicker_SelectTime").Call(obj)
}

func DateTimePicker_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func DateTimePicker_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func DateTimePicker_DisableAlign(obj uintptr) {
	getLazyProc("DateTimePicker_DisableAlign").Call(obj)
}

func DateTimePicker_EnableAlign(obj uintptr) {
	getLazyProc("DateTimePicker_EnableAlign").Call(obj)
}

func DateTimePicker_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func DateTimePicker_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("DateTimePicker_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func DateTimePicker_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("DateTimePicker_InsertControl").Call(obj, AControl)
}

func DateTimePicker_Invalidate(obj uintptr) {
	getLazyProc("DateTimePicker_Invalidate").Call(obj)
}

func DateTimePicker_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("DateTimePicker_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func DateTimePicker_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("DateTimePicker_RemoveControl").Call(obj, AControl)
}

func DateTimePicker_Realign(obj uintptr) {
	getLazyProc("DateTimePicker_Realign").Call(obj)
}

func DateTimePicker_Repaint(obj uintptr) {
	getLazyProc("DateTimePicker_Repaint").Call(obj)
}

func DateTimePicker_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("DateTimePicker_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func DateTimePicker_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("DateTimePicker_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func DateTimePicker_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("DateTimePicker_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func DateTimePicker_SetFocus(obj uintptr) {
	getLazyProc("DateTimePicker_SetFocus").Call(obj)
}

func DateTimePicker_Update(obj uintptr) {
	getLazyProc("DateTimePicker_Update").Call(obj)
}

func DateTimePicker_BringToFront(obj uintptr) {
	getLazyProc("DateTimePicker_BringToFront").Call(obj)
}

func DateTimePicker_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("DateTimePicker_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DateTimePicker_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("DateTimePicker_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DateTimePicker_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_Hide(obj uintptr) {
	getLazyProc("DateTimePicker_Hide").Call(obj)
}

func DateTimePicker_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("DateTimePicker_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func DateTimePicker_Refresh(obj uintptr) {
	getLazyProc("DateTimePicker_Refresh").Call(obj)
}

func DateTimePicker_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("DateTimePicker_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DateTimePicker_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("DateTimePicker_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DateTimePicker_SendToBack(obj uintptr) {
	getLazyProc("DateTimePicker_SendToBack").Call(obj)
}

func DateTimePicker_Show(obj uintptr) {
	getLazyProc("DateTimePicker_Show").Call(obj)
}

func DateTimePicker_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("DateTimePicker_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func DateTimePicker_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetTextLen").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("DateTimePicker_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func DateTimePicker_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func DateTimePicker_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_Assign(obj uintptr, Source uintptr) {
	getLazyProc("DateTimePicker_Assign").Call(obj, Source)
}

func DateTimePicker_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("DateTimePicker_ClassType").Call(obj)
	return TClass(ret)
}

func DateTimePicker_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_InstanceSize").Call(obj)
	return int32(ret)
}

func DateTimePicker_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("DateTimePicker_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func DateTimePicker_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetHashCode").Call(obj)
	return int32(ret)
}

func DateTimePicker_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("DateTimePicker_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func DateTimePicker_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("DateTimePicker_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func DateTimePicker_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("DateTimePicker_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func DateTimePicker_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("DateTimePicker_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func DateTimePicker_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("DateTimePicker_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func DateTimePicker_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("DateTimePicker_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func DateTimePicker_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("DateTimePicker_AnchorClient").Call(obj, uintptr(ASpace))
}

func DateTimePicker_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DateTimePicker_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("DateTimePicker_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func DateTimePicker_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("DateTimePicker_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func DateTimePicker_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("DateTimePicker_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func DateTimePicker_GetArrowShape(obj uintptr) TArrowShape {
	ret, _, _ := getLazyProc("DateTimePicker_GetArrowShape").Call(obj)
	return TArrowShape(ret)
}

func DateTimePicker_SetArrowShape(obj uintptr, value TArrowShape) {
	getLazyProc("DateTimePicker_SetArrowShape").Call(obj, uintptr(value))
}

func DateTimePicker_GetAutoAdvance(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetAutoAdvance").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetAutoAdvance(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetAutoAdvance").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetAutoButtonSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetAutoButtonSize").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetAutoButtonSize(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetAutoButtonSize").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetCascade(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetCascade").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetCascade(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetCascade").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetCenturyFrom(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("DateTimePicker_GetCenturyFrom").Call(obj)
	return uint16(ret)
}

func DateTimePicker_SetCenturyFrom(obj uintptr, value uint16) {
	getLazyProc("DateTimePicker_SetCenturyFrom").Call(obj, uintptr(value))
}

func DateTimePicker_GetDateDisplayOrder(obj uintptr) TDateDisplayOrder {
	ret, _, _ := getLazyProc("DateTimePicker_GetDateDisplayOrder").Call(obj)
	return TDateDisplayOrder(ret)
}

func DateTimePicker_SetDateDisplayOrder(obj uintptr, value TDateDisplayOrder) {
	getLazyProc("DateTimePicker_SetDateDisplayOrder").Call(obj, uintptr(value))
}

func DateTimePicker_GetDateSeparator(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_GetDateSeparator").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_SetDateSeparator(obj uintptr, value string) {
	getLazyProc("DateTimePicker_SetDateSeparator").Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetLeadingZeros(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetLeadingZeros").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetLeadingZeros(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetLeadingZeros").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetMonthNames(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_GetMonthNames").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_SetMonthNames(obj uintptr, value string) {
	getLazyProc("DateTimePicker_SetMonthNames").Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetShowMonthNames(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetShowMonthNames").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetShowMonthNames(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetShowMonthNames").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetNullInputAllowed(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetNullInputAllowed").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetNullInputAllowed(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetNullInputAllowed").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetOptions(obj uintptr) TDateTimePickerOptions {
	ret, _, _ := getLazyProc("DateTimePicker_GetOptions").Call(obj)
	return TDateTimePickerOptions(ret)
}

func DateTimePicker_SetOptions(obj uintptr, value TDateTimePickerOptions) {
	getLazyProc("DateTimePicker_SetOptions").Call(obj, uintptr(value))
}

func DateTimePicker_GetShowCheckBox(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetShowCheckBox").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetShowCheckBox(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetShowCheckBox").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetTextForNullDate(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_GetTextForNullDate").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_SetTextForNullDate(obj uintptr, value string) {
	getLazyProc("DateTimePicker_SetTextForNullDate").Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetTimeDisplay(obj uintptr) TTimeDisplay {
	ret, _, _ := getLazyProc("DateTimePicker_GetTimeDisplay").Call(obj)
	return TTimeDisplay(ret)
}

func DateTimePicker_SetTimeDisplay(obj uintptr, value TTimeDisplay) {
	getLazyProc("DateTimePicker_SetTimeDisplay").Call(obj, uintptr(value))
}

func DateTimePicker_GetTimeSeparator(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_GetTimeSeparator").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_SetTimeSeparator(obj uintptr, value string) {
	getLazyProc("DateTimePicker_SetTimeSeparator").Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetTrailingSeparator(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetTrailingSeparator").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetTrailingSeparator(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetTrailingSeparator").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetUseDefaultSeparators(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetUseDefaultSeparators").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetUseDefaultSeparators(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetUseDefaultSeparators").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetDroppedDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetDroppedDown").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_GetDateTime(obj uintptr) time.Time {
	var ret int64
	getLazyProc("DateTimePicker_GetDateTime").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetDateTime(obj uintptr, value time.Time) {
	tVal := value.Unix()
	getLazyProc("DateTimePicker_SetDateTime").Call(obj, uintptr(unsafe.Pointer(&tVal)))
}

func DateTimePicker_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("DateTimePicker_GetAlign").Call(obj)
	return TAlign(ret)
}

func DateTimePicker_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("DateTimePicker_SetAlign").Call(obj, uintptr(value))
}

func DateTimePicker_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("DateTimePicker_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func DateTimePicker_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("DateTimePicker_SetAnchors").Call(obj, uintptr(value))
}

func DateTimePicker_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("DateTimePicker_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func DateTimePicker_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("DateTimePicker_SetBiDiMode").Call(obj, uintptr(value))
}

func DateTimePicker_GetCalAlignment(obj uintptr) TDTCalAlignment {
	ret, _, _ := getLazyProc("DateTimePicker_GetCalAlignment").Call(obj)
	return TDTCalAlignment(ret)
}

func DateTimePicker_SetCalAlignment(obj uintptr, value TDTCalAlignment) {
	getLazyProc("DateTimePicker_SetCalAlignment").Call(obj, uintptr(value))
}

func DateTimePicker_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetConstraints").Call(obj)
	return ret
}

func DateTimePicker_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetConstraints").Call(obj, value)
}

func DateTimePicker_GetDate(obj uintptr) time.Time {
	var ret int64
	getLazyProc("DateTimePicker_GetDate").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetDate(obj uintptr, value time.Time) {
	tVal := value.Unix()
	getLazyProc("DateTimePicker_SetDate").Call(obj, uintptr(unsafe.Pointer(&tVal)))
}

func DateTimePicker_GetTime(obj uintptr) time.Time {
	var ret int64
	getLazyProc("DateTimePicker_GetTime").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetTime(obj uintptr, value time.Time) {
	tVal := value.Unix()
	getLazyProc("DateTimePicker_SetTime").Call(obj, uintptr(unsafe.Pointer(&tVal)))
}

func DateTimePicker_GetChecked(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetChecked").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetChecked(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetChecked").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("DateTimePicker_GetColor").Call(obj)
	return TColor(ret)
}

func DateTimePicker_SetColor(obj uintptr, value TColor) {
	getLazyProc("DateTimePicker_SetColor").Call(obj, uintptr(value))
}

func DateTimePicker_GetDateMode(obj uintptr) TDTDateMode {
	ret, _, _ := getLazyProc("DateTimePicker_GetDateMode").Call(obj)
	return TDTDateMode(ret)
}

func DateTimePicker_SetDateMode(obj uintptr, value TDTDateMode) {
	getLazyProc("DateTimePicker_SetDateMode").Call(obj, uintptr(value))
}

func DateTimePicker_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetEnabled(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetFont").Call(obj)
	return ret
}

func DateTimePicker_SetFont(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetFont").Call(obj, value)
}

func DateTimePicker_GetKind(obj uintptr) TDateTimeKind {
	ret, _, _ := getLazyProc("DateTimePicker_GetKind").Call(obj)
	return TDateTimeKind(ret)
}

func DateTimePicker_SetKind(obj uintptr, value TDateTimeKind) {
	getLazyProc("DateTimePicker_SetKind").Call(obj, uintptr(value))
}

func DateTimePicker_GetMaxDate(obj uintptr) time.Time {
	var ret int64
	getLazyProc("DateTimePicker_GetMaxDate").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetMaxDate(obj uintptr, value time.Time) {
	tVal := value.Unix()
	getLazyProc("DateTimePicker_SetMaxDate").Call(obj, uintptr(unsafe.Pointer(&tVal)))
}

func DateTimePicker_GetMinDate(obj uintptr) time.Time {
	var ret int64
	getLazyProc("DateTimePicker_GetMinDate").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetMinDate(obj uintptr, value time.Time) {
	tVal := value.Unix()
	getLazyProc("DateTimePicker_SetMinDate").Call(obj, uintptr(unsafe.Pointer(&tVal)))
}

func DateTimePicker_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentColor(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentFont(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetPopupMenu").Call(obj)
	return ret
}

func DateTimePicker_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetPopupMenu").Call(obj, value)
}

func DateTimePicker_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetShowHint(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("DateTimePicker_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func DateTimePicker_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("DateTimePicker_SetTabOrder").Call(obj, uintptr(value))
}

func DateTimePicker_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetTabStop(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetVisible(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetVisible").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnCloseUp(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnCloseUp").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnDropDown(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnDropDown").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("DateTimePicker_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func DateTimePicker_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetDockClientCount").Call(obj)
	return int32(ret)
}

func DateTimePicker_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetDockSite(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func DateTimePicker_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetBrush").Call(obj)
	return ret
}

func DateTimePicker_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetControlCount").Call(obj)
	return int32(ret)
}

func DateTimePicker_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("DateTimePicker_GetHandle").Call(obj)
	return HWND(ret)
}

func DateTimePicker_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("DateTimePicker_GetParentWindow").Call(obj)
	return HWND(ret)
}

func DateTimePicker_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("DateTimePicker_SetParentWindow").Call(obj, uintptr(value))
}

func DateTimePicker_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("DateTimePicker_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetAction").Call(obj)
	return ret
}

func DateTimePicker_SetAction(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetAction").Call(obj, value)
}

func DateTimePicker_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("DateTimePicker_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DateTimePicker_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("DateTimePicker_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DateTimePicker_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetClientHeight").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("DateTimePicker_SetClientHeight").Call(obj, uintptr(value))
}

func DateTimePicker_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("DateTimePicker_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DateTimePicker_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("DateTimePicker_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DateTimePicker_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetClientWidth").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("DateTimePicker_SetClientWidth").Call(obj, uintptr(value))
}

func DateTimePicker_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("DateTimePicker_GetControlState").Call(obj)
	return TControlState(ret)
}

func DateTimePicker_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("DateTimePicker_SetControlState").Call(obj, uintptr(value))
}

func DateTimePicker_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("DateTimePicker_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func DateTimePicker_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("DateTimePicker_SetControlStyle").Call(obj, uintptr(value))
}

func DateTimePicker_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("DateTimePicker_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func DateTimePicker_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetParent").Call(obj)
	return ret
}

func DateTimePicker_SetParent(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetParent").Call(obj, value)
}

func DateTimePicker_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetLeft").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetLeft(obj uintptr, value int32) {
	getLazyProc("DateTimePicker_SetLeft").Call(obj, uintptr(value))
}

func DateTimePicker_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetTop").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetTop(obj uintptr, value int32) {
	getLazyProc("DateTimePicker_SetTop").Call(obj, uintptr(value))
}

func DateTimePicker_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetWidth").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetWidth(obj uintptr, value int32) {
	getLazyProc("DateTimePicker_SetWidth").Call(obj, uintptr(value))
}

func DateTimePicker_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetHeight").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetHeight(obj uintptr, value int32) {
	getLazyProc("DateTimePicker_SetHeight").Call(obj, uintptr(value))
}

func DateTimePicker_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("DateTimePicker_GetCursor").Call(obj)
	return TCursor(ret)
}

func DateTimePicker_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("DateTimePicker_SetCursor").Call(obj, uintptr(value))
}

func DateTimePicker_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_SetHint(obj uintptr, value string) {
	getLazyProc("DateTimePicker_SetHint").Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetComponentCount").Call(obj)
	return int32(ret)
}

func DateTimePicker_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DateTimePicker_GetComponentIndex").Call(obj)
	return int32(ret)
}

func DateTimePicker_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("DateTimePicker_SetComponentIndex").Call(obj, uintptr(value))
}

func DateTimePicker_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetOwner").Call(obj)
	return ret
}

func DateTimePicker_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("DateTimePicker_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func DateTimePicker_SetName(obj uintptr, value string) {
	getLazyProc("DateTimePicker_SetName").Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("DateTimePicker_GetTag").Call(obj)
	return int(ret)
}

func DateTimePicker_SetTag(obj uintptr, value int) {
	getLazyProc("DateTimePicker_SetTag").Call(obj, uintptr(value))
}

func DateTimePicker_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetAnchorSideLeft").Call(obj)
	return ret
}

func DateTimePicker_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetAnchorSideLeft").Call(obj, value)
}

func DateTimePicker_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetAnchorSideTop").Call(obj)
	return ret
}

func DateTimePicker_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetAnchorSideTop").Call(obj, value)
}

func DateTimePicker_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetAnchorSideRight").Call(obj)
	return ret
}

func DateTimePicker_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetAnchorSideRight").Call(obj, value)
}

func DateTimePicker_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetAnchorSideBottom").Call(obj)
	return ret
}

func DateTimePicker_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetAnchorSideBottom").Call(obj, value)
}

func DateTimePicker_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetChildSizing").Call(obj)
	return ret
}

func DateTimePicker_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetChildSizing").Call(obj, value)
}

func DateTimePicker_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetBorderSpacing").Call(obj)
	return ret
}

func DateTimePicker_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("DateTimePicker_SetBorderSpacing").Call(obj, value)
}

func DateTimePicker_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func DateTimePicker_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetControls").Call(obj, uintptr(Index))
	return ret
}

func DateTimePicker_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func DateTimePicker_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("DateTimePicker_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func DateTimePicker_StaticClassType() TClass {
	r, _, _ := getLazyProc("DateTimePicker_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMonthCalendar ---------------------------

func MonthCalendar_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_Create").Call(obj)
	return ret
}

func MonthCalendar_Free(obj uintptr) {
	getLazyProc("MonthCalendar_Free").Call(obj)
}

func MonthCalendar_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func MonthCalendar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func MonthCalendar_DisableAlign(obj uintptr) {
	getLazyProc("MonthCalendar_DisableAlign").Call(obj)
}

func MonthCalendar_EnableAlign(obj uintptr) {
	getLazyProc("MonthCalendar_EnableAlign").Call(obj)
}

func MonthCalendar_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func MonthCalendar_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("MonthCalendar_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func MonthCalendar_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("MonthCalendar_InsertControl").Call(obj, AControl)
}

func MonthCalendar_Invalidate(obj uintptr) {
	getLazyProc("MonthCalendar_Invalidate").Call(obj)
}

func MonthCalendar_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("MonthCalendar_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func MonthCalendar_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("MonthCalendar_RemoveControl").Call(obj, AControl)
}

func MonthCalendar_Realign(obj uintptr) {
	getLazyProc("MonthCalendar_Realign").Call(obj)
}

func MonthCalendar_Repaint(obj uintptr) {
	getLazyProc("MonthCalendar_Repaint").Call(obj)
}

func MonthCalendar_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("MonthCalendar_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func MonthCalendar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("MonthCalendar_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func MonthCalendar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("MonthCalendar_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func MonthCalendar_SetFocus(obj uintptr) {
	getLazyProc("MonthCalendar_SetFocus").Call(obj)
}

func MonthCalendar_Update(obj uintptr) {
	getLazyProc("MonthCalendar_Update").Call(obj)
}

func MonthCalendar_BringToFront(obj uintptr) {
	getLazyProc("MonthCalendar_BringToFront").Call(obj)
}

func MonthCalendar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("MonthCalendar_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MonthCalendar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("MonthCalendar_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MonthCalendar_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_Hide(obj uintptr) {
	getLazyProc("MonthCalendar_Hide").Call(obj)
}

func MonthCalendar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("MonthCalendar_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func MonthCalendar_Refresh(obj uintptr) {
	getLazyProc("MonthCalendar_Refresh").Call(obj)
}

func MonthCalendar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("MonthCalendar_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MonthCalendar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("MonthCalendar_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MonthCalendar_SendToBack(obj uintptr) {
	getLazyProc("MonthCalendar_SendToBack").Call(obj)
}

func MonthCalendar_Show(obj uintptr) {
	getLazyProc("MonthCalendar_Show").Call(obj)
}

func MonthCalendar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("MonthCalendar_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func MonthCalendar_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetTextLen").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("MonthCalendar_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func MonthCalendar_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func MonthCalendar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("MonthCalendar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func MonthCalendar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("MonthCalendar_Assign").Call(obj, Source)
}

func MonthCalendar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("MonthCalendar_ClassType").Call(obj)
	return TClass(ret)
}

func MonthCalendar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("MonthCalendar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func MonthCalendar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_InstanceSize").Call(obj)
	return int32(ret)
}

func MonthCalendar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("MonthCalendar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func MonthCalendar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetHashCode").Call(obj)
	return int32(ret)
}

func MonthCalendar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("MonthCalendar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func MonthCalendar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("MonthCalendar_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func MonthCalendar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("MonthCalendar_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func MonthCalendar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("MonthCalendar_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func MonthCalendar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("MonthCalendar_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func MonthCalendar_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("MonthCalendar_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func MonthCalendar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("MonthCalendar_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func MonthCalendar_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("MonthCalendar_AnchorClient").Call(obj, uintptr(ASpace))
}

func MonthCalendar_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MonthCalendar_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("MonthCalendar_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func MonthCalendar_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("MonthCalendar_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func MonthCalendar_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("MonthCalendar_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func MonthCalendar_GetDateTime(obj uintptr) time.Time {
	var ret int64
	getLazyProc("MonthCalendar_GetDateTime").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return time.Unix(int64(ret), 0)
}

func MonthCalendar_SetDateTime(obj uintptr, value time.Time) {
	tVal := value.Unix()
	getLazyProc("MonthCalendar_SetDateTime").Call(obj, uintptr(unsafe.Pointer(&tVal)))
}

func MonthCalendar_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("MonthCalendar_GetAlign").Call(obj)
	return TAlign(ret)
}

func MonthCalendar_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("MonthCalendar_SetAlign").Call(obj, uintptr(value))
}

func MonthCalendar_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("MonthCalendar_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func MonthCalendar_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("MonthCalendar_SetAnchors").Call(obj, uintptr(value))
}

func MonthCalendar_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetBorderWidth").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetBorderWidth").Call(obj, uintptr(value))
}

func MonthCalendar_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("MonthCalendar_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func MonthCalendar_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("MonthCalendar_SetBiDiMode").Call(obj, uintptr(value))
}

func MonthCalendar_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetConstraints").Call(obj)
	return ret
}

func MonthCalendar_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetConstraints").Call(obj, value)
}

func MonthCalendar_GetDate(obj uintptr) time.Time {
	var ret int64
	getLazyProc("MonthCalendar_GetDate").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return time.Unix(int64(ret), 0)
}

func MonthCalendar_SetDate(obj uintptr, value time.Time) {
	tVal := value.Unix()
	getLazyProc("MonthCalendar_SetDate").Call(obj, uintptr(unsafe.Pointer(&tVal)))
}

func MonthCalendar_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("MonthCalendar_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func MonthCalendar_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("MonthCalendar_SetDragCursor").Call(obj, uintptr(value))
}

func MonthCalendar_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("MonthCalendar_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func MonthCalendar_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("MonthCalendar_SetDragKind").Call(obj, uintptr(value))
}

func MonthCalendar_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("MonthCalendar_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func MonthCalendar_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("MonthCalendar_SetDragMode").Call(obj, uintptr(value))
}

func MonthCalendar_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetEnabled(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetFont").Call(obj)
	return ret
}

func MonthCalendar_SetFont(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetFont").Call(obj, value)
}

func MonthCalendar_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetPopupMenu").Call(obj)
	return ret
}

func MonthCalendar_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetPopupMenu").Call(obj, value)
}

func MonthCalendar_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetShowHint(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("MonthCalendar_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func MonthCalendar_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("MonthCalendar_SetTabOrder").Call(obj, uintptr(value))
}

func MonthCalendar_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetTabStop(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetVisible(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("MonthCalendar_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func MonthCalendar_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetDockClientCount").Call(obj)
	return int32(ret)
}

func MonthCalendar_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetDockSite(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func MonthCalendar_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetBrush").Call(obj)
	return ret
}

func MonthCalendar_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetControlCount").Call(obj)
	return int32(ret)
}

func MonthCalendar_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("MonthCalendar_GetHandle").Call(obj)
	return HWND(ret)
}

func MonthCalendar_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("MonthCalendar_GetParentWindow").Call(obj)
	return HWND(ret)
}

func MonthCalendar_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("MonthCalendar_SetParentWindow").Call(obj, uintptr(value))
}

func MonthCalendar_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("MonthCalendar_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetAction").Call(obj)
	return ret
}

func MonthCalendar_SetAction(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetAction").Call(obj, value)
}

func MonthCalendar_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("MonthCalendar_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MonthCalendar_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("MonthCalendar_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MonthCalendar_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetClientHeight").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetClientHeight").Call(obj, uintptr(value))
}

func MonthCalendar_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("MonthCalendar_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MonthCalendar_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("MonthCalendar_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MonthCalendar_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetClientWidth").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetClientWidth").Call(obj, uintptr(value))
}

func MonthCalendar_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("MonthCalendar_GetControlState").Call(obj)
	return TControlState(ret)
}

func MonthCalendar_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("MonthCalendar_SetControlState").Call(obj, uintptr(value))
}

func MonthCalendar_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("MonthCalendar_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func MonthCalendar_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("MonthCalendar_SetControlStyle").Call(obj, uintptr(value))
}

func MonthCalendar_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("MonthCalendar_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func MonthCalendar_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetParent").Call(obj)
	return ret
}

func MonthCalendar_SetParent(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetParent").Call(obj, value)
}

func MonthCalendar_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetLeft").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetLeft(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetLeft").Call(obj, uintptr(value))
}

func MonthCalendar_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetTop").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetTop(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetTop").Call(obj, uintptr(value))
}

func MonthCalendar_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetWidth").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetWidth(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetWidth").Call(obj, uintptr(value))
}

func MonthCalendar_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetHeight").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetHeight(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetHeight").Call(obj, uintptr(value))
}

func MonthCalendar_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("MonthCalendar_GetCursor").Call(obj)
	return TCursor(ret)
}

func MonthCalendar_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("MonthCalendar_SetCursor").Call(obj, uintptr(value))
}

func MonthCalendar_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("MonthCalendar_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func MonthCalendar_SetHint(obj uintptr, value string) {
	getLazyProc("MonthCalendar_SetHint").Call(obj, GoStrToDStr(value))
}

func MonthCalendar_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetComponentCount").Call(obj)
	return int32(ret)
}

func MonthCalendar_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MonthCalendar_GetComponentIndex").Call(obj)
	return int32(ret)
}

func MonthCalendar_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("MonthCalendar_SetComponentIndex").Call(obj, uintptr(value))
}

func MonthCalendar_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetOwner").Call(obj)
	return ret
}

func MonthCalendar_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("MonthCalendar_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func MonthCalendar_SetName(obj uintptr, value string) {
	getLazyProc("MonthCalendar_SetName").Call(obj, GoStrToDStr(value))
}

func MonthCalendar_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("MonthCalendar_GetTag").Call(obj)
	return int(ret)
}

func MonthCalendar_SetTag(obj uintptr, value int) {
	getLazyProc("MonthCalendar_SetTag").Call(obj, uintptr(value))
}

func MonthCalendar_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetAnchorSideLeft").Call(obj)
	return ret
}

func MonthCalendar_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetAnchorSideLeft").Call(obj, value)
}

func MonthCalendar_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetAnchorSideTop").Call(obj)
	return ret
}

func MonthCalendar_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetAnchorSideTop").Call(obj, value)
}

func MonthCalendar_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetAnchorSideRight").Call(obj)
	return ret
}

func MonthCalendar_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetAnchorSideRight").Call(obj, value)
}

func MonthCalendar_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetAnchorSideBottom").Call(obj)
	return ret
}

func MonthCalendar_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetAnchorSideBottom").Call(obj, value)
}

func MonthCalendar_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetChildSizing").Call(obj)
	return ret
}

func MonthCalendar_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetChildSizing").Call(obj, value)
}

func MonthCalendar_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetBorderSpacing").Call(obj)
	return ret
}

func MonthCalendar_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("MonthCalendar_SetBorderSpacing").Call(obj, value)
}

func MonthCalendar_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func MonthCalendar_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetControls").Call(obj, uintptr(Index))
	return ret
}

func MonthCalendar_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func MonthCalendar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("MonthCalendar_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func MonthCalendar_StaticClassType() TClass {
	r, _, _ := getLazyProc("MonthCalendar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TListView ---------------------------

func ListView_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_Create").Call(obj)
	return ret
}

func ListView_Free(obj uintptr) {
	getLazyProc("ListView_Free").Call(obj)
}

func ListView_AddItem(obj uintptr, Item string, AObject uintptr) {
	getLazyProc("ListView_AddItem").Call(obj, GoStrToDStr(Item), AObject)
}

func ListView_AlphaSort(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_AlphaSort").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_Clear(obj uintptr) {
	getLazyProc("ListView_Clear").Call(obj)
}

func ListView_ClearSelection(obj uintptr) {
	getLazyProc("ListView_ClearSelection").Call(obj)
}

func ListView_DeleteSelected(obj uintptr) {
	getLazyProc("ListView_DeleteSelected").Call(obj)
}

func ListView_GetHitTestInfoAt(obj uintptr, X int32, Y int32) THitTests {
	ret, _, _ := getLazyProc("ListView_GetHitTestInfoAt").Call(obj, uintptr(X), uintptr(Y))
	return THitTests(ret)
}

func ListView_GetItemAt(obj uintptr, X int32, Y int32) uintptr {
	ret, _, _ := getLazyProc("ListView_GetItemAt").Call(obj, uintptr(X), uintptr(Y))
	return ret
}

func ListView_GetNearestItem(obj uintptr, Point TPoint, Direction TSearchDirection) uintptr {
	ret, _, _ := getLazyProc("ListView_GetNearestItem").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(Direction))
	return ret
}

func ListView_GetNextItem(obj uintptr, StartItem uintptr, Direction TSearchDirection, States TListItemStates) uintptr {
	ret, _, _ := getLazyProc("ListView_GetNextItem").Call(obj, StartItem, uintptr(Direction), uintptr(States))
	return ret
}

func ListView_IsEditing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_IsEditing").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SelectAll(obj uintptr) {
	getLazyProc("ListView_SelectAll").Call(obj)
}

func ListView_CustomSort(obj uintptr, SortProc PFNLVCOMPARE, lParam int) bool {
	ret, _, _ := getLazyProc("ListView_CustomSort").Call(obj, uintptr(SortProc), uintptr(lParam))
	return DBoolToGoBool(ret)
}

func ListView_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ListView_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ListView_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ListView_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ListView_DisableAlign(obj uintptr) {
	getLazyProc("ListView_DisableAlign").Call(obj)
}

func ListView_EnableAlign(obj uintptr) {
	getLazyProc("ListView_EnableAlign").Call(obj)
}

func ListView_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ListView_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ListView_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ListView_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ListView_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ListView_InsertControl").Call(obj, AControl)
}

func ListView_Invalidate(obj uintptr) {
	getLazyProc("ListView_Invalidate").Call(obj)
}

func ListView_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ListView_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ListView_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ListView_RemoveControl").Call(obj, AControl)
}

func ListView_Realign(obj uintptr) {
	getLazyProc("ListView_Realign").Call(obj)
}

func ListView_Repaint(obj uintptr) {
	getLazyProc("ListView_Repaint").Call(obj)
}

func ListView_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ListView_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ListView_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ListView_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ListView_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ListView_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ListView_SetFocus(obj uintptr) {
	getLazyProc("ListView_SetFocus").Call(obj)
}

func ListView_Update(obj uintptr) {
	getLazyProc("ListView_Update").Call(obj)
}

func ListView_BringToFront(obj uintptr) {
	getLazyProc("ListView_BringToFront").Call(obj)
}

func ListView_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ListView_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListView_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ListView_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListView_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_Hide(obj uintptr) {
	getLazyProc("ListView_Hide").Call(obj)
}

func ListView_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ListView_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ListView_Refresh(obj uintptr) {
	getLazyProc("ListView_Refresh").Call(obj)
}

func ListView_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ListView_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListView_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ListView_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListView_SendToBack(obj uintptr) {
	getLazyProc("ListView_SendToBack").Call(obj)
}

func ListView_Show(obj uintptr) {
	getLazyProc("ListView_Show").Call(obj)
}

func ListView_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ListView_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ListView_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetTextLen").Call(obj)
	return int32(ret)
}

func ListView_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ListView_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ListView_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ListView_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ListView_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ListView_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ListView_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ListView_Assign").Call(obj, Source)
}

func ListView_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ListView_ClassType").Call(obj)
	return TClass(ret)
}

func ListView_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListView_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ListView_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_InstanceSize").Call(obj)
	return int32(ret)
}

func ListView_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ListView_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ListView_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ListView_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetHashCode").Call(obj)
	return int32(ret)
}

func ListView_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ListView_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ListView_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ListView_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ListView_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ListView_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ListView_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ListView_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ListView_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ListView_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ListView_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ListView_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ListView_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ListView_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ListView_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ListView_AnchorClient").Call(obj, uintptr(ASpace))
}

func ListView_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ListView_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ListView_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ListView_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ListView_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ListView_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ListView_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ListView_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ListView_GetAutoSort(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetAutoSort").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetAutoSort(obj uintptr, value bool) {
	getLazyProc("ListView_SetAutoSort").Call(obj, GoBoolToDBool(value))
}

func ListView_GetAutoSortIndicator(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetAutoSortIndicator").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetAutoSortIndicator(obj uintptr, value bool) {
	getLazyProc("ListView_SetAutoSortIndicator").Call(obj, GoBoolToDBool(value))
}

func ListView_GetAutoWidthLastColumn(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetAutoWidthLastColumn").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetAutoWidthLastColumn(obj uintptr, value bool) {
	getLazyProc("ListView_SetAutoWidthLastColumn").Call(obj, GoBoolToDBool(value))
}

func ListView_GetSmallImagesWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetSmallImagesWidth").Call(obj)
	return int32(ret)
}

func ListView_SetSmallImagesWidth(obj uintptr, value int32) {
	getLazyProc("ListView_SetSmallImagesWidth").Call(obj, uintptr(value))
}

func ListView_GetSortColumn(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetSortColumn").Call(obj)
	return int32(ret)
}

func ListView_SetSortColumn(obj uintptr, value int32) {
	getLazyProc("ListView_SetSortColumn").Call(obj, uintptr(value))
}

func ListView_GetSortDirection(obj uintptr) TSortDirection {
	ret, _, _ := getLazyProc("ListView_GetSortDirection").Call(obj)
	return TSortDirection(ret)
}

func ListView_SetSortDirection(obj uintptr, value TSortDirection) {
	getLazyProc("ListView_SetSortDirection").Call(obj, uintptr(value))
}

func ListView_GetLargeImagesWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetLargeImagesWidth").Call(obj)
	return int32(ret)
}

func ListView_SetLargeImagesWidth(obj uintptr, value int32) {
	getLazyProc("ListView_SetLargeImagesWidth").Call(obj, uintptr(value))
}

func ListView_GetStateImagesWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetStateImagesWidth").Call(obj)
	return int32(ret)
}

func ListView_SetStateImagesWidth(obj uintptr, value int32) {
	getLazyProc("ListView_SetStateImagesWidth").Call(obj, uintptr(value))
}

func ListView_GetToolTips(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetToolTips").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetToolTips(obj uintptr, value bool) {
	getLazyProc("ListView_SetToolTips").Call(obj, GoBoolToDBool(value))
}

func ListView_GetScrollBars(obj uintptr) TScrollStyle {
	ret, _, _ := getLazyProc("ListView_GetScrollBars").Call(obj)
	return TScrollStyle(ret)
}

func ListView_SetScrollBars(obj uintptr, value TScrollStyle) {
	getLazyProc("ListView_SetScrollBars").Call(obj, uintptr(value))
}

func ListView_GetColumnCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetColumnCount").Call(obj)
	return int32(ret)
}

func ListView_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetAction").Call(obj)
	return ret
}

func ListView_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetAction").Call(obj, value)
}

func ListView_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ListView_GetAlign").Call(obj)
	return TAlign(ret)
}

func ListView_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ListView_SetAlign").Call(obj, uintptr(value))
}

func ListView_GetAllocBy(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetAllocBy").Call(obj)
	return int32(ret)
}

func ListView_SetAllocBy(obj uintptr, value int32) {
	getLazyProc("ListView_SetAllocBy").Call(obj, uintptr(value))
}

func ListView_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ListView_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ListView_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ListView_SetAnchors").Call(obj, uintptr(value))
}

func ListView_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ListView_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ListView_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ListView_SetBiDiMode").Call(obj, uintptr(value))
}

func ListView_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("ListView_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func ListView_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("ListView_SetBorderStyle").Call(obj, uintptr(value))
}

func ListView_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetBorderWidth").Call(obj)
	return int32(ret)
}

func ListView_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("ListView_SetBorderWidth").Call(obj, uintptr(value))
}

func ListView_GetCheckboxes(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetCheckboxes").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetCheckboxes(obj uintptr, value bool) {
	getLazyProc("ListView_SetCheckboxes").Call(obj, GoBoolToDBool(value))
}

func ListView_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ListView_GetColor").Call(obj)
	return TColor(ret)
}

func ListView_SetColor(obj uintptr, value TColor) {
	getLazyProc("ListView_SetColor").Call(obj, uintptr(value))
}

func ListView_GetColumns(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetColumns").Call(obj)
	return ret
}

func ListView_SetColumns(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetColumns").Call(obj, value)
}

func ListView_GetColumnClick(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetColumnClick").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetColumnClick(obj uintptr, value bool) {
	getLazyProc("ListView_SetColumnClick").Call(obj, GoBoolToDBool(value))
}

func ListView_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetConstraints").Call(obj)
	return ret
}

func ListView_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetConstraints").Call(obj, value)
}

func ListView_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ListView_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ListView_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ListView_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ListView_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ListView_SetDragCursor").Call(obj, uintptr(value))
}

func ListView_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ListView_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ListView_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ListView_SetDragKind").Call(obj, uintptr(value))
}

func ListView_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ListView_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ListView_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ListView_SetDragMode").Call(obj, uintptr(value))
}

func ListView_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ListView_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ListView_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetFont").Call(obj)
	return ret
}

func ListView_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetFont").Call(obj, value)
}

func ListView_GetFlatScrollBars(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetFlatScrollBars").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetFlatScrollBars(obj uintptr, value bool) {
	getLazyProc("ListView_SetFlatScrollBars").Call(obj, GoBoolToDBool(value))
}

func ListView_GetFullDrag(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetFullDrag").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetFullDrag(obj uintptr, value bool) {
	getLazyProc("ListView_SetFullDrag").Call(obj, GoBoolToDBool(value))
}

func ListView_GetGridLines(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetGridLines").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetGridLines(obj uintptr, value bool) {
	getLazyProc("ListView_SetGridLines").Call(obj, GoBoolToDBool(value))
}

func ListView_GetHideSelection(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetHideSelection").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetHideSelection(obj uintptr, value bool) {
	getLazyProc("ListView_SetHideSelection").Call(obj, GoBoolToDBool(value))
}

func ListView_GetHotTrack(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetHotTrack").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetHotTrack(obj uintptr, value bool) {
	getLazyProc("ListView_SetHotTrack").Call(obj, GoBoolToDBool(value))
}

func ListView_GetIconOptions(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetIconOptions").Call(obj)
	return ret
}

func ListView_SetIconOptions(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetIconOptions").Call(obj, value)
}

func ListView_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetItems").Call(obj)
	return ret
}

func ListView_SetItems(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetItems").Call(obj, value)
}

func ListView_GetLargeImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetLargeImages").Call(obj)
	return ret
}

func ListView_SetLargeImages(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetLargeImages").Call(obj, value)
}

func ListView_GetMultiSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetMultiSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetMultiSelect(obj uintptr, value bool) {
	getLazyProc("ListView_SetMultiSelect").Call(obj, GoBoolToDBool(value))
}

func ListView_GetOwnerData(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetOwnerData").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetOwnerData(obj uintptr, value bool) {
	getLazyProc("ListView_SetOwnerData").Call(obj, GoBoolToDBool(value))
}

func ListView_GetOwnerDraw(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetOwnerDraw").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetOwnerDraw(obj uintptr, value bool) {
	getLazyProc("ListView_SetOwnerDraw").Call(obj, GoBoolToDBool(value))
}

func ListView_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("ListView_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func ListView_GetRowSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetRowSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetRowSelect(obj uintptr, value bool) {
	getLazyProc("ListView_SetRowSelect").Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ListView_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ListView_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ListView_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ListView_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ListView_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetPopupMenu").Call(obj)
	return ret
}

func ListView_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetPopupMenu").Call(obj, value)
}

func ListView_GetShowColumnHeaders(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetShowColumnHeaders").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetShowColumnHeaders(obj uintptr, value bool) {
	getLazyProc("ListView_SetShowColumnHeaders").Call(obj, GoBoolToDBool(value))
}

func ListView_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ListView_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ListView_GetSmallImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetSmallImages").Call(obj)
	return ret
}

func ListView_SetSmallImages(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetSmallImages").Call(obj, value)
}

func ListView_GetSortType(obj uintptr) TSortType {
	ret, _, _ := getLazyProc("ListView_GetSortType").Call(obj)
	return TSortType(ret)
}

func ListView_SetSortType(obj uintptr, value TSortType) {
	getLazyProc("ListView_SetSortType").Call(obj, uintptr(value))
}

func ListView_GetStateImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetStateImages").Call(obj)
	return ret
}

func ListView_SetStateImages(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetStateImages").Call(obj, value)
}

func ListView_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ListView_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ListView_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ListView_SetTabOrder").Call(obj, uintptr(value))
}

func ListView_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ListView_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ListView_GetViewStyle(obj uintptr) TViewStyle {
	ret, _, _ := getLazyProc("ListView_GetViewStyle").Call(obj)
	return TViewStyle(ret)
}

func ListView_SetViewStyle(obj uintptr, value TViewStyle) {
	getLazyProc("ListView_SetViewStyle").Call(obj, uintptr(value))
}

func ListView_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetVisible(obj uintptr, value bool) {
	getLazyProc("ListView_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ListView_SetOnAdvancedCustomDraw(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnAdvancedCustomDraw").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnAdvancedCustomDrawItem(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnAdvancedCustomDrawItem").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnAdvancedCustomDrawSubItem(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnAdvancedCustomDrawSubItem").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnColumnClick(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnColumnClick").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnCompare(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnCompare").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnCustomDraw(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnCustomDraw").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnCustomDrawItem(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnCustomDrawItem").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnCustomDrawSubItem(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnCustomDrawSubItem").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnData(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnData").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnDataFind(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnDataFind").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnDataHint(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnDataHint").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnDeletion(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnDeletion").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnDrawItem(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnDrawItem").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnEdited(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnEdited").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnEditing(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnEditing").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnInsert(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnInsert").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnSelectItem(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnSelectItem").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnItemChecked(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnItemChecked").Call(obj, addEventToMap(obj, fn))
}

func ListView_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("ListView_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func ListView_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetCanvas").Call(obj)
	return ret
}

func ListView_GetDropTarget(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetDropTarget").Call(obj)
	return ret
}

func ListView_SetDropTarget(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetDropTarget").Call(obj, value)
}

func ListView_GetItemFocused(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetItemFocused").Call(obj)
	return ret
}

func ListView_SetItemFocused(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetItemFocused").Call(obj, value)
}

func ListView_GetSelCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetSelCount").Call(obj)
	return int32(ret)
}

func ListView_GetSelected(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetSelected").Call(obj)
	return ret
}

func ListView_SetSelected(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetSelected").Call(obj, value)
}

func ListView_GetTopItem(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetTopItem").Call(obj)
	return ret
}

func ListView_GetVisibleRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetVisibleRowCount").Call(obj)
	return int32(ret)
}

func ListView_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetItemIndex").Call(obj)
	return int32(ret)
}

func ListView_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("ListView_SetItemIndex").Call(obj, uintptr(value))
}

func ListView_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ListView_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ListView_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ListView_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ListView_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetBrush").Call(obj)
	return ret
}

func ListView_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetControlCount").Call(obj)
	return int32(ret)
}

func ListView_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ListView_GetHandle").Call(obj)
	return HWND(ret)
}

func ListView_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ListView_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ListView_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ListView_SetParentWindow").Call(obj, uintptr(value))
}

func ListView_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ListView_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ListView_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ListView_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListView_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ListView_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ListView_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetClientHeight").Call(obj)
	return int32(ret)
}

func ListView_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ListView_SetClientHeight").Call(obj, uintptr(value))
}

func ListView_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ListView_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListView_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ListView_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListView_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetClientWidth").Call(obj)
	return int32(ret)
}

func ListView_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ListView_SetClientWidth").Call(obj, uintptr(value))
}

func ListView_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ListView_GetControlState").Call(obj)
	return TControlState(ret)
}

func ListView_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ListView_SetControlState").Call(obj, uintptr(value))
}

func ListView_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ListView_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ListView_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ListView_SetControlStyle").Call(obj, uintptr(value))
}

func ListView_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListView_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ListView_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetParent").Call(obj)
	return ret
}

func ListView_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetParent").Call(obj, value)
}

func ListView_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetLeft").Call(obj)
	return int32(ret)
}

func ListView_SetLeft(obj uintptr, value int32) {
	getLazyProc("ListView_SetLeft").Call(obj, uintptr(value))
}

func ListView_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetTop").Call(obj)
	return int32(ret)
}

func ListView_SetTop(obj uintptr, value int32) {
	getLazyProc("ListView_SetTop").Call(obj, uintptr(value))
}

func ListView_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetWidth").Call(obj)
	return int32(ret)
}

func ListView_SetWidth(obj uintptr, value int32) {
	getLazyProc("ListView_SetWidth").Call(obj, uintptr(value))
}

func ListView_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetHeight").Call(obj)
	return int32(ret)
}

func ListView_SetHeight(obj uintptr, value int32) {
	getLazyProc("ListView_SetHeight").Call(obj, uintptr(value))
}

func ListView_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ListView_GetCursor").Call(obj)
	return TCursor(ret)
}

func ListView_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ListView_SetCursor").Call(obj, uintptr(value))
}

func ListView_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ListView_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ListView_SetHint(obj uintptr, value string) {
	getLazyProc("ListView_SetHint").Call(obj, GoStrToDStr(value))
}

func ListView_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetComponentCount").Call(obj)
	return int32(ret)
}

func ListView_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListView_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ListView_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ListView_SetComponentIndex").Call(obj, uintptr(value))
}

func ListView_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetOwner").Call(obj)
	return ret
}

func ListView_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListView_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ListView_SetName(obj uintptr, value string) {
	getLazyProc("ListView_SetName").Call(obj, GoStrToDStr(value))
}

func ListView_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ListView_GetTag").Call(obj)
	return int(ret)
}

func ListView_SetTag(obj uintptr, value int) {
	getLazyProc("ListView_SetTag").Call(obj, uintptr(value))
}

func ListView_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetAnchorSideLeft").Call(obj)
	return ret
}

func ListView_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetAnchorSideLeft").Call(obj, value)
}

func ListView_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetAnchorSideTop").Call(obj)
	return ret
}

func ListView_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetAnchorSideTop").Call(obj, value)
}

func ListView_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetAnchorSideRight").Call(obj)
	return ret
}

func ListView_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetAnchorSideRight").Call(obj, value)
}

func ListView_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetAnchorSideBottom").Call(obj)
	return ret
}

func ListView_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetAnchorSideBottom").Call(obj, value)
}

func ListView_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetChildSizing").Call(obj)
	return ret
}

func ListView_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetChildSizing").Call(obj, value)
}

func ListView_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListView_GetBorderSpacing").Call(obj)
	return ret
}

func ListView_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ListView_SetBorderSpacing").Call(obj, value)
}

func ListView_GetColumn(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListView_GetColumn").Call(obj, uintptr(Index))
	return ret
}

func ListView_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListView_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ListView_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListView_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ListView_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ListView_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ListView_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ListView_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ListView_StaticClassType() TClass {
	r, _, _ := getLazyProc("ListView_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTreeView ---------------------------

func TreeView_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_Create").Call(obj)
	return ret
}

func TreeView_Free(obj uintptr) {
	getLazyProc("TreeView_Free").Call(obj)
}

func TreeView_AlphaSort(obj uintptr, ARecurse bool) bool {
	ret, _, _ := getLazyProc("TreeView_AlphaSort").Call(obj, GoBoolToDBool(ARecurse))
	return DBoolToGoBool(ret)
}

func TreeView_FullCollapse(obj uintptr) {
	getLazyProc("TreeView_FullCollapse").Call(obj)
}

func TreeView_FullExpand(obj uintptr) {
	getLazyProc("TreeView_FullExpand").Call(obj)
}

func TreeView_GetHitTestInfoAt(obj uintptr, X int32, Y int32) THitTests {
	ret, _, _ := getLazyProc("TreeView_GetHitTestInfoAt").Call(obj, uintptr(X), uintptr(Y))
	return THitTests(ret)
}

func TreeView_GetNodeAt(obj uintptr, X int32, Y int32) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetNodeAt").Call(obj, uintptr(X), uintptr(Y))
	return ret
}

func TreeView_IsEditing(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_IsEditing").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_LoadFromFile(obj uintptr, FileName string) {
	getLazyProc("TreeView_LoadFromFile").Call(obj, GoStrToDStr(FileName))
}

func TreeView_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("TreeView_LoadFromStream").Call(obj, Stream)
}

func TreeView_SaveToFile(obj uintptr, FileName string) {
	getLazyProc("TreeView_SaveToFile").Call(obj, GoStrToDStr(FileName))
}

func TreeView_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("TreeView_SaveToStream").Call(obj, Stream)
}

func TreeView_ClearSelection(obj uintptr, KeepPrimary bool) {
	getLazyProc("TreeView_ClearSelection").Call(obj, GoBoolToDBool(KeepPrimary))
}

func TreeView_CustomSort(obj uintptr, SortProc PFNTVCOMPARE, Data int, ARecurse bool) bool {
	ret, _, _ := getLazyProc("TreeView_CustomSort").Call(obj, uintptr(SortProc), uintptr(Data), GoBoolToDBool(ARecurse))
	return DBoolToGoBool(ret)
}

func TreeView_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func TreeView_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("TreeView_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func TreeView_DisableAlign(obj uintptr) {
	getLazyProc("TreeView_DisableAlign").Call(obj)
}

func TreeView_EnableAlign(obj uintptr) {
	getLazyProc("TreeView_EnableAlign").Call(obj)
}

func TreeView_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("TreeView_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func TreeView_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("TreeView_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func TreeView_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("TreeView_InsertControl").Call(obj, AControl)
}

func TreeView_Invalidate(obj uintptr) {
	getLazyProc("TreeView_Invalidate").Call(obj)
}

func TreeView_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("TreeView_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func TreeView_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("TreeView_RemoveControl").Call(obj, AControl)
}

func TreeView_Realign(obj uintptr) {
	getLazyProc("TreeView_Realign").Call(obj)
}

func TreeView_Repaint(obj uintptr) {
	getLazyProc("TreeView_Repaint").Call(obj)
}

func TreeView_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("TreeView_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func TreeView_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("TreeView_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func TreeView_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("TreeView_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func TreeView_SetFocus(obj uintptr) {
	getLazyProc("TreeView_SetFocus").Call(obj)
}

func TreeView_Update(obj uintptr) {
	getLazyProc("TreeView_Update").Call(obj)
}

func TreeView_BringToFront(obj uintptr) {
	getLazyProc("TreeView_BringToFront").Call(obj)
}

func TreeView_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("TreeView_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeView_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("TreeView_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeView_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_Hide(obj uintptr) {
	getLazyProc("TreeView_Hide").Call(obj)
}

func TreeView_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("TreeView_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func TreeView_Refresh(obj uintptr) {
	getLazyProc("TreeView_Refresh").Call(obj)
}

func TreeView_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("TreeView_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeView_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("TreeView_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeView_SendToBack(obj uintptr) {
	getLazyProc("TreeView_SendToBack").Call(obj)
}

func TreeView_Show(obj uintptr) {
	getLazyProc("TreeView_Show").Call(obj)
}

func TreeView_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("TreeView_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func TreeView_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetTextLen").Call(obj)
	return int32(ret)
}

func TreeView_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("TreeView_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func TreeView_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("TreeView_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func TreeView_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeView_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TreeView_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TreeView_Assign").Call(obj, Source)
}

func TreeView_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TreeView_ClassType").Call(obj)
	return TClass(ret)
}

func TreeView_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeView_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TreeView_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_InstanceSize").Call(obj)
	return int32(ret)
}

func TreeView_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TreeView_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TreeView_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TreeView_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetHashCode").Call(obj)
	return int32(ret)
}

func TreeView_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeView_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TreeView_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("TreeView_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func TreeView_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("TreeView_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func TreeView_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("TreeView_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func TreeView_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("TreeView_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func TreeView_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("TreeView_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func TreeView_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("TreeView_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func TreeView_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("TreeView_AnchorClient").Call(obj, uintptr(ASpace))
}

func TreeView_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TreeView_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TreeView_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("TreeView_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func TreeView_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("TreeView_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func TreeView_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("TreeView_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func TreeView_GetDefaultItemHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetDefaultItemHeight").Call(obj)
	return int32(ret)
}

func TreeView_SetDefaultItemHeight(obj uintptr, value int32) {
	getLazyProc("TreeView_SetDefaultItemHeight").Call(obj, uintptr(value))
}

func TreeView_GetExpandSignColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TreeView_GetExpandSignColor").Call(obj)
	return TColor(ret)
}

func TreeView_SetExpandSignColor(obj uintptr, value TColor) {
	getLazyProc("TreeView_SetExpandSignColor").Call(obj, uintptr(value))
}

func TreeView_GetExpandSignSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetExpandSignSize").Call(obj)
	return int32(ret)
}

func TreeView_SetExpandSignSize(obj uintptr, value int32) {
	getLazyProc("TreeView_SetExpandSignSize").Call(obj, uintptr(value))
}

func TreeView_GetExpandSignType(obj uintptr) TTreeViewExpandSignType {
	ret, _, _ := getLazyProc("TreeView_GetExpandSignType").Call(obj)
	return TTreeViewExpandSignType(ret)
}

func TreeView_SetExpandSignType(obj uintptr, value TTreeViewExpandSignType) {
	getLazyProc("TreeView_SetExpandSignType").Call(obj, uintptr(value))
}

func TreeView_GetHotTrackColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TreeView_GetHotTrackColor").Call(obj)
	return TColor(ret)
}

func TreeView_SetHotTrackColor(obj uintptr, value TColor) {
	getLazyProc("TreeView_SetHotTrackColor").Call(obj, uintptr(value))
}

func TreeView_GetImagesWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetImagesWidth").Call(obj)
	return int32(ret)
}

func TreeView_SetImagesWidth(obj uintptr, value int32) {
	getLazyProc("TreeView_SetImagesWidth").Call(obj, uintptr(value))
}

func TreeView_GetOptions(obj uintptr) TTreeViewOptions {
	ret, _, _ := getLazyProc("TreeView_GetOptions").Call(obj)
	return TTreeViewOptions(ret)
}

func TreeView_SetOptions(obj uintptr, value TTreeViewOptions) {
	getLazyProc("TreeView_SetOptions").Call(obj, uintptr(value))
}

func TreeView_GetScrollBars(obj uintptr) TScrollStyle {
	ret, _, _ := getLazyProc("TreeView_GetScrollBars").Call(obj)
	return TScrollStyle(ret)
}

func TreeView_SetScrollBars(obj uintptr, value TScrollStyle) {
	getLazyProc("TreeView_SetScrollBars").Call(obj, uintptr(value))
}

func TreeView_GetSelectionColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TreeView_GetSelectionColor").Call(obj)
	return TColor(ret)
}

func TreeView_SetSelectionColor(obj uintptr, value TColor) {
	getLazyProc("TreeView_SetSelectionColor").Call(obj, uintptr(value))
}

func TreeView_GetSelectionFontColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TreeView_GetSelectionFontColor").Call(obj)
	return TColor(ret)
}

func TreeView_SetSelectionFontColor(obj uintptr, value TColor) {
	getLazyProc("TreeView_SetSelectionFontColor").Call(obj, uintptr(value))
}

func TreeView_GetSelectionFontColorUsed(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetSelectionFontColorUsed").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetSelectionFontColorUsed(obj uintptr, value bool) {
	getLazyProc("TreeView_SetSelectionFontColorUsed").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetSeparatorColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TreeView_GetSeparatorColor").Call(obj)
	return TColor(ret)
}

func TreeView_SetSeparatorColor(obj uintptr, value TColor) {
	getLazyProc("TreeView_SetSeparatorColor").Call(obj, uintptr(value))
}

func TreeView_GetStateImagesWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetStateImagesWidth").Call(obj)
	return int32(ret)
}

func TreeView_SetStateImagesWidth(obj uintptr, value int32) {
	getLazyProc("TreeView_SetStateImagesWidth").Call(obj, uintptr(value))
}

func TreeView_GetToolTips(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetToolTips").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetToolTips(obj uintptr, value bool) {
	getLazyProc("TreeView_SetToolTips").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetTreeLineColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TreeView_GetTreeLineColor").Call(obj)
	return TColor(ret)
}

func TreeView_SetTreeLineColor(obj uintptr, value TColor) {
	getLazyProc("TreeView_SetTreeLineColor").Call(obj, uintptr(value))
}

func TreeView_GetTreeLinePenStyle(obj uintptr) TPenStyle {
	ret, _, _ := getLazyProc("TreeView_GetTreeLinePenStyle").Call(obj)
	return TPenStyle(ret)
}

func TreeView_SetTreeLinePenStyle(obj uintptr, value TPenStyle) {
	getLazyProc("TreeView_SetTreeLinePenStyle").Call(obj, uintptr(value))
}

func TreeView_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("TreeView_GetAlign").Call(obj)
	return TAlign(ret)
}

func TreeView_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("TreeView_SetAlign").Call(obj, uintptr(value))
}

func TreeView_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("TreeView_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func TreeView_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("TreeView_SetAnchors").Call(obj, uintptr(value))
}

func TreeView_GetAutoExpand(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetAutoExpand").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetAutoExpand(obj uintptr, value bool) {
	getLazyProc("TreeView_SetAutoExpand").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("TreeView_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func TreeView_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("TreeView_SetBiDiMode").Call(obj, uintptr(value))
}

func TreeView_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("TreeView_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func TreeView_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("TreeView_SetBorderStyle").Call(obj, uintptr(value))
}

func TreeView_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetBorderWidth").Call(obj)
	return int32(ret)
}

func TreeView_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("TreeView_SetBorderWidth").Call(obj, uintptr(value))
}

func TreeView_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TreeView_GetColor").Call(obj)
	return TColor(ret)
}

func TreeView_SetColor(obj uintptr, value TColor) {
	getLazyProc("TreeView_SetColor").Call(obj, uintptr(value))
}

func TreeView_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetConstraints").Call(obj)
	return ret
}

func TreeView_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetConstraints").Call(obj, value)
}

func TreeView_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("TreeView_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("TreeView_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func TreeView_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("TreeView_SetDragKind").Call(obj, uintptr(value))
}

func TreeView_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("TreeView_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func TreeView_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("TreeView_SetDragCursor").Call(obj, uintptr(value))
}

func TreeView_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("TreeView_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func TreeView_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("TreeView_SetDragMode").Call(obj, uintptr(value))
}

func TreeView_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetEnabled(obj uintptr, value bool) {
	getLazyProc("TreeView_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetFont").Call(obj)
	return ret
}

func TreeView_SetFont(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetFont").Call(obj, value)
}

func TreeView_GetHideSelection(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetHideSelection").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetHideSelection(obj uintptr, value bool) {
	getLazyProc("TreeView_SetHideSelection").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetHotTrack(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetHotTrack").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetHotTrack(obj uintptr, value bool) {
	getLazyProc("TreeView_SetHotTrack").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetImages").Call(obj)
	return ret
}

func TreeView_SetImages(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetImages").Call(obj, value)
}

func TreeView_GetIndent(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetIndent").Call(obj)
	return int32(ret)
}

func TreeView_SetIndent(obj uintptr, value int32) {
	getLazyProc("TreeView_SetIndent").Call(obj, uintptr(value))
}

func TreeView_GetMultiSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetMultiSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetMultiSelect(obj uintptr, value bool) {
	getLazyProc("TreeView_SetMultiSelect").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetMultiSelectStyle(obj uintptr) TMultiSelectStyle {
	ret, _, _ := getLazyProc("TreeView_GetMultiSelectStyle").Call(obj)
	return TMultiSelectStyle(ret)
}

func TreeView_SetMultiSelectStyle(obj uintptr, value TMultiSelectStyle) {
	getLazyProc("TreeView_SetMultiSelectStyle").Call(obj, uintptr(value))
}

func TreeView_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetParentColor(obj uintptr, value bool) {
	getLazyProc("TreeView_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("TreeView_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetParentFont(obj uintptr, value bool) {
	getLazyProc("TreeView_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("TreeView_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetPopupMenu").Call(obj)
	return ret
}

func TreeView_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetPopupMenu").Call(obj, value)
}

func TreeView_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("TreeView_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetRightClickSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetRightClickSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetRightClickSelect(obj uintptr, value bool) {
	getLazyProc("TreeView_SetRightClickSelect").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetRowSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetRowSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetRowSelect(obj uintptr, value bool) {
	getLazyProc("TreeView_SetRowSelect").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowButtons(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetShowButtons").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetShowButtons(obj uintptr, value bool) {
	getLazyProc("TreeView_SetShowButtons").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetShowHint(obj uintptr, value bool) {
	getLazyProc("TreeView_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowLines(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetShowLines").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetShowLines(obj uintptr, value bool) {
	getLazyProc("TreeView_SetShowLines").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowRoot(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetShowRoot").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetShowRoot(obj uintptr, value bool) {
	getLazyProc("TreeView_SetShowRoot").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetSortType(obj uintptr) TSortType {
	ret, _, _ := getLazyProc("TreeView_GetSortType").Call(obj)
	return TSortType(ret)
}

func TreeView_SetSortType(obj uintptr, value TSortType) {
	getLazyProc("TreeView_SetSortType").Call(obj, uintptr(value))
}

func TreeView_GetStateImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetStateImages").Call(obj)
	return ret
}

func TreeView_SetStateImages(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetStateImages").Call(obj, value)
}

func TreeView_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("TreeView_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func TreeView_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("TreeView_SetTabOrder").Call(obj, uintptr(value))
}

func TreeView_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetTabStop(obj uintptr, value bool) {
	getLazyProc("TreeView_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetVisible(obj uintptr, value bool) {
	getLazyProc("TreeView_SetVisible").Call(obj, GoBoolToDBool(value))
}

func TreeView_SetOnAddition(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnAddition").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnAdvancedCustomDraw(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnAdvancedCustomDraw").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnAdvancedCustomDrawItem(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnAdvancedCustomDrawItem").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnChanging(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnChanging").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnCollapsed(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnCollapsed").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnCollapsing(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnCollapsing").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnCompare(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnCompare").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnCustomDraw(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnCustomDraw").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnCustomDrawItem(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnCustomDrawItem").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnDeletion(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnDeletion").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnEdited(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnEdited").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnEditing(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnEditing").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnExpanding(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnExpanding").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnExpanded(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnExpanded").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnGetSelectedIndex(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnGetSelectedIndex").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func TreeView_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("TreeView_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func TreeView_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetItems").Call(obj)
	return ret
}

func TreeView_SetItems(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetItems").Call(obj, value)
}

func TreeView_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetCanvas").Call(obj)
	return ret
}

func TreeView_GetDropTarget(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetDropTarget").Call(obj)
	return ret
}

func TreeView_SetDropTarget(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetDropTarget").Call(obj, value)
}

func TreeView_GetSelected(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetSelected").Call(obj)
	return ret
}

func TreeView_SetSelected(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetSelected").Call(obj, value)
}

func TreeView_GetTopItem(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetTopItem").Call(obj)
	return ret
}

func TreeView_SetTopItem(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetTopItem").Call(obj, value)
}

func TreeView_GetSelectionCount(obj uintptr) uint32 {
	ret, _, _ := getLazyProc("TreeView_GetSelectionCount").Call(obj)
	return uint32(ret)
}

func TreeView_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetDockClientCount").Call(obj)
	return int32(ret)
}

func TreeView_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetDockSite(obj uintptr, value bool) {
	getLazyProc("TreeView_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func TreeView_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetBrush").Call(obj)
	return ret
}

func TreeView_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetControlCount").Call(obj)
	return int32(ret)
}

func TreeView_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("TreeView_GetHandle").Call(obj)
	return HWND(ret)
}

func TreeView_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("TreeView_GetParentWindow").Call(obj)
	return HWND(ret)
}

func TreeView_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("TreeView_SetParentWindow").Call(obj, uintptr(value))
}

func TreeView_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("TreeView_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func TreeView_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetAction").Call(obj)
	return ret
}

func TreeView_SetAction(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetAction").Call(obj, value)
}

func TreeView_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("TreeView_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeView_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("TreeView_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func TreeView_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetClientHeight").Call(obj)
	return int32(ret)
}

func TreeView_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("TreeView_SetClientHeight").Call(obj, uintptr(value))
}

func TreeView_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("TreeView_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeView_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("TreeView_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeView_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetClientWidth").Call(obj)
	return int32(ret)
}

func TreeView_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("TreeView_SetClientWidth").Call(obj, uintptr(value))
}

func TreeView_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("TreeView_GetControlState").Call(obj)
	return TControlState(ret)
}

func TreeView_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("TreeView_SetControlState").Call(obj, uintptr(value))
}

func TreeView_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("TreeView_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func TreeView_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("TreeView_SetControlStyle").Call(obj, uintptr(value))
}

func TreeView_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeView_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeView_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetParent").Call(obj)
	return ret
}

func TreeView_SetParent(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetParent").Call(obj, value)
}

func TreeView_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetLeft").Call(obj)
	return int32(ret)
}

func TreeView_SetLeft(obj uintptr, value int32) {
	getLazyProc("TreeView_SetLeft").Call(obj, uintptr(value))
}

func TreeView_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetTop").Call(obj)
	return int32(ret)
}

func TreeView_SetTop(obj uintptr, value int32) {
	getLazyProc("TreeView_SetTop").Call(obj, uintptr(value))
}

func TreeView_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetWidth").Call(obj)
	return int32(ret)
}

func TreeView_SetWidth(obj uintptr, value int32) {
	getLazyProc("TreeView_SetWidth").Call(obj, uintptr(value))
}

func TreeView_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetHeight").Call(obj)
	return int32(ret)
}

func TreeView_SetHeight(obj uintptr, value int32) {
	getLazyProc("TreeView_SetHeight").Call(obj, uintptr(value))
}

func TreeView_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("TreeView_GetCursor").Call(obj)
	return TCursor(ret)
}

func TreeView_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("TreeView_SetCursor").Call(obj, uintptr(value))
}

func TreeView_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeView_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func TreeView_SetHint(obj uintptr, value string) {
	getLazyProc("TreeView_SetHint").Call(obj, GoStrToDStr(value))
}

func TreeView_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetComponentCount").Call(obj)
	return int32(ret)
}

func TreeView_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeView_GetComponentIndex").Call(obj)
	return int32(ret)
}

func TreeView_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("TreeView_SetComponentIndex").Call(obj, uintptr(value))
}

func TreeView_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetOwner").Call(obj)
	return ret
}

func TreeView_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeView_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func TreeView_SetName(obj uintptr, value string) {
	getLazyProc("TreeView_SetName").Call(obj, GoStrToDStr(value))
}

func TreeView_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("TreeView_GetTag").Call(obj)
	return int(ret)
}

func TreeView_SetTag(obj uintptr, value int) {
	getLazyProc("TreeView_SetTag").Call(obj, uintptr(value))
}

func TreeView_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetAnchorSideLeft").Call(obj)
	return ret
}

func TreeView_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetAnchorSideLeft").Call(obj, value)
}

func TreeView_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetAnchorSideTop").Call(obj)
	return ret
}

func TreeView_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetAnchorSideTop").Call(obj, value)
}

func TreeView_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetAnchorSideRight").Call(obj)
	return ret
}

func TreeView_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetAnchorSideRight").Call(obj, value)
}

func TreeView_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetAnchorSideBottom").Call(obj)
	return ret
}

func TreeView_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetAnchorSideBottom").Call(obj, value)
}

func TreeView_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetChildSizing").Call(obj)
	return ret
}

func TreeView_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetChildSizing").Call(obj, value)
}

func TreeView_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetBorderSpacing").Call(obj)
	return ret
}

func TreeView_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("TreeView_SetBorderSpacing").Call(obj, value)
}

func TreeView_GetSelections(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetSelections").Call(obj, uintptr(Index))
	return ret
}

func TreeView_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func TreeView_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetControls").Call(obj, uintptr(Index))
	return ret
}

func TreeView_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func TreeView_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("TreeView_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func TreeView_StaticClassType() TClass {
	r, _, _ := getLazyProc("TreeView_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TStatusBar ---------------------------

func StatusBar_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_Create").Call(obj)
	return ret
}

func StatusBar_Free(obj uintptr) {
	getLazyProc("StatusBar_Free").Call(obj)
}

func StatusBar_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("StatusBar_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func StatusBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("StatusBar_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func StatusBar_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func StatusBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("StatusBar_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func StatusBar_DisableAlign(obj uintptr) {
	getLazyProc("StatusBar_DisableAlign").Call(obj)
}

func StatusBar_EnableAlign(obj uintptr) {
	getLazyProc("StatusBar_EnableAlign").Call(obj)
}

func StatusBar_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("StatusBar_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func StatusBar_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("StatusBar_InsertControl").Call(obj, AControl)
}

func StatusBar_Invalidate(obj uintptr) {
	getLazyProc("StatusBar_Invalidate").Call(obj)
}

func StatusBar_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("StatusBar_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func StatusBar_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("StatusBar_RemoveControl").Call(obj, AControl)
}

func StatusBar_Realign(obj uintptr) {
	getLazyProc("StatusBar_Realign").Call(obj)
}

func StatusBar_Repaint(obj uintptr) {
	getLazyProc("StatusBar_Repaint").Call(obj)
}

func StatusBar_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("StatusBar_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func StatusBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("StatusBar_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func StatusBar_SetFocus(obj uintptr) {
	getLazyProc("StatusBar_SetFocus").Call(obj)
}

func StatusBar_Update(obj uintptr) {
	getLazyProc("StatusBar_Update").Call(obj)
}

func StatusBar_BringToFront(obj uintptr) {
	getLazyProc("StatusBar_BringToFront").Call(obj)
}

func StatusBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("StatusBar_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StatusBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("StatusBar_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StatusBar_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_Hide(obj uintptr) {
	getLazyProc("StatusBar_Hide").Call(obj)
}

func StatusBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("StatusBar_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func StatusBar_Refresh(obj uintptr) {
	getLazyProc("StatusBar_Refresh").Call(obj)
}

func StatusBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("StatusBar_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StatusBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("StatusBar_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StatusBar_SendToBack(obj uintptr) {
	getLazyProc("StatusBar_SendToBack").Call(obj)
}

func StatusBar_Show(obj uintptr) {
	getLazyProc("StatusBar_Show").Call(obj)
}

func StatusBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("StatusBar_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func StatusBar_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetTextLen").Call(obj)
	return int32(ret)
}

func StatusBar_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("StatusBar_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func StatusBar_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("StatusBar_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func StatusBar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusBar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func StatusBar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("StatusBar_Assign").Call(obj, Source)
}

func StatusBar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("StatusBar_ClassType").Call(obj)
	return TClass(ret)
}

func StatusBar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusBar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func StatusBar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_InstanceSize").Call(obj)
	return int32(ret)
}

func StatusBar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("StatusBar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func StatusBar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func StatusBar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetHashCode").Call(obj)
	return int32(ret)
}

func StatusBar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusBar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func StatusBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("StatusBar_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func StatusBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("StatusBar_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func StatusBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("StatusBar_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func StatusBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("StatusBar_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func StatusBar_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("StatusBar_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func StatusBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("StatusBar_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func StatusBar_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("StatusBar_AnchorClient").Call(obj, uintptr(ASpace))
}

func StatusBar_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StatusBar_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StatusBar_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("StatusBar_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func StatusBar_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("StatusBar_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func StatusBar_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("StatusBar_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func StatusBar_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetAction").Call(obj)
	return ret
}

func StatusBar_SetAction(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetAction").Call(obj, value)
}

func StatusBar_GetAutoHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetAutoHint").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetAutoHint(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetAutoHint").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("StatusBar_GetAlign").Call(obj)
	return TAlign(ret)
}

func StatusBar_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("StatusBar_SetAlign").Call(obj, uintptr(value))
}

func StatusBar_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("StatusBar_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func StatusBar_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("StatusBar_SetAnchors").Call(obj, uintptr(value))
}

func StatusBar_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("StatusBar_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func StatusBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("StatusBar_SetBiDiMode").Call(obj, uintptr(value))
}

func StatusBar_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetBorderWidth").Call(obj)
	return int32(ret)
}

func StatusBar_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetBorderWidth").Call(obj, uintptr(value))
}

func StatusBar_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StatusBar_GetColor").Call(obj)
	return TColor(ret)
}

func StatusBar_SetColor(obj uintptr, value TColor) {
	getLazyProc("StatusBar_SetColor").Call(obj, uintptr(value))
}

func StatusBar_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("StatusBar_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func StatusBar_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("StatusBar_SetDragCursor").Call(obj, uintptr(value))
}

func StatusBar_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("StatusBar_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func StatusBar_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("StatusBar_SetDragKind").Call(obj, uintptr(value))
}

func StatusBar_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("StatusBar_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func StatusBar_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("StatusBar_SetDragMode").Call(obj, uintptr(value))
}

func StatusBar_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetEnabled(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetFont").Call(obj)
	return ret
}

func StatusBar_SetFont(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetFont").Call(obj, value)
}

func StatusBar_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetConstraints").Call(obj)
	return ret
}

func StatusBar_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetConstraints").Call(obj, value)
}

func StatusBar_GetPanels(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetPanels").Call(obj)
	return ret
}

func StatusBar_SetPanels(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetPanels").Call(obj, value)
}

func StatusBar_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetParentColor(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetParentFont(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetPopupMenu").Call(obj)
	return ret
}

func StatusBar_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetPopupMenu").Call(obj, value)
}

func StatusBar_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetShowHint(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetSimplePanel(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetSimplePanel").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetSimplePanel(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetSimplePanel").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetSimpleText(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusBar_GetSimpleText").Call(obj)
	return DStrToGoStr(ret)
}

func StatusBar_SetSimpleText(obj uintptr, value string) {
	getLazyProc("StatusBar_SetSimpleText").Call(obj, GoStrToDStr(value))
}

func StatusBar_GetSizeGrip(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetSizeGrip").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetSizeGrip(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetSizeGrip").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetUseSystemFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetUseSystemFont").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetUseSystemFont(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetUseSystemFont").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetVisible(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func StatusBar_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnHint(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnHint").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("StatusBar_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func StatusBar_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetCanvas").Call(obj)
	return ret
}

func StatusBar_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetDockClientCount").Call(obj)
	return int32(ret)
}

func StatusBar_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetDockSite(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func StatusBar_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetBrush").Call(obj)
	return ret
}

func StatusBar_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetControlCount").Call(obj)
	return int32(ret)
}

func StatusBar_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("StatusBar_GetHandle").Call(obj)
	return HWND(ret)
}

func StatusBar_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("StatusBar_GetParentWindow").Call(obj)
	return HWND(ret)
}

func StatusBar_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("StatusBar_SetParentWindow").Call(obj, uintptr(value))
}

func StatusBar_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("StatusBar_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func StatusBar_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("StatusBar_SetTabOrder").Call(obj, uintptr(value))
}

func StatusBar_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetTabStop(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("StatusBar_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("StatusBar_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StatusBar_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("StatusBar_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StatusBar_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetClientHeight").Call(obj)
	return int32(ret)
}

func StatusBar_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetClientHeight").Call(obj, uintptr(value))
}

func StatusBar_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("StatusBar_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StatusBar_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("StatusBar_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StatusBar_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetClientWidth").Call(obj)
	return int32(ret)
}

func StatusBar_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetClientWidth").Call(obj, uintptr(value))
}

func StatusBar_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("StatusBar_GetControlState").Call(obj)
	return TControlState(ret)
}

func StatusBar_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("StatusBar_SetControlState").Call(obj, uintptr(value))
}

func StatusBar_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("StatusBar_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func StatusBar_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("StatusBar_SetControlStyle").Call(obj, uintptr(value))
}

func StatusBar_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusBar_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func StatusBar_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetParent").Call(obj)
	return ret
}

func StatusBar_SetParent(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetParent").Call(obj, value)
}

func StatusBar_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetLeft").Call(obj)
	return int32(ret)
}

func StatusBar_SetLeft(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetLeft").Call(obj, uintptr(value))
}

func StatusBar_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetTop").Call(obj)
	return int32(ret)
}

func StatusBar_SetTop(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetTop").Call(obj, uintptr(value))
}

func StatusBar_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetWidth").Call(obj)
	return int32(ret)
}

func StatusBar_SetWidth(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetWidth").Call(obj, uintptr(value))
}

func StatusBar_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetHeight").Call(obj)
	return int32(ret)
}

func StatusBar_SetHeight(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetHeight").Call(obj, uintptr(value))
}

func StatusBar_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("StatusBar_GetCursor").Call(obj)
	return TCursor(ret)
}

func StatusBar_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("StatusBar_SetCursor").Call(obj, uintptr(value))
}

func StatusBar_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusBar_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func StatusBar_SetHint(obj uintptr, value string) {
	getLazyProc("StatusBar_SetHint").Call(obj, GoStrToDStr(value))
}

func StatusBar_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetComponentCount").Call(obj)
	return int32(ret)
}

func StatusBar_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusBar_GetComponentIndex").Call(obj)
	return int32(ret)
}

func StatusBar_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("StatusBar_SetComponentIndex").Call(obj, uintptr(value))
}

func StatusBar_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetOwner").Call(obj)
	return ret
}

func StatusBar_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusBar_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func StatusBar_SetName(obj uintptr, value string) {
	getLazyProc("StatusBar_SetName").Call(obj, GoStrToDStr(value))
}

func StatusBar_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("StatusBar_GetTag").Call(obj)
	return int(ret)
}

func StatusBar_SetTag(obj uintptr, value int) {
	getLazyProc("StatusBar_SetTag").Call(obj, uintptr(value))
}

func StatusBar_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetAnchorSideLeft").Call(obj)
	return ret
}

func StatusBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetAnchorSideLeft").Call(obj, value)
}

func StatusBar_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetAnchorSideTop").Call(obj)
	return ret
}

func StatusBar_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetAnchorSideTop").Call(obj, value)
}

func StatusBar_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetAnchorSideRight").Call(obj)
	return ret
}

func StatusBar_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetAnchorSideRight").Call(obj, value)
}

func StatusBar_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetAnchorSideBottom").Call(obj)
	return ret
}

func StatusBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetAnchorSideBottom").Call(obj, value)
}

func StatusBar_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetChildSizing").Call(obj)
	return ret
}

func StatusBar_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetChildSizing").Call(obj, value)
}

func StatusBar_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetBorderSpacing").Call(obj)
	return ret
}

func StatusBar_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("StatusBar_SetBorderSpacing").Call(obj, value)
}

func StatusBar_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func StatusBar_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetControls").Call(obj, uintptr(Index))
	return ret
}

func StatusBar_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func StatusBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("StatusBar_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func StatusBar_StaticClassType() TClass {
	r, _, _ := getLazyProc("StatusBar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TToolBar ---------------------------

func ToolBar_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_Create").Call(obj)
	return ret
}

func ToolBar_Free(obj uintptr) {
	getLazyProc("ToolBar_Free").Call(obj)
}

func ToolBar_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ToolBar_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ToolBar_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ToolBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ToolBar_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ToolBar_DisableAlign(obj uintptr) {
	getLazyProc("ToolBar_DisableAlign").Call(obj)
}

func ToolBar_EnableAlign(obj uintptr) {
	getLazyProc("ToolBar_EnableAlign").Call(obj)
}

func ToolBar_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ToolBar_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ToolBar_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ToolBar_InsertControl").Call(obj, AControl)
}

func ToolBar_Invalidate(obj uintptr) {
	getLazyProc("ToolBar_Invalidate").Call(obj)
}

func ToolBar_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ToolBar_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ToolBar_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ToolBar_RemoveControl").Call(obj, AControl)
}

func ToolBar_Realign(obj uintptr) {
	getLazyProc("ToolBar_Realign").Call(obj)
}

func ToolBar_Repaint(obj uintptr) {
	getLazyProc("ToolBar_Repaint").Call(obj)
}

func ToolBar_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ToolBar_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ToolBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ToolBar_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ToolBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ToolBar_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ToolBar_SetFocus(obj uintptr) {
	getLazyProc("ToolBar_SetFocus").Call(obj)
}

func ToolBar_Update(obj uintptr) {
	getLazyProc("ToolBar_Update").Call(obj)
}

func ToolBar_BringToFront(obj uintptr) {
	getLazyProc("ToolBar_BringToFront").Call(obj)
}

func ToolBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ToolBar_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToolBar_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolBar_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_Hide(obj uintptr) {
	getLazyProc("ToolBar_Hide").Call(obj)
}

func ToolBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ToolBar_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ToolBar_Refresh(obj uintptr) {
	getLazyProc("ToolBar_Refresh").Call(obj)
}

func ToolBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ToolBar_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToolBar_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolBar_SendToBack(obj uintptr) {
	getLazyProc("ToolBar_SendToBack").Call(obj)
}

func ToolBar_Show(obj uintptr) {
	getLazyProc("ToolBar_Show").Call(obj)
}

func ToolBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ToolBar_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ToolBar_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetTextLen").Call(obj)
	return int32(ret)
}

func ToolBar_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ToolBar_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ToolBar_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ToolBar_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ToolBar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolBar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ToolBar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ToolBar_Assign").Call(obj, Source)
}

func ToolBar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ToolBar_ClassType").Call(obj)
	return TClass(ret)
}

func ToolBar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolBar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ToolBar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_InstanceSize").Call(obj)
	return int32(ret)
}

func ToolBar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ToolBar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ToolBar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ToolBar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetHashCode").Call(obj)
	return int32(ret)
}

func ToolBar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolBar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ToolBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ToolBar_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ToolBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ToolBar_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ToolBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ToolBar_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ToolBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ToolBar_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ToolBar_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ToolBar_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ToolBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ToolBar_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ToolBar_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ToolBar_AnchorClient").Call(obj, uintptr(ASpace))
}

func ToolBar_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolBar_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolBar_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ToolBar_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ToolBar_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ToolBar_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ToolBar_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ToolBar_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ToolBar_GetButtonCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetButtonCount").Call(obj)
	return int32(ret)
}

func ToolBar_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetCanvas").Call(obj)
	return ret
}

func ToolBar_GetRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetRowCount").Call(obj)
	return int32(ret)
}

func ToolBar_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ToolBar_GetAlign").Call(obj)
	return TAlign(ret)
}

func ToolBar_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ToolBar_SetAlign").Call(obj, uintptr(value))
}

func ToolBar_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ToolBar_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ToolBar_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ToolBar_SetAnchors").Call(obj, uintptr(value))
}

func ToolBar_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetBorderWidth").Call(obj)
	return int32(ret)
}

func ToolBar_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetBorderWidth").Call(obj, uintptr(value))
}

func ToolBar_GetButtonHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetButtonHeight").Call(obj)
	return int32(ret)
}

func ToolBar_SetButtonHeight(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetButtonHeight").Call(obj, uintptr(value))
}

func ToolBar_GetButtonWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetButtonWidth").Call(obj)
	return int32(ret)
}

func ToolBar_SetButtonWidth(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetButtonWidth").Call(obj, uintptr(value))
}

func ToolBar_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolBar_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func ToolBar_SetCaption(obj uintptr, value string) {
	getLazyProc("ToolBar_SetCaption").Call(obj, GoStrToDStr(value))
}

func ToolBar_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ToolBar_GetColor").Call(obj)
	return TColor(ret)
}

func ToolBar_SetColor(obj uintptr, value TColor) {
	getLazyProc("ToolBar_SetColor").Call(obj, uintptr(value))
}

func ToolBar_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetConstraints").Call(obj)
	return ret
}

func ToolBar_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetConstraints").Call(obj, value)
}

func ToolBar_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ToolBar_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ToolBar_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ToolBar_SetDragCursor").Call(obj, uintptr(value))
}

func ToolBar_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ToolBar_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ToolBar_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ToolBar_SetDragKind").Call(obj, uintptr(value))
}

func ToolBar_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ToolBar_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ToolBar_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ToolBar_SetDragMode").Call(obj, uintptr(value))
}

func ToolBar_GetEdgeBorders(obj uintptr) TEdgeBorders {
	ret, _, _ := getLazyProc("ToolBar_GetEdgeBorders").Call(obj)
	return TEdgeBorders(ret)
}

func ToolBar_SetEdgeBorders(obj uintptr, value TEdgeBorders) {
	getLazyProc("ToolBar_SetEdgeBorders").Call(obj, uintptr(value))
}

func ToolBar_GetEdgeInner(obj uintptr) TEdgeStyle {
	ret, _, _ := getLazyProc("ToolBar_GetEdgeInner").Call(obj)
	return TEdgeStyle(ret)
}

func ToolBar_SetEdgeInner(obj uintptr, value TEdgeStyle) {
	getLazyProc("ToolBar_SetEdgeInner").Call(obj, uintptr(value))
}

func ToolBar_GetEdgeOuter(obj uintptr) TEdgeStyle {
	ret, _, _ := getLazyProc("ToolBar_GetEdgeOuter").Call(obj)
	return TEdgeStyle(ret)
}

func ToolBar_SetEdgeOuter(obj uintptr, value TEdgeStyle) {
	getLazyProc("ToolBar_SetEdgeOuter").Call(obj, uintptr(value))
}

func ToolBar_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetFlat(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetFlat").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetFlat(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetFlat").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetFont").Call(obj)
	return ret
}

func ToolBar_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetFont").Call(obj, value)
}

func ToolBar_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetHeight").Call(obj)
	return int32(ret)
}

func ToolBar_SetHeight(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetHeight").Call(obj, uintptr(value))
}

func ToolBar_GetHotImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetHotImages").Call(obj)
	return ret
}

func ToolBar_SetHotImages(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetHotImages").Call(obj, value)
}

func ToolBar_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetImages").Call(obj)
	return ret
}

func ToolBar_SetImages(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetImages").Call(obj, value)
}

func ToolBar_GetIndent(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetIndent").Call(obj)
	return int32(ret)
}

func ToolBar_SetIndent(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetIndent").Call(obj, uintptr(value))
}

func ToolBar_GetList(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetList").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetList(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetList").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetPopupMenu").Call(obj)
	return ret
}

func ToolBar_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetPopupMenu").Call(obj, value)
}

func ToolBar_GetShowCaptions(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetShowCaptions").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetShowCaptions(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetShowCaptions").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ToolBar_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ToolBar_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ToolBar_SetTabOrder").Call(obj, uintptr(value))
}

func ToolBar_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetTransparent(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetVisible(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetWrapable(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetWrapable").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetWrapable(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetWrapable").Call(obj, GoBoolToDBool(value))
}

func ToolBar_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("ToolBar_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func ToolBar_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ToolBar_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ToolBar_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetBrush").Call(obj)
	return ret
}

func ToolBar_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetControlCount").Call(obj)
	return int32(ret)
}

func ToolBar_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ToolBar_GetHandle").Call(obj)
	return HWND(ret)
}

func ToolBar_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ToolBar_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ToolBar_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ToolBar_SetParentWindow").Call(obj, uintptr(value))
}

func ToolBar_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ToolBar_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetAction").Call(obj)
	return ret
}

func ToolBar_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetAction").Call(obj, value)
}

func ToolBar_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ToolBar_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ToolBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ToolBar_SetBiDiMode").Call(obj, uintptr(value))
}

func ToolBar_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ToolBar_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolBar_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ToolBar_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ToolBar_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetClientHeight").Call(obj)
	return int32(ret)
}

func ToolBar_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetClientHeight").Call(obj, uintptr(value))
}

func ToolBar_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToolBar_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolBar_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ToolBar_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolBar_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetClientWidth").Call(obj)
	return int32(ret)
}

func ToolBar_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetClientWidth").Call(obj, uintptr(value))
}

func ToolBar_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ToolBar_GetControlState").Call(obj)
	return TControlState(ret)
}

func ToolBar_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ToolBar_SetControlState").Call(obj, uintptr(value))
}

func ToolBar_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ToolBar_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ToolBar_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ToolBar_SetControlStyle").Call(obj, uintptr(value))
}

func ToolBar_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolBar_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolBar_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetParent").Call(obj)
	return ret
}

func ToolBar_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetParent").Call(obj, value)
}

func ToolBar_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetLeft").Call(obj)
	return int32(ret)
}

func ToolBar_SetLeft(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetLeft").Call(obj, uintptr(value))
}

func ToolBar_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetTop").Call(obj)
	return int32(ret)
}

func ToolBar_SetTop(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetTop").Call(obj, uintptr(value))
}

func ToolBar_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetWidth").Call(obj)
	return int32(ret)
}

func ToolBar_SetWidth(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetWidth").Call(obj, uintptr(value))
}

func ToolBar_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ToolBar_GetCursor").Call(obj)
	return TCursor(ret)
}

func ToolBar_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ToolBar_SetCursor").Call(obj, uintptr(value))
}

func ToolBar_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolBar_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ToolBar_SetHint(obj uintptr, value string) {
	getLazyProc("ToolBar_SetHint").Call(obj, GoStrToDStr(value))
}

func ToolBar_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetComponentCount").Call(obj)
	return int32(ret)
}

func ToolBar_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolBar_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ToolBar_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ToolBar_SetComponentIndex").Call(obj, uintptr(value))
}

func ToolBar_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetOwner").Call(obj)
	return ret
}

func ToolBar_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolBar_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ToolBar_SetName(obj uintptr, value string) {
	getLazyProc("ToolBar_SetName").Call(obj, GoStrToDStr(value))
}

func ToolBar_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ToolBar_GetTag").Call(obj)
	return int(ret)
}

func ToolBar_SetTag(obj uintptr, value int) {
	getLazyProc("ToolBar_SetTag").Call(obj, uintptr(value))
}

func ToolBar_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetAnchorSideLeft").Call(obj)
	return ret
}

func ToolBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetAnchorSideLeft").Call(obj, value)
}

func ToolBar_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetAnchorSideTop").Call(obj)
	return ret
}

func ToolBar_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetAnchorSideTop").Call(obj, value)
}

func ToolBar_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetAnchorSideRight").Call(obj)
	return ret
}

func ToolBar_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetAnchorSideRight").Call(obj, value)
}

func ToolBar_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetAnchorSideBottom").Call(obj)
	return ret
}

func ToolBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetAnchorSideBottom").Call(obj, value)
}

func ToolBar_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetChildSizing").Call(obj)
	return ret
}

func ToolBar_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetChildSizing").Call(obj, value)
}

func ToolBar_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetBorderSpacing").Call(obj)
	return ret
}

func ToolBar_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ToolBar_SetBorderSpacing").Call(obj, value)
}

func ToolBar_GetButtons(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetButtons").Call(obj, uintptr(Index))
	return ret
}

func ToolBar_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ToolBar_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ToolBar_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ToolBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ToolBar_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ToolBar_StaticClassType() TClass {
	r, _, _ := getLazyProc("ToolBar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TBitBtn ---------------------------

func BitBtn_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_Create").Call(obj)
	return ret
}

func BitBtn_Free(obj uintptr) {
	getLazyProc("BitBtn_Free").Call(obj)
}

func BitBtn_Click(obj uintptr) {
	getLazyProc("BitBtn_Click").Call(obj)
}

func BitBtn_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func BitBtn_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("BitBtn_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func BitBtn_DisableAlign(obj uintptr) {
	getLazyProc("BitBtn_DisableAlign").Call(obj)
}

func BitBtn_EnableAlign(obj uintptr) {
	getLazyProc("BitBtn_EnableAlign").Call(obj)
}

func BitBtn_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("BitBtn_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func BitBtn_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("BitBtn_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func BitBtn_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("BitBtn_InsertControl").Call(obj, AControl)
}

func BitBtn_Invalidate(obj uintptr) {
	getLazyProc("BitBtn_Invalidate").Call(obj)
}

func BitBtn_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("BitBtn_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func BitBtn_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("BitBtn_RemoveControl").Call(obj, AControl)
}

func BitBtn_Realign(obj uintptr) {
	getLazyProc("BitBtn_Realign").Call(obj)
}

func BitBtn_Repaint(obj uintptr) {
	getLazyProc("BitBtn_Repaint").Call(obj)
}

func BitBtn_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("BitBtn_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func BitBtn_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("BitBtn_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func BitBtn_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("BitBtn_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func BitBtn_SetFocus(obj uintptr) {
	getLazyProc("BitBtn_SetFocus").Call(obj)
}

func BitBtn_Update(obj uintptr) {
	getLazyProc("BitBtn_Update").Call(obj)
}

func BitBtn_BringToFront(obj uintptr) {
	getLazyProc("BitBtn_BringToFront").Call(obj)
}

func BitBtn_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("BitBtn_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BitBtn_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("BitBtn_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BitBtn_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_Hide(obj uintptr) {
	getLazyProc("BitBtn_Hide").Call(obj)
}

func BitBtn_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("BitBtn_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func BitBtn_Refresh(obj uintptr) {
	getLazyProc("BitBtn_Refresh").Call(obj)
}

func BitBtn_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("BitBtn_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BitBtn_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("BitBtn_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BitBtn_SendToBack(obj uintptr) {
	getLazyProc("BitBtn_SendToBack").Call(obj)
}

func BitBtn_Show(obj uintptr) {
	getLazyProc("BitBtn_Show").Call(obj)
}

func BitBtn_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("BitBtn_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func BitBtn_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetTextLen").Call(obj)
	return int32(ret)
}

func BitBtn_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("BitBtn_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func BitBtn_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("BitBtn_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func BitBtn_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("BitBtn_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func BitBtn_Assign(obj uintptr, Source uintptr) {
	getLazyProc("BitBtn_Assign").Call(obj, Source)
}

func BitBtn_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("BitBtn_ClassType").Call(obj)
	return TClass(ret)
}

func BitBtn_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("BitBtn_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func BitBtn_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_InstanceSize").Call(obj)
	return int32(ret)
}

func BitBtn_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("BitBtn_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func BitBtn_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func BitBtn_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetHashCode").Call(obj)
	return int32(ret)
}

func BitBtn_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("BitBtn_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func BitBtn_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("BitBtn_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func BitBtn_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("BitBtn_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func BitBtn_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("BitBtn_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func BitBtn_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("BitBtn_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func BitBtn_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("BitBtn_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func BitBtn_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("BitBtn_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func BitBtn_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("BitBtn_AnchorClient").Call(obj, uintptr(ASpace))
}

func BitBtn_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BitBtn_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BitBtn_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("BitBtn_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func BitBtn_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("BitBtn_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func BitBtn_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("BitBtn_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func BitBtn_GetDefaultCaption(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetDefaultCaption").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetDefaultCaption(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetDefaultCaption").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetGlyphShowMode(obj uintptr) TGlyphShowMode {
	ret, _, _ := getLazyProc("BitBtn_GetGlyphShowMode").Call(obj)
	return TGlyphShowMode(ret)
}

func BitBtn_SetGlyphShowMode(obj uintptr, value TGlyphShowMode) {
	getLazyProc("BitBtn_SetGlyphShowMode").Call(obj, uintptr(value))
}

func BitBtn_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetImageIndex").Call(obj)
	return int32(ret)
}

func BitBtn_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetImageIndex").Call(obj, uintptr(value))
}

func BitBtn_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetImages").Call(obj)
	return ret
}

func BitBtn_SetImages(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetImages").Call(obj, value)
}

func BitBtn_GetImageWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetImageWidth").Call(obj)
	return int32(ret)
}

func BitBtn_SetImageWidth(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetImageWidth").Call(obj, uintptr(value))
}

func BitBtn_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetAction").Call(obj)
	return ret
}

func BitBtn_SetAction(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetAction").Call(obj, value)
}

func BitBtn_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("BitBtn_GetAlign").Call(obj)
	return TAlign(ret)
}

func BitBtn_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("BitBtn_SetAlign").Call(obj, uintptr(value))
}

func BitBtn_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("BitBtn_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func BitBtn_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("BitBtn_SetAnchors").Call(obj, uintptr(value))
}

func BitBtn_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("BitBtn_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func BitBtn_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("BitBtn_SetBiDiMode").Call(obj, uintptr(value))
}

func BitBtn_GetCancel(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetCancel").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetCancel(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetCancel").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("BitBtn_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func BitBtn_SetCaption(obj uintptr, value string) {
	getLazyProc("BitBtn_SetCaption").Call(obj, GoStrToDStr(value))
}

func BitBtn_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetConstraints").Call(obj)
	return ret
}

func BitBtn_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetConstraints").Call(obj, value)
}

func BitBtn_GetDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetDefault(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetDefault").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetEnabled(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetFont").Call(obj)
	return ret
}

func BitBtn_SetFont(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetFont").Call(obj, value)
}

func BitBtn_GetGlyph(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetGlyph").Call(obj)
	return ret
}

func BitBtn_SetGlyph(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetGlyph").Call(obj, value)
}

func BitBtn_GetKind(obj uintptr) TBitBtnKind {
	ret, _, _ := getLazyProc("BitBtn_GetKind").Call(obj)
	return TBitBtnKind(ret)
}

func BitBtn_SetKind(obj uintptr, value TBitBtnKind) {
	getLazyProc("BitBtn_SetKind").Call(obj, uintptr(value))
}

func BitBtn_GetLayout(obj uintptr) TButtonLayout {
	ret, _, _ := getLazyProc("BitBtn_GetLayout").Call(obj)
	return TButtonLayout(ret)
}

func BitBtn_SetLayout(obj uintptr, value TButtonLayout) {
	getLazyProc("BitBtn_SetLayout").Call(obj, uintptr(value))
}

func BitBtn_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("BitBtn_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func BitBtn_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("BitBtn_SetModalResult").Call(obj, uintptr(value))
}

func BitBtn_GetNumGlyphs(obj uintptr) TNumGlyphs {
	ret, _, _ := getLazyProc("BitBtn_GetNumGlyphs").Call(obj)
	return TNumGlyphs(ret)
}

func BitBtn_SetNumGlyphs(obj uintptr, value TNumGlyphs) {
	getLazyProc("BitBtn_SetNumGlyphs").Call(obj, uintptr(value))
}

func BitBtn_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetParentFont(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetPopupMenu").Call(obj)
	return ret
}

func BitBtn_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetPopupMenu").Call(obj, value)
}

func BitBtn_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetShowHint(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetSpacing(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetSpacing").Call(obj)
	return int32(ret)
}

func BitBtn_SetSpacing(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetSpacing").Call(obj, uintptr(value))
}

func BitBtn_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("BitBtn_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func BitBtn_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("BitBtn_SetTabOrder").Call(obj, uintptr(value))
}

func BitBtn_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetTabStop(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetVisible(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetVisible").Call(obj, GoBoolToDBool(value))
}

func BitBtn_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("BitBtn_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func BitBtn_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetDockClientCount").Call(obj)
	return int32(ret)
}

func BitBtn_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetDockSite(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func BitBtn_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetBrush").Call(obj)
	return ret
}

func BitBtn_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetControlCount").Call(obj)
	return int32(ret)
}

func BitBtn_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("BitBtn_GetHandle").Call(obj)
	return HWND(ret)
}

func BitBtn_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("BitBtn_GetParentWindow").Call(obj)
	return HWND(ret)
}

func BitBtn_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("BitBtn_SetParentWindow").Call(obj, uintptr(value))
}

func BitBtn_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("BitBtn_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("BitBtn_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BitBtn_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("BitBtn_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func BitBtn_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetClientHeight").Call(obj)
	return int32(ret)
}

func BitBtn_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetClientHeight").Call(obj, uintptr(value))
}

func BitBtn_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("BitBtn_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BitBtn_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("BitBtn_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BitBtn_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetClientWidth").Call(obj)
	return int32(ret)
}

func BitBtn_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetClientWidth").Call(obj, uintptr(value))
}

func BitBtn_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("BitBtn_GetControlState").Call(obj)
	return TControlState(ret)
}

func BitBtn_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("BitBtn_SetControlState").Call(obj, uintptr(value))
}

func BitBtn_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("BitBtn_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func BitBtn_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("BitBtn_SetControlStyle").Call(obj, uintptr(value))
}

func BitBtn_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("BitBtn_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func BitBtn_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetParent").Call(obj)
	return ret
}

func BitBtn_SetParent(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetParent").Call(obj, value)
}

func BitBtn_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetLeft").Call(obj)
	return int32(ret)
}

func BitBtn_SetLeft(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetLeft").Call(obj, uintptr(value))
}

func BitBtn_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetTop").Call(obj)
	return int32(ret)
}

func BitBtn_SetTop(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetTop").Call(obj, uintptr(value))
}

func BitBtn_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetWidth").Call(obj)
	return int32(ret)
}

func BitBtn_SetWidth(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetWidth").Call(obj, uintptr(value))
}

func BitBtn_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetHeight").Call(obj)
	return int32(ret)
}

func BitBtn_SetHeight(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetHeight").Call(obj, uintptr(value))
}

func BitBtn_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("BitBtn_GetCursor").Call(obj)
	return TCursor(ret)
}

func BitBtn_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("BitBtn_SetCursor").Call(obj, uintptr(value))
}

func BitBtn_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("BitBtn_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func BitBtn_SetHint(obj uintptr, value string) {
	getLazyProc("BitBtn_SetHint").Call(obj, GoStrToDStr(value))
}

func BitBtn_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetComponentCount").Call(obj)
	return int32(ret)
}

func BitBtn_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BitBtn_GetComponentIndex").Call(obj)
	return int32(ret)
}

func BitBtn_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("BitBtn_SetComponentIndex").Call(obj, uintptr(value))
}

func BitBtn_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetOwner").Call(obj)
	return ret
}

func BitBtn_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("BitBtn_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func BitBtn_SetName(obj uintptr, value string) {
	getLazyProc("BitBtn_SetName").Call(obj, GoStrToDStr(value))
}

func BitBtn_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("BitBtn_GetTag").Call(obj)
	return int(ret)
}

func BitBtn_SetTag(obj uintptr, value int) {
	getLazyProc("BitBtn_SetTag").Call(obj, uintptr(value))
}

func BitBtn_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetAnchorSideLeft").Call(obj)
	return ret
}

func BitBtn_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetAnchorSideLeft").Call(obj, value)
}

func BitBtn_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetAnchorSideTop").Call(obj)
	return ret
}

func BitBtn_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetAnchorSideTop").Call(obj, value)
}

func BitBtn_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetAnchorSideRight").Call(obj)
	return ret
}

func BitBtn_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetAnchorSideRight").Call(obj, value)
}

func BitBtn_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetAnchorSideBottom").Call(obj)
	return ret
}

func BitBtn_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetAnchorSideBottom").Call(obj, value)
}

func BitBtn_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetChildSizing").Call(obj)
	return ret
}

func BitBtn_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetChildSizing").Call(obj, value)
}

func BitBtn_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetBorderSpacing").Call(obj)
	return ret
}

func BitBtn_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("BitBtn_SetBorderSpacing").Call(obj, value)
}

func BitBtn_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func BitBtn_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetControls").Call(obj, uintptr(Index))
	return ret
}

func BitBtn_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func BitBtn_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("BitBtn_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func BitBtn_StaticClassType() TClass {
	r, _, _ := getLazyProc("BitBtn_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TIcon ---------------------------

func Icon_Create() uintptr {
	ret, _, _ := getLazyProc("Icon_Create").Call()
	return ret
}

func Icon_Free(obj uintptr) {
	getLazyProc("Icon_Free").Call(obj)
}

func Icon_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Icon_Assign").Call(obj, Source)
}

func Icon_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Icon_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Icon_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("Icon_LoadFromStream").Call(obj, Stream)
}

func Icon_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("Icon_SaveToStream").Call(obj, Stream)
}

func Icon_SetSize(obj uintptr, AWidth int32, AHeight int32) {
	getLazyProc("Icon_SetSize").Call(obj, uintptr(AWidth), uintptr(AHeight))
}

func Icon_LoadFromResourceName(obj uintptr, Instance uintptr, ResName string) {
	getLazyProc("Icon_LoadFromResourceName").Call(obj, Instance, GoStrToDStr(ResName))
}

func Icon_LoadFromResourceID(obj uintptr, Instance uintptr, ResID int32) {
	getLazyProc("Icon_LoadFromResourceID").Call(obj, Instance, uintptr(ResID))
}

func Icon_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Icon_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Icon_LoadFromFile(obj uintptr, Filename string) {
	getLazyProc("Icon_LoadFromFile").Call(obj, GoStrToDStr(Filename))
}

func Icon_SaveToFile(obj uintptr, Filename string) {
	getLazyProc("Icon_SaveToFile").Call(obj, GoStrToDStr(Filename))
}

func Icon_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Icon_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Icon_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Icon_ClassType").Call(obj)
	return TClass(ret)
}

func Icon_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Icon_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Icon_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Icon_InstanceSize").Call(obj)
	return int32(ret)
}

func Icon_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Icon_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Icon_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Icon_GetHashCode").Call(obj)
	return int32(ret)
}

func Icon_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Icon_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Icon_GetHandle(obj uintptr) HICON {
	ret, _, _ := getLazyProc("Icon_GetHandle").Call(obj)
	return HICON(ret)
}

func Icon_SetHandle(obj uintptr, value HICON) {
	getLazyProc("Icon_SetHandle").Call(obj, uintptr(value))
}

func Icon_GetEmpty(obj uintptr) bool {
	ret, _, _ := getLazyProc("Icon_GetEmpty").Call(obj)
	return DBoolToGoBool(ret)
}

func Icon_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Icon_GetHeight").Call(obj)
	return int32(ret)
}

func Icon_SetHeight(obj uintptr, value int32) {
	getLazyProc("Icon_SetHeight").Call(obj, uintptr(value))
}

func Icon_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Icon_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Icon_SetModified(obj uintptr, value bool) {
	getLazyProc("Icon_SetModified").Call(obj, GoBoolToDBool(value))
}

func Icon_GetPalette(obj uintptr) HPALETTE {
	ret, _, _ := getLazyProc("Icon_GetPalette").Call(obj)
	return HPALETTE(ret)
}

func Icon_SetPalette(obj uintptr, value HPALETTE) {
	getLazyProc("Icon_SetPalette").Call(obj, uintptr(value))
}

func Icon_GetPaletteModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Icon_GetPaletteModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Icon_SetPaletteModified(obj uintptr, value bool) {
	getLazyProc("Icon_SetPaletteModified").Call(obj, GoBoolToDBool(value))
}

func Icon_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Icon_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func Icon_SetTransparent(obj uintptr, value bool) {
	getLazyProc("Icon_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func Icon_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Icon_GetWidth").Call(obj)
	return int32(ret)
}

func Icon_SetWidth(obj uintptr, value int32) {
	getLazyProc("Icon_SetWidth").Call(obj, uintptr(value))
}

func Icon_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Icon_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Icon_StaticClassType() TClass {
	r, _, _ := getLazyProc("Icon_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TBitmap ---------------------------

func Bitmap_Create() uintptr {
	ret, _, _ := getLazyProc("Bitmap_Create").Call()
	return ret
}

func Bitmap_Free(obj uintptr) {
	getLazyProc("Bitmap_Free").Call(obj)
}

func Bitmap_LoadFromDevice(obj uintptr, ADc HDC) {
	getLazyProc("Bitmap_LoadFromDevice").Call(obj, uintptr(ADc))
}

func Bitmap_EndUpdate(obj uintptr, AStreamIsValid bool) {
	getLazyProc("Bitmap_EndUpdate").Call(obj, GoBoolToDBool(AStreamIsValid))
}

func Bitmap_BeginUpdate(obj uintptr, ACanvasOnly bool) {
	getLazyProc("Bitmap_BeginUpdate").Call(obj, GoBoolToDBool(ACanvasOnly))
}

func Bitmap_Clear(obj uintptr) {
	getLazyProc("Bitmap_Clear").Call(obj)
}

func Bitmap_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Bitmap_Assign").Call(obj, Source)
}

func Bitmap_FreeImage(obj uintptr) {
	getLazyProc("Bitmap_FreeImage").Call(obj)
}

func Bitmap_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bitmap_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Bitmap_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("Bitmap_LoadFromStream").Call(obj, Stream)
}

func Bitmap_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("Bitmap_SaveToStream").Call(obj, Stream)
}

func Bitmap_SetSize(obj uintptr, AWidth int32, AHeight int32) {
	getLazyProc("Bitmap_SetSize").Call(obj, uintptr(AWidth), uintptr(AHeight))
}

func Bitmap_LoadFromResourceName(obj uintptr, Instance uintptr, ResName string) {
	getLazyProc("Bitmap_LoadFromResourceName").Call(obj, Instance, GoStrToDStr(ResName))
}

func Bitmap_LoadFromResourceID(obj uintptr, Instance uintptr, ResID int32) {
	getLazyProc("Bitmap_LoadFromResourceID").Call(obj, Instance, uintptr(ResID))
}

func Bitmap_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Bitmap_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Bitmap_LoadFromFile(obj uintptr, Filename string) {
	getLazyProc("Bitmap_LoadFromFile").Call(obj, GoStrToDStr(Filename))
}

func Bitmap_SaveToFile(obj uintptr, Filename string) {
	getLazyProc("Bitmap_SaveToFile").Call(obj, GoStrToDStr(Filename))
}

func Bitmap_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Bitmap_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Bitmap_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Bitmap_ClassType").Call(obj)
	return TClass(ret)
}

func Bitmap_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Bitmap_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Bitmap_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bitmap_InstanceSize").Call(obj)
	return int32(ret)
}

func Bitmap_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Bitmap_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Bitmap_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bitmap_GetHashCode").Call(obj)
	return int32(ret)
}

func Bitmap_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Bitmap_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Bitmap_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bitmap_GetCanvas").Call(obj)
	return ret
}

func Bitmap_GetHandle(obj uintptr) HBITMAP {
	ret, _, _ := getLazyProc("Bitmap_GetHandle").Call(obj)
	return HBITMAP(ret)
}

func Bitmap_SetHandle(obj uintptr, value HBITMAP) {
	getLazyProc("Bitmap_SetHandle").Call(obj, uintptr(value))
}

func Bitmap_GetHandleType(obj uintptr) TBitmapHandleType {
	ret, _, _ := getLazyProc("Bitmap_GetHandleType").Call(obj)
	return TBitmapHandleType(ret)
}

func Bitmap_SetHandleType(obj uintptr, value TBitmapHandleType) {
	getLazyProc("Bitmap_SetHandleType").Call(obj, uintptr(value))
}

func Bitmap_GetMaskHandle(obj uintptr) HBITMAP {
	ret, _, _ := getLazyProc("Bitmap_GetMaskHandle").Call(obj)
	return HBITMAP(ret)
}

func Bitmap_SetMaskHandle(obj uintptr, value HBITMAP) {
	getLazyProc("Bitmap_SetMaskHandle").Call(obj, uintptr(value))
}

func Bitmap_GetPixelFormat(obj uintptr) TPixelFormat {
	ret, _, _ := getLazyProc("Bitmap_GetPixelFormat").Call(obj)
	return TPixelFormat(ret)
}

func Bitmap_SetPixelFormat(obj uintptr, value TPixelFormat) {
	getLazyProc("Bitmap_SetPixelFormat").Call(obj, uintptr(value))
}

func Bitmap_GetTransparentMode(obj uintptr) TTransparentMode {
	ret, _, _ := getLazyProc("Bitmap_GetTransparentMode").Call(obj)
	return TTransparentMode(ret)
}

func Bitmap_SetTransparentMode(obj uintptr, value TTransparentMode) {
	getLazyProc("Bitmap_SetTransparentMode").Call(obj, uintptr(value))
}

func Bitmap_GetEmpty(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bitmap_GetEmpty").Call(obj)
	return DBoolToGoBool(ret)
}

func Bitmap_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bitmap_GetHeight").Call(obj)
	return int32(ret)
}

func Bitmap_SetHeight(obj uintptr, value int32) {
	getLazyProc("Bitmap_SetHeight").Call(obj, uintptr(value))
}

func Bitmap_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bitmap_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Bitmap_SetModified(obj uintptr, value bool) {
	getLazyProc("Bitmap_SetModified").Call(obj, GoBoolToDBool(value))
}

func Bitmap_GetPalette(obj uintptr) HPALETTE {
	ret, _, _ := getLazyProc("Bitmap_GetPalette").Call(obj)
	return HPALETTE(ret)
}

func Bitmap_SetPalette(obj uintptr, value HPALETTE) {
	getLazyProc("Bitmap_SetPalette").Call(obj, uintptr(value))
}

func Bitmap_GetPaletteModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bitmap_GetPaletteModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Bitmap_SetPaletteModified(obj uintptr, value bool) {
	getLazyProc("Bitmap_SetPaletteModified").Call(obj, GoBoolToDBool(value))
}

func Bitmap_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bitmap_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func Bitmap_SetTransparent(obj uintptr, value bool) {
	getLazyProc("Bitmap_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func Bitmap_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bitmap_GetWidth").Call(obj)
	return int32(ret)
}

func Bitmap_SetWidth(obj uintptr, value int32) {
	getLazyProc("Bitmap_SetWidth").Call(obj, uintptr(value))
}

func Bitmap_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Bitmap_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Bitmap_GetScanLine(obj uintptr, Row int32) uintptr {
	ret, _, _ := getLazyProc("Bitmap_GetScanLine").Call(obj, uintptr(Row))
	return ret
}

func Bitmap_StaticClassType() TClass {
	r, _, _ := getLazyProc("Bitmap_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMemoryStream ---------------------------

func MemoryStream_Create() uintptr {
	ret, _, _ := getLazyProc("MemoryStream_Create").Call()
	return ret
}

func MemoryStream_Free(obj uintptr) {
	getLazyProc("MemoryStream_Free").Call(obj)
}

func MemoryStream_Clear(obj uintptr) {
	getLazyProc("MemoryStream_Clear").Call(obj)
}

func MemoryStream_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("MemoryStream_LoadFromStream").Call(obj, Stream)
}

func MemoryStream_LoadFromFile(obj uintptr, FileName string) {
	getLazyProc("MemoryStream_LoadFromFile").Call(obj, GoStrToDStr(FileName))
}

func MemoryStream_Seek(obj uintptr, Offset int64, Origin TSeekOrigin) int64 {
	var ret int64
	getLazyProc("MemoryStream_Seek").Call(obj, uintptr(unsafe.Pointer(&Offset)), uintptr(Origin), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MemoryStream_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("MemoryStream_SaveToStream").Call(obj, Stream)
}

func MemoryStream_SaveToFile(obj uintptr, FileName string) {
	getLazyProc("MemoryStream_SaveToFile").Call(obj, GoStrToDStr(FileName))
}

func MemoryStream_CopyFrom(obj uintptr, Source uintptr, Count int64) int64 {
	var ret int64
	getLazyProc("MemoryStream_CopyFrom").Call(obj, Source, uintptr(unsafe.Pointer(&Count)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MemoryStream_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("MemoryStream_ClassType").Call(obj)
	return TClass(ret)
}

func MemoryStream_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("MemoryStream_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func MemoryStream_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MemoryStream_InstanceSize").Call(obj)
	return int32(ret)
}

func MemoryStream_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("MemoryStream_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func MemoryStream_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("MemoryStream_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func MemoryStream_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MemoryStream_GetHashCode").Call(obj)
	return int32(ret)
}

func MemoryStream_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("MemoryStream_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func MemoryStream_GetMemory(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MemoryStream_GetMemory").Call(obj)
	return ret
}

func MemoryStream_GetPosition(obj uintptr) int64 {
	var ret int64
	getLazyProc("MemoryStream_GetPosition").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MemoryStream_SetPosition(obj uintptr, value int64) {
	getLazyProc("MemoryStream_SetPosition").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MemoryStream_GetSize(obj uintptr) int64 {
	var ret int64
	getLazyProc("MemoryStream_GetSize").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MemoryStream_SetSize(obj uintptr, value int64) {
	getLazyProc("MemoryStream_SetSize").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MemoryStream_StaticClassType() TClass {
	r, _, _ := getLazyProc("MemoryStream_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TFont ---------------------------

func Font_Create() uintptr {
	ret, _, _ := getLazyProc("Font_Create").Call()
	return ret
}

func Font_Free(obj uintptr) {
	getLazyProc("Font_Free").Call(obj)
}

func Font_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Font_Assign").Call(obj, Source)
}

func Font_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Font_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Font_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Font_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Font_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Font_ClassType").Call(obj)
	return TClass(ret)
}

func Font_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Font_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Font_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Font_InstanceSize").Call(obj)
	return int32(ret)
}

func Font_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Font_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Font_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Font_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Font_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Font_GetHashCode").Call(obj)
	return int32(ret)
}

func Font_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Font_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Font_GetHandle(obj uintptr) HFONT {
	ret, _, _ := getLazyProc("Font_GetHandle").Call(obj)
	return HFONT(ret)
}

func Font_SetHandle(obj uintptr, value HFONT) {
	getLazyProc("Font_SetHandle").Call(obj, uintptr(value))
}

func Font_GetPixelsPerInch(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Font_GetPixelsPerInch").Call(obj)
	return int32(ret)
}

func Font_SetPixelsPerInch(obj uintptr, value int32) {
	getLazyProc("Font_SetPixelsPerInch").Call(obj, uintptr(value))
}

func Font_GetCharset(obj uintptr) TFontCharset {
	ret, _, _ := getLazyProc("Font_GetCharset").Call(obj)
	return TFontCharset(ret)
}

func Font_SetCharset(obj uintptr, value TFontCharset) {
	getLazyProc("Font_SetCharset").Call(obj, uintptr(value))
}

func Font_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Font_GetColor").Call(obj)
	return TColor(ret)
}

func Font_SetColor(obj uintptr, value TColor) {
	getLazyProc("Font_SetColor").Call(obj, uintptr(value))
}

func Font_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Font_GetHeight").Call(obj)
	return int32(ret)
}

func Font_SetHeight(obj uintptr, value int32) {
	getLazyProc("Font_SetHeight").Call(obj, uintptr(value))
}

func Font_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Font_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Font_SetName(obj uintptr, value string) {
	getLazyProc("Font_SetName").Call(obj, GoStrToDStr(value))
}

func Font_GetOrientation(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Font_GetOrientation").Call(obj)
	return int32(ret)
}

func Font_SetOrientation(obj uintptr, value int32) {
	getLazyProc("Font_SetOrientation").Call(obj, uintptr(value))
}

func Font_GetPitch(obj uintptr) TFontPitch {
	ret, _, _ := getLazyProc("Font_GetPitch").Call(obj)
	return TFontPitch(ret)
}

func Font_SetPitch(obj uintptr, value TFontPitch) {
	getLazyProc("Font_SetPitch").Call(obj, uintptr(value))
}

func Font_GetSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Font_GetSize").Call(obj)
	return int32(ret)
}

func Font_SetSize(obj uintptr, value int32) {
	getLazyProc("Font_SetSize").Call(obj, uintptr(value))
}

func Font_GetStyle(obj uintptr) TFontStyles {
	ret, _, _ := getLazyProc("Font_GetStyle").Call(obj)
	return TFontStyles(ret)
}

func Font_SetStyle(obj uintptr, value TFontStyles) {
	getLazyProc("Font_SetStyle").Call(obj, uintptr(value))
}

func Font_GetQuality(obj uintptr) TFontQuality {
	ret, _, _ := getLazyProc("Font_GetQuality").Call(obj)
	return TFontQuality(ret)
}

func Font_SetQuality(obj uintptr, value TFontQuality) {
	getLazyProc("Font_SetQuality").Call(obj, uintptr(value))
}

func Font_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Font_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Font_StaticClassType() TClass {
	r, _, _ := getLazyProc("Font_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TStrings ---------------------------

func Strings_Create() uintptr {
	ret, _, _ := getLazyProc("Strings_Create").Call()
	return ret
}

func Strings_Free(obj uintptr) {
	getLazyProc("Strings_Free").Call(obj)
}

func Strings_Add(obj uintptr, S string) int32 {
	ret, _, _ := getLazyProc("Strings_Add").Call(obj, GoStrToDStr(S))
	return int32(ret)
}

func Strings_AddObject(obj uintptr, S string, AObject uintptr) int32 {
	ret, _, _ := getLazyProc("Strings_AddObject").Call(obj, GoStrToDStr(S), AObject)
	return int32(ret)
}

func Strings_Append(obj uintptr, S string) {
	getLazyProc("Strings_Append").Call(obj, GoStrToDStr(S))
}

func Strings_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Strings_Assign").Call(obj, Source)
}

func Strings_BeginUpdate(obj uintptr) {
	getLazyProc("Strings_BeginUpdate").Call(obj)
}

func Strings_Clear(obj uintptr) {
	getLazyProc("Strings_Clear").Call(obj)
}

func Strings_Delete(obj uintptr, Index int32) {
	getLazyProc("Strings_Delete").Call(obj, uintptr(Index))
}

func Strings_EndUpdate(obj uintptr) {
	getLazyProc("Strings_EndUpdate").Call(obj)
}

func Strings_Equals(obj uintptr, Strings uintptr) bool {
	ret, _, _ := getLazyProc("Strings_Equals").Call(obj, Strings)
	return DBoolToGoBool(ret)
}

func Strings_IndexOf(obj uintptr, S string) int32 {
	ret, _, _ := getLazyProc("Strings_IndexOf").Call(obj, GoStrToDStr(S))
	return int32(ret)
}

func Strings_IndexOfName(obj uintptr, Name string) int32 {
	ret, _, _ := getLazyProc("Strings_IndexOfName").Call(obj, GoStrToDStr(Name))
	return int32(ret)
}

func Strings_IndexOfObject(obj uintptr, AObject uintptr) int32 {
	ret, _, _ := getLazyProc("Strings_IndexOfObject").Call(obj, AObject)
	return int32(ret)
}

func Strings_Insert(obj uintptr, Index int32, S string) {
	getLazyProc("Strings_Insert").Call(obj, uintptr(Index), GoStrToDStr(S))
}

func Strings_InsertObject(obj uintptr, Index int32, S string, AObject uintptr) {
	getLazyProc("Strings_InsertObject").Call(obj, uintptr(Index), GoStrToDStr(S), AObject)
}

func Strings_LoadFromFile(obj uintptr, FileName string) {
	getLazyProc("Strings_LoadFromFile").Call(obj, GoStrToDStr(FileName))
}

func Strings_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("Strings_LoadFromStream").Call(obj, Stream)
}

func Strings_Move(obj uintptr, CurIndex int32, NewIndex int32) {
	getLazyProc("Strings_Move").Call(obj, uintptr(CurIndex), uintptr(NewIndex))
}

func Strings_SaveToFile(obj uintptr, FileName string) {
	getLazyProc("Strings_SaveToFile").Call(obj, GoStrToDStr(FileName))
}

func Strings_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("Strings_SaveToStream").Call(obj, Stream)
}

func Strings_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Strings_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Strings_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Strings_ClassType").Call(obj)
	return TClass(ret)
}

func Strings_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Strings_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Strings_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Strings_InstanceSize").Call(obj)
	return int32(ret)
}

func Strings_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Strings_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Strings_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Strings_GetHashCode").Call(obj)
	return int32(ret)
}

func Strings_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Strings_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Strings_GetCapacity(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Strings_GetCapacity").Call(obj)
	return int32(ret)
}

func Strings_SetCapacity(obj uintptr, value int32) {
	getLazyProc("Strings_SetCapacity").Call(obj, uintptr(value))
}

func Strings_GetCommaText(obj uintptr) string {
	ret, _, _ := getLazyProc("Strings_GetCommaText").Call(obj)
	return DStrToGoStr(ret)
}

func Strings_SetCommaText(obj uintptr, value string) {
	getLazyProc("Strings_SetCommaText").Call(obj, GoStrToDStr(value))
}

func Strings_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Strings_GetCount").Call(obj)
	return int32(ret)
}

func Strings_GetDelimiter(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("Strings_GetDelimiter").Call(obj)
	return uint16(ret)
}

func Strings_SetDelimiter(obj uintptr, value uint16) {
	getLazyProc("Strings_SetDelimiter").Call(obj, uintptr(value))
}

func Strings_GetNameValueSeparator(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("Strings_GetNameValueSeparator").Call(obj)
	return uint16(ret)
}

func Strings_SetNameValueSeparator(obj uintptr, value uint16) {
	getLazyProc("Strings_SetNameValueSeparator").Call(obj, uintptr(value))
}

func Strings_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("Strings_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func Strings_SetText(obj uintptr, value string) {
	getLazyProc("Strings_SetText").Call(obj, GoStrToDStr(value))
}

func Strings_GetObjects(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Strings_GetObjects").Call(obj, uintptr(Index))
	return ret
}

func Strings_SetObjects(obj uintptr, Index int32, value uintptr) {
	getLazyProc("Strings_SetObjects").Call(obj, uintptr(Index), value)
}

func Strings_GetValues(obj uintptr, Name string) string {
	ret, _, _ := getLazyProc("Strings_GetValues").Call(obj, GoStrToDStr(Name))
	return DStrToGoStr(ret)
}

func Strings_SetValues(obj uintptr, Name string, value string) {
	getLazyProc("Strings_SetValues").Call(obj, GoStrToDStr(Name), GoStrToDStr(value))
}

func Strings_GetValueFromIndex(obj uintptr, Index int32) string {
	ret, _, _ := getLazyProc("Strings_GetValueFromIndex").Call(obj, uintptr(Index))
	return DStrToGoStr(ret)
}

func Strings_SetValueFromIndex(obj uintptr, Index int32, value string) {
	getLazyProc("Strings_SetValueFromIndex").Call(obj, uintptr(Index), GoStrToDStr(value))
}

func Strings_GetStrings(obj uintptr, Index int32) string {
	ret, _, _ := getLazyProc("Strings_GetStrings").Call(obj, uintptr(Index))
	return DStrToGoStr(ret)
}

func Strings_SetStrings(obj uintptr, Index int32, value string) {
	getLazyProc("Strings_SetStrings").Call(obj, uintptr(Index), GoStrToDStr(value))
}

func Strings_StaticClassType() TClass {
	r, _, _ := getLazyProc("Strings_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TStringList ---------------------------

func StringList_Create() uintptr {
	ret, _, _ := getLazyProc("StringList_Create").Call()
	return ret
}

func StringList_Free(obj uintptr) {
	getLazyProc("StringList_Free").Call(obj)
}

func StringList_Add(obj uintptr, S string) int32 {
	ret, _, _ := getLazyProc("StringList_Add").Call(obj, GoStrToDStr(S))
	return int32(ret)
}

func StringList_AddObject(obj uintptr, S string, AObject uintptr) int32 {
	ret, _, _ := getLazyProc("StringList_AddObject").Call(obj, GoStrToDStr(S), AObject)
	return int32(ret)
}

func StringList_Assign(obj uintptr, Source uintptr) {
	getLazyProc("StringList_Assign").Call(obj, Source)
}

func StringList_Clear(obj uintptr) {
	getLazyProc("StringList_Clear").Call(obj)
}

func StringList_Delete(obj uintptr, Index int32) {
	getLazyProc("StringList_Delete").Call(obj, uintptr(Index))
}

func StringList_IndexOf(obj uintptr, S string) int32 {
	ret, _, _ := getLazyProc("StringList_IndexOf").Call(obj, GoStrToDStr(S))
	return int32(ret)
}

func StringList_Insert(obj uintptr, Index int32, S string) {
	getLazyProc("StringList_Insert").Call(obj, uintptr(Index), GoStrToDStr(S))
}

func StringList_InsertObject(obj uintptr, Index int32, S string, AObject uintptr) {
	getLazyProc("StringList_InsertObject").Call(obj, uintptr(Index), GoStrToDStr(S), AObject)
}

func StringList_Append(obj uintptr, S string) {
	getLazyProc("StringList_Append").Call(obj, GoStrToDStr(S))
}

func StringList_BeginUpdate(obj uintptr) {
	getLazyProc("StringList_BeginUpdate").Call(obj)
}

func StringList_EndUpdate(obj uintptr) {
	getLazyProc("StringList_EndUpdate").Call(obj)
}

func StringList_Equals(obj uintptr, Strings uintptr) bool {
	ret, _, _ := getLazyProc("StringList_Equals").Call(obj, Strings)
	return DBoolToGoBool(ret)
}

func StringList_IndexOfName(obj uintptr, Name string) int32 {
	ret, _, _ := getLazyProc("StringList_IndexOfName").Call(obj, GoStrToDStr(Name))
	return int32(ret)
}

func StringList_IndexOfObject(obj uintptr, AObject uintptr) int32 {
	ret, _, _ := getLazyProc("StringList_IndexOfObject").Call(obj, AObject)
	return int32(ret)
}

func StringList_LoadFromFile(obj uintptr, FileName string) {
	getLazyProc("StringList_LoadFromFile").Call(obj, GoStrToDStr(FileName))
}

func StringList_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("StringList_LoadFromStream").Call(obj, Stream)
}

func StringList_Move(obj uintptr, CurIndex int32, NewIndex int32) {
	getLazyProc("StringList_Move").Call(obj, uintptr(CurIndex), uintptr(NewIndex))
}

func StringList_SaveToFile(obj uintptr, FileName string) {
	getLazyProc("StringList_SaveToFile").Call(obj, GoStrToDStr(FileName))
}

func StringList_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("StringList_SaveToStream").Call(obj, Stream)
}

func StringList_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("StringList_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func StringList_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("StringList_ClassType").Call(obj)
	return TClass(ret)
}

func StringList_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("StringList_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func StringList_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringList_InstanceSize").Call(obj)
	return int32(ret)
}

func StringList_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("StringList_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func StringList_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringList_GetHashCode").Call(obj)
	return int32(ret)
}

func StringList_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("StringList_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func StringList_GetSorted(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringList_GetSorted").Call(obj)
	return DBoolToGoBool(ret)
}

func StringList_SetSorted(obj uintptr, value bool) {
	getLazyProc("StringList_SetSorted").Call(obj, GoBoolToDBool(value))
}

func StringList_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("StringList_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func StringList_SetOnChanging(obj uintptr, fn interface{}) {
	getLazyProc("StringList_SetOnChanging").Call(obj, addEventToMap(obj, fn))
}

func StringList_GetCapacity(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringList_GetCapacity").Call(obj)
	return int32(ret)
}

func StringList_SetCapacity(obj uintptr, value int32) {
	getLazyProc("StringList_SetCapacity").Call(obj, uintptr(value))
}

func StringList_GetCommaText(obj uintptr) string {
	ret, _, _ := getLazyProc("StringList_GetCommaText").Call(obj)
	return DStrToGoStr(ret)
}

func StringList_SetCommaText(obj uintptr, value string) {
	getLazyProc("StringList_SetCommaText").Call(obj, GoStrToDStr(value))
}

func StringList_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringList_GetCount").Call(obj)
	return int32(ret)
}

func StringList_GetDelimiter(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("StringList_GetDelimiter").Call(obj)
	return uint16(ret)
}

func StringList_SetDelimiter(obj uintptr, value uint16) {
	getLazyProc("StringList_SetDelimiter").Call(obj, uintptr(value))
}

func StringList_GetNameValueSeparator(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("StringList_GetNameValueSeparator").Call(obj)
	return uint16(ret)
}

func StringList_SetNameValueSeparator(obj uintptr, value uint16) {
	getLazyProc("StringList_SetNameValueSeparator").Call(obj, uintptr(value))
}

func StringList_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("StringList_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func StringList_SetText(obj uintptr, value string) {
	getLazyProc("StringList_SetText").Call(obj, GoStrToDStr(value))
}

func StringList_GetObjects(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StringList_GetObjects").Call(obj, uintptr(Index))
	return ret
}

func StringList_SetObjects(obj uintptr, Index int32, value uintptr) {
	getLazyProc("StringList_SetObjects").Call(obj, uintptr(Index), value)
}

func StringList_GetValues(obj uintptr, Name string) string {
	ret, _, _ := getLazyProc("StringList_GetValues").Call(obj, GoStrToDStr(Name))
	return DStrToGoStr(ret)
}

func StringList_SetValues(obj uintptr, Name string, value string) {
	getLazyProc("StringList_SetValues").Call(obj, GoStrToDStr(Name), GoStrToDStr(value))
}

func StringList_GetValueFromIndex(obj uintptr, Index int32) string {
	ret, _, _ := getLazyProc("StringList_GetValueFromIndex").Call(obj, uintptr(Index))
	return DStrToGoStr(ret)
}

func StringList_SetValueFromIndex(obj uintptr, Index int32, value string) {
	getLazyProc("StringList_SetValueFromIndex").Call(obj, uintptr(Index), GoStrToDStr(value))
}

func StringList_GetStrings(obj uintptr, Index int32) string {
	ret, _, _ := getLazyProc("StringList_GetStrings").Call(obj, uintptr(Index))
	return DStrToGoStr(ret)
}

func StringList_SetStrings(obj uintptr, Index int32, value string) {
	getLazyProc("StringList_SetStrings").Call(obj, uintptr(Index), GoStrToDStr(value))
}

func StringList_StaticClassType() TClass {
	r, _, _ := getLazyProc("StringList_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TBrush ---------------------------

func Brush_Create() uintptr {
	ret, _, _ := getLazyProc("Brush_Create").Call()
	return ret
}

func Brush_Free(obj uintptr) {
	getLazyProc("Brush_Free").Call(obj)
}

func Brush_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Brush_Assign").Call(obj, Source)
}

func Brush_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Brush_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Brush_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Brush_ClassType").Call(obj)
	return TClass(ret)
}

func Brush_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Brush_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Brush_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Brush_InstanceSize").Call(obj)
	return int32(ret)
}

func Brush_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Brush_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Brush_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Brush_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Brush_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Brush_GetHashCode").Call(obj)
	return int32(ret)
}

func Brush_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Brush_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Brush_GetBitmap(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Brush_GetBitmap").Call(obj)
	return ret
}

func Brush_SetBitmap(obj uintptr, value uintptr) {
	getLazyProc("Brush_SetBitmap").Call(obj, value)
}

func Brush_GetHandle(obj uintptr) HBRUSH {
	ret, _, _ := getLazyProc("Brush_GetHandle").Call(obj)
	return HBRUSH(ret)
}

func Brush_SetHandle(obj uintptr, value HBRUSH) {
	getLazyProc("Brush_SetHandle").Call(obj, uintptr(value))
}

func Brush_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Brush_GetColor").Call(obj)
	return TColor(ret)
}

func Brush_SetColor(obj uintptr, value TColor) {
	getLazyProc("Brush_SetColor").Call(obj, uintptr(value))
}

func Brush_GetStyle(obj uintptr) TBrushStyle {
	ret, _, _ := getLazyProc("Brush_GetStyle").Call(obj)
	return TBrushStyle(ret)
}

func Brush_SetStyle(obj uintptr, value TBrushStyle) {
	getLazyProc("Brush_SetStyle").Call(obj, uintptr(value))
}

func Brush_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Brush_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Brush_StaticClassType() TClass {
	r, _, _ := getLazyProc("Brush_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPen ---------------------------

func Pen_Create() uintptr {
	ret, _, _ := getLazyProc("Pen_Create").Call()
	return ret
}

func Pen_Free(obj uintptr) {
	getLazyProc("Pen_Free").Call(obj)
}

func Pen_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Pen_Assign").Call(obj, Source)
}

func Pen_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Pen_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Pen_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Pen_ClassType").Call(obj)
	return TClass(ret)
}

func Pen_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Pen_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Pen_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Pen_InstanceSize").Call(obj)
	return int32(ret)
}

func Pen_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Pen_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Pen_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Pen_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Pen_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Pen_GetHashCode").Call(obj)
	return int32(ret)
}

func Pen_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Pen_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Pen_GetHandle(obj uintptr) HPEN {
	ret, _, _ := getLazyProc("Pen_GetHandle").Call(obj)
	return HPEN(ret)
}

func Pen_SetHandle(obj uintptr, value HPEN) {
	getLazyProc("Pen_SetHandle").Call(obj, uintptr(value))
}

func Pen_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Pen_GetColor").Call(obj)
	return TColor(ret)
}

func Pen_SetColor(obj uintptr, value TColor) {
	getLazyProc("Pen_SetColor").Call(obj, uintptr(value))
}

func Pen_GetMode(obj uintptr) TPenMode {
	ret, _, _ := getLazyProc("Pen_GetMode").Call(obj)
	return TPenMode(ret)
}

func Pen_SetMode(obj uintptr, value TPenMode) {
	getLazyProc("Pen_SetMode").Call(obj, uintptr(value))
}

func Pen_GetStyle(obj uintptr) TPenStyle {
	ret, _, _ := getLazyProc("Pen_GetStyle").Call(obj)
	return TPenStyle(ret)
}

func Pen_SetStyle(obj uintptr, value TPenStyle) {
	getLazyProc("Pen_SetStyle").Call(obj, uintptr(value))
}

func Pen_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Pen_GetWidth").Call(obj)
	return int32(ret)
}

func Pen_SetWidth(obj uintptr, value int32) {
	getLazyProc("Pen_SetWidth").Call(obj, uintptr(value))
}

func Pen_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Pen_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Pen_StaticClassType() TClass {
	r, _, _ := getLazyProc("Pen_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMenuItem ---------------------------

func MenuItem_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MenuItem_Create").Call(obj)
	return ret
}

func MenuItem_Free(obj uintptr) {
	getLazyProc("MenuItem_Free").Call(obj)
}

func MenuItem_Insert(obj uintptr, Index int32, Item uintptr) {
	getLazyProc("MenuItem_Insert").Call(obj, uintptr(Index), Item)
}

func MenuItem_Delete(obj uintptr, Index int32) {
	getLazyProc("MenuItem_Delete").Call(obj, uintptr(Index))
}

func MenuItem_Clear(obj uintptr) {
	getLazyProc("MenuItem_Clear").Call(obj)
}

func MenuItem_Click(obj uintptr) {
	getLazyProc("MenuItem_Click").Call(obj)
}

func MenuItem_IndexOf(obj uintptr, Item uintptr) int32 {
	ret, _, _ := getLazyProc("MenuItem_IndexOf").Call(obj, Item)
	return int32(ret)
}

func MenuItem_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func MenuItem_Add(obj uintptr, Item uintptr) {
	getLazyProc("MenuItem_Add").Call(obj, Item)
}

func MenuItem_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("MenuItem_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func MenuItem_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("MenuItem_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func MenuItem_Assign(obj uintptr, Source uintptr) {
	getLazyProc("MenuItem_Assign").Call(obj, Source)
}

func MenuItem_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("MenuItem_ClassType").Call(obj)
	return TClass(ret)
}

func MenuItem_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("MenuItem_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func MenuItem_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MenuItem_InstanceSize").Call(obj)
	return int32(ret)
}

func MenuItem_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("MenuItem_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func MenuItem_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func MenuItem_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MenuItem_GetHashCode").Call(obj)
	return int32(ret)
}

func MenuItem_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("MenuItem_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func MenuItem_GetHandle(obj uintptr) HMENU {
	ret, _, _ := getLazyProc("MenuItem_GetHandle").Call(obj)
	return HMENU(ret)
}

func MenuItem_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MenuItem_GetCount").Call(obj)
	return int32(ret)
}

func MenuItem_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MenuItem_GetParent").Call(obj)
	return ret
}

func MenuItem_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MenuItem_GetAction").Call(obj)
	return ret
}

func MenuItem_SetAction(obj uintptr, value uintptr) {
	getLazyProc("MenuItem_SetAction").Call(obj, value)
}

func MenuItem_GetAutoCheck(obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_GetAutoCheck").Call(obj)
	return DBoolToGoBool(ret)
}

func MenuItem_SetAutoCheck(obj uintptr, value bool) {
	getLazyProc("MenuItem_SetAutoCheck").Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetBitmap(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MenuItem_GetBitmap").Call(obj)
	return ret
}

func MenuItem_SetBitmap(obj uintptr, value uintptr) {
	getLazyProc("MenuItem_SetBitmap").Call(obj, value)
}

func MenuItem_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("MenuItem_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func MenuItem_SetCaption(obj uintptr, value string) {
	getLazyProc("MenuItem_SetCaption").Call(obj, GoStrToDStr(value))
}

func MenuItem_GetChecked(obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_GetChecked").Call(obj)
	return DBoolToGoBool(ret)
}

func MenuItem_SetChecked(obj uintptr, value bool) {
	getLazyProc("MenuItem_SetChecked").Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_GetDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func MenuItem_SetDefault(obj uintptr, value bool) {
	getLazyProc("MenuItem_SetDefault").Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func MenuItem_SetEnabled(obj uintptr, value bool) {
	getLazyProc("MenuItem_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetGroupIndex(obj uintptr) uint8 {
	ret, _, _ := getLazyProc("MenuItem_GetGroupIndex").Call(obj)
	return uint8(ret)
}

func MenuItem_SetGroupIndex(obj uintptr, value uint8) {
	getLazyProc("MenuItem_SetGroupIndex").Call(obj, uintptr(value))
}

func MenuItem_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("MenuItem_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func MenuItem_SetHint(obj uintptr, value string) {
	getLazyProc("MenuItem_SetHint").Call(obj, GoStrToDStr(value))
}

func MenuItem_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MenuItem_GetImageIndex").Call(obj)
	return int32(ret)
}

func MenuItem_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("MenuItem_SetImageIndex").Call(obj, uintptr(value))
}

func MenuItem_GetRadioItem(obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_GetRadioItem").Call(obj)
	return DBoolToGoBool(ret)
}

func MenuItem_SetRadioItem(obj uintptr, value bool) {
	getLazyProc("MenuItem_SetRadioItem").Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetShortCut(obj uintptr) TShortCut {
	ret, _, _ := getLazyProc("MenuItem_GetShortCut").Call(obj)
	return TShortCut(ret)
}

func MenuItem_SetShortCut(obj uintptr, value TShortCut) {
	getLazyProc("MenuItem_SetShortCut").Call(obj, uintptr(value))
}

func MenuItem_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("MenuItem_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func MenuItem_SetVisible(obj uintptr, value bool) {
	getLazyProc("MenuItem_SetVisible").Call(obj, GoBoolToDBool(value))
}

func MenuItem_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("MenuItem_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func MenuItem_SetOnMeasureItem(obj uintptr, fn interface{}) {
	getLazyProc("MenuItem_SetOnMeasureItem").Call(obj, addEventToMap(obj, fn))
}

func MenuItem_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MenuItem_GetComponentCount").Call(obj)
	return int32(ret)
}

func MenuItem_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MenuItem_GetComponentIndex").Call(obj)
	return int32(ret)
}

func MenuItem_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("MenuItem_SetComponentIndex").Call(obj, uintptr(value))
}

func MenuItem_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MenuItem_GetOwner").Call(obj)
	return ret
}

func MenuItem_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("MenuItem_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func MenuItem_SetName(obj uintptr, value string) {
	getLazyProc("MenuItem_SetName").Call(obj, GoStrToDStr(value))
}

func MenuItem_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("MenuItem_GetTag").Call(obj)
	return int(ret)
}

func MenuItem_SetTag(obj uintptr, value int) {
	getLazyProc("MenuItem_SetTag").Call(obj, uintptr(value))
}

func MenuItem_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("MenuItem_GetItems").Call(obj, uintptr(Index))
	return ret
}

func MenuItem_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("MenuItem_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func MenuItem_StaticClassType() TClass {
	r, _, _ := getLazyProc("MenuItem_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPicture ---------------------------

func Picture_Create() uintptr {
	ret, _, _ := getLazyProc("Picture_Create").Call()
	return ret
}

func Picture_Free(obj uintptr) {
	getLazyProc("Picture_Free").Call(obj)
}

func Picture_LoadFromFile(obj uintptr, Filename string) {
	getLazyProc("Picture_LoadFromFile").Call(obj, GoStrToDStr(Filename))
}

func Picture_SaveToFile(obj uintptr, Filename string) {
	getLazyProc("Picture_SaveToFile").Call(obj, GoStrToDStr(Filename))
}

func Picture_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("Picture_LoadFromStream").Call(obj, Stream)
}

func Picture_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("Picture_SaveToStream").Call(obj, Stream)
}

func Picture_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Picture_Assign").Call(obj, Source)
}

func Picture_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Picture_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Picture_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Picture_ClassType").Call(obj)
	return TClass(ret)
}

func Picture_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Picture_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Picture_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Picture_InstanceSize").Call(obj)
	return int32(ret)
}

func Picture_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Picture_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Picture_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Picture_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Picture_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Picture_GetHashCode").Call(obj)
	return int32(ret)
}

func Picture_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Picture_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Picture_GetBitmap(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Picture_GetBitmap").Call(obj)
	return ret
}

func Picture_SetBitmap(obj uintptr, value uintptr) {
	getLazyProc("Picture_SetBitmap").Call(obj, value)
}

func Picture_GetGraphic(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Picture_GetGraphic").Call(obj)
	return ret
}

func Picture_SetGraphic(obj uintptr, value uintptr) {
	getLazyProc("Picture_SetGraphic").Call(obj, value)
}

func Picture_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Picture_GetHeight").Call(obj)
	return int32(ret)
}

func Picture_GetIcon(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Picture_GetIcon").Call(obj)
	return ret
}

func Picture_SetIcon(obj uintptr, value uintptr) {
	getLazyProc("Picture_SetIcon").Call(obj, value)
}

func Picture_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Picture_GetWidth").Call(obj)
	return int32(ret)
}

func Picture_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Picture_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Picture_StaticClassType() TClass {
	r, _, _ := getLazyProc("Picture_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TListColumns ---------------------------

func ListColumns_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListColumns_Create").Call(obj)
	return ret
}

func ListColumns_Free(obj uintptr) {
	getLazyProc("ListColumns_Free").Call(obj)
}

func ListColumns_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListColumns_Add").Call(obj)
	return ret
}

func ListColumns_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListColumns_Owner").Call(obj)
	return ret
}

func ListColumns_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ListColumns_Assign").Call(obj, Source)
}

func ListColumns_BeginUpdate(obj uintptr) {
	getLazyProc("ListColumns_BeginUpdate").Call(obj)
}

func ListColumns_Clear(obj uintptr) {
	getLazyProc("ListColumns_Clear").Call(obj)
}

func ListColumns_Delete(obj uintptr, Index int32) {
	getLazyProc("ListColumns_Delete").Call(obj, uintptr(Index))
}

func ListColumns_EndUpdate(obj uintptr) {
	getLazyProc("ListColumns_EndUpdate").Call(obj)
}

func ListColumns_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("ListColumns_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func ListColumns_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumns_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumns_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListColumns_Insert").Call(obj, uintptr(Index))
	return ret
}

func ListColumns_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ListColumns_ClassType").Call(obj)
	return TClass(ret)
}

func ListColumns_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumns_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumns_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumns_InstanceSize").Call(obj)
	return int32(ret)
}

func ListColumns_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ListColumns_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ListColumns_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ListColumns_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ListColumns_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumns_GetHashCode").Call(obj)
	return int32(ret)
}

func ListColumns_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumns_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumns_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumns_GetCount").Call(obj)
	return int32(ret)
}

func ListColumns_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListColumns_GetItems").Call(obj, uintptr(Index))
	return ret
}

func ListColumns_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("ListColumns_SetItems").Call(obj, uintptr(Index), value)
}

func ListColumns_StaticClassType() TClass {
	r, _, _ := getLazyProc("ListColumns_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TListItems ---------------------------

func ListItems_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListItems_Create").Call(obj)
	return ret
}

func ListItems_Free(obj uintptr) {
	getLazyProc("ListItems_Free").Call(obj)
}

func ListItems_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListItems_Add").Call(obj)
	return ret
}

func ListItems_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ListItems_Assign").Call(obj, Source)
}

func ListItems_BeginUpdate(obj uintptr) {
	getLazyProc("ListItems_BeginUpdate").Call(obj)
}

func ListItems_Clear(obj uintptr) {
	getLazyProc("ListItems_Clear").Call(obj)
}

func ListItems_Delete(obj uintptr, Index int32) {
	getLazyProc("ListItems_Delete").Call(obj, uintptr(Index))
}

func ListItems_EndUpdate(obj uintptr) {
	getLazyProc("ListItems_EndUpdate").Call(obj)
}

func ListItems_IndexOf(obj uintptr, Value uintptr) int32 {
	ret, _, _ := getLazyProc("ListItems_IndexOf").Call(obj, Value)
	return int32(ret)
}

func ListItems_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListItems_Insert").Call(obj, uintptr(Index))
	return ret
}

func ListItems_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ListItems_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ListItems_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ListItems_ClassType").Call(obj)
	return TClass(ret)
}

func ListItems_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListItems_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ListItems_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItems_InstanceSize").Call(obj)
	return int32(ret)
}

func ListItems_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ListItems_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ListItems_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItems_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ListItems_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItems_GetHashCode").Call(obj)
	return int32(ret)
}

func ListItems_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ListItems_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ListItems_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItems_GetCount").Call(obj)
	return int32(ret)
}

func ListItems_SetCount(obj uintptr, value int32) {
	getLazyProc("ListItems_SetCount").Call(obj, uintptr(value))
}

func ListItems_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListItems_GetOwner").Call(obj)
	return ret
}

func ListItems_GetItem(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ListItems_GetItem").Call(obj, uintptr(Index))
	return ret
}

func ListItems_SetItem(obj uintptr, Index int32, value uintptr) {
	getLazyProc("ListItems_SetItem").Call(obj, uintptr(Index), value)
}

func ListItems_StaticClassType() TClass {
	r, _, _ := getLazyProc("ListItems_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTreeNodes ---------------------------

func TreeNodes_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_Create").Call(obj)
	return ret
}

func TreeNodes_Free(obj uintptr) {
	getLazyProc("TreeNodes_Free").Call(obj)
}

func TreeNodes_AddChildFirst(obj uintptr, Parent uintptr, S string) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddChildFirst").Call(obj, Parent, GoStrToDStr(S))
	return ret
}

func TreeNodes_AddChild(obj uintptr, Parent uintptr, S string) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddChild").Call(obj, Parent, GoStrToDStr(S))
	return ret
}

func TreeNodes_AddChildObjectFirst(obj uintptr, Parent uintptr, S string, Ptr uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddChildObjectFirst").Call(obj, Parent, GoStrToDStr(S), Ptr)
	return ret
}

func TreeNodes_AddChildObject(obj uintptr, Parent uintptr, S string, Ptr uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddChildObject").Call(obj, Parent, GoStrToDStr(S), Ptr)
	return ret
}

func TreeNodes_AddObjectFirst(obj uintptr, Sibling uintptr, S string, Ptr uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddObjectFirst").Call(obj, Sibling, GoStrToDStr(S), Ptr)
	return ret
}

func TreeNodes_AddObject(obj uintptr, Sibling uintptr, S string, Ptr uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddObject").Call(obj, Sibling, GoStrToDStr(S), Ptr)
	return ret
}

func TreeNodes_AddNode(obj uintptr, Node uintptr, Relative uintptr, S string, Ptr uintptr, Method TNodeAttachMode) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddNode").Call(obj, Node, Relative, GoStrToDStr(S), Ptr, uintptr(Method))
	return ret
}

func TreeNodes_AddFirst(obj uintptr, Sibling uintptr, S string) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_AddFirst").Call(obj, Sibling, GoStrToDStr(S))
	return ret
}

func TreeNodes_Add(obj uintptr, Sibling uintptr, S string) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_Add").Call(obj, Sibling, GoStrToDStr(S))
	return ret
}

func TreeNodes_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TreeNodes_Assign").Call(obj, Source)
}

func TreeNodes_BeginUpdate(obj uintptr) {
	getLazyProc("TreeNodes_BeginUpdate").Call(obj)
}

func TreeNodes_Clear(obj uintptr) {
	getLazyProc("TreeNodes_Clear").Call(obj)
}

func TreeNodes_Delete(obj uintptr, Node uintptr) {
	getLazyProc("TreeNodes_Delete").Call(obj, Node)
}

func TreeNodes_EndUpdate(obj uintptr) {
	getLazyProc("TreeNodes_EndUpdate").Call(obj)
}

func TreeNodes_GetFirstNode(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_GetFirstNode").Call(obj)
	return ret
}

func TreeNodes_Insert(obj uintptr, Sibling uintptr, S string) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_Insert").Call(obj, Sibling, GoStrToDStr(S))
	return ret
}

func TreeNodes_InsertObject(obj uintptr, Sibling uintptr, S string, Ptr uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_InsertObject").Call(obj, Sibling, GoStrToDStr(S), Ptr)
	return ret
}

func TreeNodes_CustomSort(obj uintptr, SortProc PFNTVCOMPARE, Data int, ARecurse bool) bool {
	ret, _, _ := getLazyProc("TreeNodes_CustomSort").Call(obj, uintptr(SortProc), uintptr(Data), GoBoolToDBool(ARecurse))
	return DBoolToGoBool(ret)
}

func TreeNodes_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNodes_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNodes_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TreeNodes_ClassType").Call(obj)
	return TClass(ret)
}

func TreeNodes_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNodes_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNodes_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNodes_InstanceSize").Call(obj)
	return int32(ret)
}

func TreeNodes_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TreeNodes_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TreeNodes_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNodes_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TreeNodes_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNodes_GetHashCode").Call(obj)
	return int32(ret)
}

func TreeNodes_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNodes_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNodes_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNodes_GetCount").Call(obj)
	return int32(ret)
}

func TreeNodes_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_GetOwner").Call(obj)
	return ret
}

func TreeNodes_GetItem(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TreeNodes_GetItem").Call(obj, uintptr(Index))
	return ret
}

func TreeNodes_StaticClassType() TClass {
	r, _, _ := getLazyProc("TreeNodes_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TListItem ---------------------------

func ListItem_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListItem_Create").Call(obj)
	return ret
}

func ListItem_Free(obj uintptr) {
	getLazyProc("ListItem_Free").Call(obj)
}

func ListItem_DisplayRectSubItem(obj uintptr, subItem int32, Code TDisplayCode) TRect {
	var ret TRect
	getLazyProc("ListItem_DisplayRectSubItem").Call(obj, uintptr(subItem), uintptr(Code), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListItem_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ListItem_Assign").Call(obj, Source)
}

func ListItem_Delete(obj uintptr) {
	getLazyProc("ListItem_Delete").Call(obj)
}

func ListItem_DisplayRect(obj uintptr, Code TDisplayCode) TRect {
	var ret TRect
	getLazyProc("ListItem_DisplayRect").Call(obj, uintptr(Code), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListItem_EditCaption(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItem_EditCaption").Call(obj)
	return DBoolToGoBool(ret)
}

func ListItem_MakeVisible(obj uintptr, PartialOK bool) {
	getLazyProc("ListItem_MakeVisible").Call(obj, GoBoolToDBool(PartialOK))
}

func ListItem_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ListItem_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ListItem_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ListItem_ClassType").Call(obj)
	return TClass(ret)
}

func ListItem_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListItem_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ListItem_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItem_InstanceSize").Call(obj)
	return int32(ret)
}

func ListItem_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ListItem_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ListItem_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItem_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ListItem_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItem_GetHashCode").Call(obj)
	return int32(ret)
}

func ListItem_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ListItem_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ListItem_GetDropTarget(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItem_GetDropTarget").Call(obj)
	return DBoolToGoBool(ret)
}

func ListItem_SetDropTarget(obj uintptr, value bool) {
	getLazyProc("ListItem_SetDropTarget").Call(obj, GoBoolToDBool(value))
}

func ListItem_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("ListItem_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func ListItem_SetCaption(obj uintptr, value string) {
	getLazyProc("ListItem_SetCaption").Call(obj, GoStrToDStr(value))
}

func ListItem_GetChecked(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItem_GetChecked").Call(obj)
	return DBoolToGoBool(ret)
}

func ListItem_SetChecked(obj uintptr, value bool) {
	getLazyProc("ListItem_SetChecked").Call(obj, GoBoolToDBool(value))
}

func ListItem_GetCut(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItem_GetCut").Call(obj)
	return DBoolToGoBool(ret)
}

func ListItem_SetCut(obj uintptr, value bool) {
	getLazyProc("ListItem_SetCut").Call(obj, GoBoolToDBool(value))
}

func ListItem_GetData(obj uintptr) unsafe.Pointer {
	ret, _, _ := getLazyProc("ListItem_GetData").Call(obj)
	return unsafe.Pointer(ret)
}

func ListItem_SetData(obj uintptr, value unsafe.Pointer) {
	getLazyProc("ListItem_SetData").Call(obj, uintptr(value))
}

func ListItem_GetFocused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItem_GetFocused").Call(obj)
	return DBoolToGoBool(ret)
}

func ListItem_SetFocused(obj uintptr, value bool) {
	getLazyProc("ListItem_SetFocused").Call(obj, GoBoolToDBool(value))
}

func ListItem_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItem_GetImageIndex").Call(obj)
	return int32(ret)
}

func ListItem_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("ListItem_SetImageIndex").Call(obj, uintptr(value))
}

func ListItem_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItem_GetIndex").Call(obj)
	return int32(ret)
}

func ListItem_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItem_GetLeft").Call(obj)
	return int32(ret)
}

func ListItem_SetLeft(obj uintptr, value int32) {
	getLazyProc("ListItem_SetLeft").Call(obj, uintptr(value))
}

func ListItem_GetListView(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListItem_GetListView").Call(obj)
	return ret
}

func ListItem_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListItem_GetOwner").Call(obj)
	return ret
}

func ListItem_GetPosition(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ListItem_GetPosition").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ListItem_SetPosition(obj uintptr, value TPoint) {
	getLazyProc("ListItem_SetPosition").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ListItem_GetSelected(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListItem_GetSelected").Call(obj)
	return DBoolToGoBool(ret)
}

func ListItem_SetSelected(obj uintptr, value bool) {
	getLazyProc("ListItem_SetSelected").Call(obj, GoBoolToDBool(value))
}

func ListItem_GetStateIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItem_GetStateIndex").Call(obj)
	return int32(ret)
}

func ListItem_SetStateIndex(obj uintptr, value int32) {
	getLazyProc("ListItem_SetStateIndex").Call(obj, uintptr(value))
}

func ListItem_GetSubItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListItem_GetSubItems").Call(obj)
	return ret
}

func ListItem_SetSubItems(obj uintptr, value uintptr) {
	getLazyProc("ListItem_SetSubItems").Call(obj, value)
}

func ListItem_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListItem_GetTop").Call(obj)
	return int32(ret)
}

func ListItem_SetTop(obj uintptr, value int32) {
	getLazyProc("ListItem_SetTop").Call(obj, uintptr(value))
}

func ListItem_GetSubItemImages(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("ListItem_GetSubItemImages").Call(obj, uintptr(Index))
	return int32(ret)
}

func ListItem_SetSubItemImages(obj uintptr, Index int32, value int32) {
	getLazyProc("ListItem_SetSubItemImages").Call(obj, uintptr(Index), uintptr(value))
}

func ListItem_StaticClassType() TClass {
	r, _, _ := getLazyProc("ListItem_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTreeNode ---------------------------

func TreeNode_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_Create").Call(obj)
	return ret
}

func TreeNode_Free(obj uintptr) {
	getLazyProc("TreeNode_Free").Call(obj)
}

func TreeNode_Bottom(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_Bottom").Call(obj)
	return int32(ret)
}

func TreeNode_BottomExpanded(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_BottomExpanded").Call(obj)
	return int32(ret)
}

func TreeNode_DefaultTreeViewSort(obj uintptr, Node1 uintptr, Node2 uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_DefaultTreeViewSort").Call(obj, Node1, Node2)
	return int32(ret)
}

func TreeNode_DisplayExpandSignLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_DisplayExpandSignLeft").Call(obj)
	return int32(ret)
}

func TreeNode_DisplayExpandSignRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("TreeNode_DisplayExpandSignRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeNode_DisplayExpandSignRight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_DisplayExpandSignRight").Call(obj)
	return int32(ret)
}

func TreeNode_DisplayIconLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_DisplayIconLeft").Call(obj)
	return int32(ret)
}

func TreeNode_DisplayRect(obj uintptr, TextOnly bool) TRect {
	var ret TRect
	getLazyProc("TreeNode_DisplayRect").Call(obj, GoBoolToDBool(TextOnly), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TreeNode_DisplayStateIconLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_DisplayStateIconLeft").Call(obj)
	return int32(ret)
}

func TreeNode_DisplayTextLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_DisplayTextLeft").Call(obj)
	return int32(ret)
}

func TreeNode_DisplayTextRight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_DisplayTextRight").Call(obj)
	return int32(ret)
}

func TreeNode_EditText(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_EditText").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_FindNode(obj uintptr, NodeText string) uintptr {
	ret, _, _ := getLazyProc("TreeNode_FindNode").Call(obj, GoStrToDStr(NodeText))
	return ret
}

func TreeNode_GetFirstChild(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetFirstChild").Call(obj)
	return ret
}

func TreeNode_GetFirstVisibleChild(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetFirstVisibleChild").Call(obj)
	return ret
}

func TreeNode_GetLastChild(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetLastChild").Call(obj)
	return ret
}

func TreeNode_GetLastSibling(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetLastSibling").Call(obj)
	return ret
}

func TreeNode_GetLastSubChild(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetLastSubChild").Call(obj)
	return ret
}

func TreeNode_GetLastVisibleChild(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetLastVisibleChild").Call(obj)
	return ret
}

func TreeNode_GetNext(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNext").Call(obj)
	return ret
}

func TreeNode_GetNextChild(obj uintptr, AValue uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNextChild").Call(obj, AValue)
	return ret
}

func TreeNode_GetNextExpanded(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNextExpanded").Call(obj)
	return ret
}

func TreeNode_GetNextMultiSelected(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNextMultiSelected").Call(obj)
	return ret
}

func TreeNode_GetNextSibling(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNextSibling").Call(obj)
	return ret
}

func TreeNode_GetNextSkipChildren(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNextSkipChildren").Call(obj)
	return ret
}

func TreeNode_GetNextVisible(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNextVisible").Call(obj)
	return ret
}

func TreeNode_GetNextVisibleSibling(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetNextVisibleSibling").Call(obj)
	return ret
}

func TreeNode_GetParentNodeOfAbsoluteLevel(obj uintptr, TheAbsoluteLevel int32) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetParentNodeOfAbsoluteLevel").Call(obj, uintptr(TheAbsoluteLevel))
	return ret
}

func TreeNode_GetPrev(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetPrev").Call(obj)
	return ret
}

func TreeNode_GetPrevChild(obj uintptr, AValue uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetPrevChild").Call(obj, AValue)
	return ret
}

func TreeNode_GetPrevExpanded(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetPrevExpanded").Call(obj)
	return ret
}

func TreeNode_GetPrevMultiSelected(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetPrevMultiSelected").Call(obj)
	return ret
}

func TreeNode_GetPrevSibling(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetPrevSibling").Call(obj)
	return ret
}

func TreeNode_GetPrevVisible(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetPrevVisible").Call(obj)
	return ret
}

func TreeNode_GetPrevVisibleSibling(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetPrevVisibleSibling").Call(obj)
	return ret
}

func TreeNode_GetTextPath(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNode_GetTextPath").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNode_HasAsParent(obj uintptr, AValue uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_HasAsParent").Call(obj, AValue)
	return DBoolToGoBool(ret)
}

func TreeNode_IndexOf(obj uintptr, AValue uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_IndexOf").Call(obj, AValue)
	return int32(ret)
}

func TreeNode_IndexOfText(obj uintptr, NodeText string) int32 {
	ret, _, _ := getLazyProc("TreeNode_IndexOfText").Call(obj, GoStrToDStr(NodeText))
	return int32(ret)
}

func TreeNode_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TreeNode_Assign").Call(obj, Source)
}

func TreeNode_Collapse(obj uintptr, Recurse bool) {
	getLazyProc("TreeNode_Collapse").Call(obj, GoBoolToDBool(Recurse))
}

func TreeNode_ConsistencyCheck(obj uintptr) {
	getLazyProc("TreeNode_ConsistencyCheck").Call(obj)
}

func TreeNode_Delete(obj uintptr) {
	getLazyProc("TreeNode_Delete").Call(obj)
}

func TreeNode_DeleteChildren(obj uintptr) {
	getLazyProc("TreeNode_DeleteChildren").Call(obj)
}

func TreeNode_EndEdit(obj uintptr, Cancel bool) {
	getLazyProc("TreeNode_EndEdit").Call(obj, GoBoolToDBool(Cancel))
}

func TreeNode_Expand(obj uintptr, Recurse bool) {
	getLazyProc("TreeNode_Expand").Call(obj, GoBoolToDBool(Recurse))
}

func TreeNode_ExpandParents(obj uintptr) {
	getLazyProc("TreeNode_ExpandParents").Call(obj)
}

func TreeNode_FreeAllNodeData(obj uintptr) {
	getLazyProc("TreeNode_FreeAllNodeData").Call(obj)
}

func TreeNode_MakeVisible(obj uintptr) {
	getLazyProc("TreeNode_MakeVisible").Call(obj)
}

func TreeNode_MoveTo(obj uintptr, Destination uintptr, Mode TNodeAttachMode) {
	getLazyProc("TreeNode_MoveTo").Call(obj, Destination, uintptr(Mode))
}

func TreeNode_MultiSelectGroup(obj uintptr) {
	getLazyProc("TreeNode_MultiSelectGroup").Call(obj)
}

func TreeNode_Update(obj uintptr) {
	getLazyProc("TreeNode_Update").Call(obj)
}

func TreeNode_WriteDebugReport(obj uintptr, Prefix string, Recurse bool) {
	getLazyProc("TreeNode_WriteDebugReport").Call(obj, GoStrToDStr(Prefix), GoBoolToDBool(Recurse))
}

func TreeNode_CustomSort(obj uintptr, SortProc PFNTVCOMPARE, Data int, ARecurse bool) bool {
	ret, _, _ := getLazyProc("TreeNode_CustomSort").Call(obj, uintptr(SortProc), uintptr(Data), GoBoolToDBool(ARecurse))
	return DBoolToGoBool(ret)
}

func TreeNode_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNode_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNode_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TreeNode_ClassType").Call(obj)
	return TClass(ret)
}

func TreeNode_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNode_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNode_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_InstanceSize").Call(obj)
	return int32(ret)
}

func TreeNode_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TreeNode_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TreeNode_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TreeNode_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetHashCode").Call(obj)
	return int32(ret)
}

func TreeNode_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNode_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNode_GetAbsoluteIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetAbsoluteIndex").Call(obj)
	return int32(ret)
}

func TreeNode_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetCount").Call(obj)
	return int32(ret)
}

func TreeNode_GetCut(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetCut").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetCut(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetCut").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetData(obj uintptr) unsafe.Pointer {
	ret, _, _ := getLazyProc("TreeNode_GetData").Call(obj)
	return unsafe.Pointer(ret)
}

func TreeNode_SetData(obj uintptr, value unsafe.Pointer) {
	getLazyProc("TreeNode_SetData").Call(obj, uintptr(value))
}

func TreeNode_GetDeleting(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetDeleting").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_GetDropTarget(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetDropTarget").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetDropTarget(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetDropTarget").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetExpanded(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetExpanded").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetExpanded(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetExpanded").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetFocused(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetFocused").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetFocused(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetFocused").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetHandle(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetHandle").Call(obj)
	return ret
}

func TreeNode_GetHasChildren(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetHasChildren").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetHasChildren(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetHasChildren").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetHeight").Call(obj)
	return int32(ret)
}

func TreeNode_SetHeight(obj uintptr, value int32) {
	getLazyProc("TreeNode_SetHeight").Call(obj, uintptr(value))
}

func TreeNode_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetImageIndex").Call(obj)
	return int32(ret)
}

func TreeNode_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("TreeNode_SetImageIndex").Call(obj, uintptr(value))
}

func TreeNode_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetIndex").Call(obj)
	return int32(ret)
}

func TreeNode_SetIndex(obj uintptr, value int32) {
	getLazyProc("TreeNode_SetIndex").Call(obj, uintptr(value))
}

func TreeNode_GetIsFullHeightVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetIsFullHeightVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_GetIsVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetIsVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_GetLevel(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetLevel").Call(obj)
	return int32(ret)
}

func TreeNode_GetMultiSelected(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetMultiSelected").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetMultiSelected(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetMultiSelected").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetOverlayIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetOverlayIndex").Call(obj)
	return int32(ret)
}

func TreeNode_SetOverlayIndex(obj uintptr, value int32) {
	getLazyProc("TreeNode_SetOverlayIndex").Call(obj, uintptr(value))
}

func TreeNode_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetOwner").Call(obj)
	return ret
}

func TreeNode_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetParent").Call(obj)
	return ret
}

func TreeNode_GetSelected(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetSelected").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetSelected(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetSelected").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetSelectedIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetSelectedIndex").Call(obj)
	return int32(ret)
}

func TreeNode_SetSelectedIndex(obj uintptr, value int32) {
	getLazyProc("TreeNode_SetSelectedIndex").Call(obj, uintptr(value))
}

func TreeNode_GetStateIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetStateIndex").Call(obj)
	return int32(ret)
}

func TreeNode_SetStateIndex(obj uintptr, value int32) {
	getLazyProc("TreeNode_SetStateIndex").Call(obj, uintptr(value))
}

func TreeNode_GetSubTreeCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetSubTreeCount").Call(obj)
	return int32(ret)
}

func TreeNode_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("TreeNode_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func TreeNode_SetText(obj uintptr, value string) {
	getLazyProc("TreeNode_SetText").Call(obj, GoStrToDStr(value))
}

func TreeNode_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TreeNode_GetTop").Call(obj)
	return int32(ret)
}

func TreeNode_GetTreeNodes(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetTreeNodes").Call(obj)
	return ret
}

func TreeNode_GetTreeView(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetTreeView").Call(obj)
	return ret
}

func TreeNode_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TreeNode_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TreeNode_SetVisible(obj uintptr, value bool) {
	getLazyProc("TreeNode_SetVisible").Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetItems(obj uintptr, ItemIndex int32) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetItems").Call(obj, uintptr(ItemIndex))
	return ret
}

func TreeNode_SetItems(obj uintptr, ItemIndex int32, value uintptr) {
	getLazyProc("TreeNode_SetItems").Call(obj, uintptr(ItemIndex), value)
}

func TreeNode_GetItem(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TreeNode_GetItem").Call(obj, uintptr(Index))
	return ret
}

func TreeNode_SetItem(obj uintptr, Index int32, value uintptr) {
	getLazyProc("TreeNode_SetItem").Call(obj, uintptr(Index), value)
}

func TreeNode_StaticClassType() TClass {
	r, _, _ := getLazyProc("TreeNode_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPageControl ---------------------------

func PageControl_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_Create").Call(obj)
	return ret
}

func PageControl_Free(obj uintptr) {
	getLazyProc("PageControl_Free").Call(obj)
}

func PageControl_SelectNextPage(obj uintptr, GoForward bool, CheckTabVisible bool) {
	getLazyProc("PageControl_SelectNextPage").Call(obj, GoBoolToDBool(GoForward), GoBoolToDBool(CheckTabVisible))
}

func PageControl_TabRect(obj uintptr, Index int32) TRect {
	var ret TRect
	getLazyProc("PageControl_TabRect").Call(obj, uintptr(Index), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func PageControl_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("PageControl_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func PageControl_DisableAlign(obj uintptr) {
	getLazyProc("PageControl_DisableAlign").Call(obj)
}

func PageControl_EnableAlign(obj uintptr) {
	getLazyProc("PageControl_EnableAlign").Call(obj)
}

func PageControl_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("PageControl_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func PageControl_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("PageControl_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func PageControl_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("PageControl_InsertControl").Call(obj, AControl)
}

func PageControl_Invalidate(obj uintptr) {
	getLazyProc("PageControl_Invalidate").Call(obj)
}

func PageControl_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("PageControl_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func PageControl_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("PageControl_RemoveControl").Call(obj, AControl)
}

func PageControl_Realign(obj uintptr) {
	getLazyProc("PageControl_Realign").Call(obj)
}

func PageControl_Repaint(obj uintptr) {
	getLazyProc("PageControl_Repaint").Call(obj)
}

func PageControl_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("PageControl_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func PageControl_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("PageControl_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func PageControl_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("PageControl_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func PageControl_SetFocus(obj uintptr) {
	getLazyProc("PageControl_SetFocus").Call(obj)
}

func PageControl_Update(obj uintptr) {
	getLazyProc("PageControl_Update").Call(obj)
}

func PageControl_BringToFront(obj uintptr) {
	getLazyProc("PageControl_BringToFront").Call(obj)
}

func PageControl_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("PageControl_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("PageControl_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_Hide(obj uintptr) {
	getLazyProc("PageControl_Hide").Call(obj)
}

func PageControl_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("PageControl_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func PageControl_Refresh(obj uintptr) {
	getLazyProc("PageControl_Refresh").Call(obj)
}

func PageControl_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("PageControl_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("PageControl_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_SendToBack(obj uintptr) {
	getLazyProc("PageControl_SendToBack").Call(obj)
}

func PageControl_Show(obj uintptr) {
	getLazyProc("PageControl_Show").Call(obj)
}

func PageControl_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("PageControl_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func PageControl_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetTextLen").Call(obj)
	return int32(ret)
}

func PageControl_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("PageControl_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func PageControl_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("PageControl_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func PageControl_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("PageControl_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func PageControl_Assign(obj uintptr, Source uintptr) {
	getLazyProc("PageControl_Assign").Call(obj, Source)
}

func PageControl_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("PageControl_ClassType").Call(obj)
	return TClass(ret)
}

func PageControl_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("PageControl_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func PageControl_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_InstanceSize").Call(obj)
	return int32(ret)
}

func PageControl_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("PageControl_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func PageControl_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func PageControl_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetHashCode").Call(obj)
	return int32(ret)
}

func PageControl_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("PageControl_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func PageControl_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("PageControl_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func PageControl_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("PageControl_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func PageControl_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("PageControl_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func PageControl_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("PageControl_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func PageControl_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("PageControl_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func PageControl_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("PageControl_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func PageControl_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("PageControl_AnchorClient").Call(obj, uintptr(ASpace))
}

func PageControl_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PageControl_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PageControl_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("PageControl_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func PageControl_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("PageControl_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func PageControl_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("PageControl_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func PageControl_GetOptions(obj uintptr) TCTabControlOptions {
	ret, _, _ := getLazyProc("PageControl_GetOptions").Call(obj)
	return TCTabControlOptions(ret)
}

func PageControl_SetOptions(obj uintptr, value TCTabControlOptions) {
	getLazyProc("PageControl_SetOptions").Call(obj, uintptr(value))
}

func PageControl_GetActivePageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetActivePageIndex").Call(obj)
	return int32(ret)
}

func PageControl_SetActivePageIndex(obj uintptr, value int32) {
	getLazyProc("PageControl_SetActivePageIndex").Call(obj, uintptr(value))
}

func PageControl_GetPageCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetPageCount").Call(obj)
	return int32(ret)
}

func PageControl_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("PageControl_GetAlign").Call(obj)
	return TAlign(ret)
}

func PageControl_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("PageControl_SetAlign").Call(obj, uintptr(value))
}

func PageControl_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("PageControl_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func PageControl_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("PageControl_SetAnchors").Call(obj, uintptr(value))
}

func PageControl_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("PageControl_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func PageControl_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("PageControl_SetBiDiMode").Call(obj, uintptr(value))
}

func PageControl_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetConstraints").Call(obj)
	return ret
}

func PageControl_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetConstraints").Call(obj, value)
}

func PageControl_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetDockSite(obj uintptr, value bool) {
	getLazyProc("PageControl_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("PageControl_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("PageControl_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func PageControl_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("PageControl_SetDragCursor").Call(obj, uintptr(value))
}

func PageControl_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("PageControl_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func PageControl_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("PageControl_SetDragKind").Call(obj, uintptr(value))
}

func PageControl_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("PageControl_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func PageControl_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("PageControl_SetDragMode").Call(obj, uintptr(value))
}

func PageControl_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetEnabled(obj uintptr, value bool) {
	getLazyProc("PageControl_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetFont").Call(obj)
	return ret
}

func PageControl_SetFont(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetFont").Call(obj, value)
}

func PageControl_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetImages").Call(obj)
	return ret
}

func PageControl_SetImages(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetImages").Call(obj, value)
}

func PageControl_GetMultiLine(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetMultiLine").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetMultiLine(obj uintptr, value bool) {
	getLazyProc("PageControl_SetMultiLine").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("PageControl_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetParentFont(obj uintptr, value bool) {
	getLazyProc("PageControl_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("PageControl_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetPopupMenu").Call(obj)
	return ret
}

func PageControl_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetPopupMenu").Call(obj, value)
}

func PageControl_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetShowHint(obj uintptr, value bool) {
	getLazyProc("PageControl_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetTabHeight(obj uintptr) int16 {
	ret, _, _ := getLazyProc("PageControl_GetTabHeight").Call(obj)
	return int16(ret)
}

func PageControl_SetTabHeight(obj uintptr, value int16) {
	getLazyProc("PageControl_SetTabHeight").Call(obj, uintptr(value))
}

func PageControl_GetTabIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetTabIndex").Call(obj)
	return int32(ret)
}

func PageControl_SetTabIndex(obj uintptr, value int32) {
	getLazyProc("PageControl_SetTabIndex").Call(obj, uintptr(value))
}

func PageControl_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("PageControl_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func PageControl_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("PageControl_SetTabOrder").Call(obj, uintptr(value))
}

func PageControl_GetTabPosition(obj uintptr) TTabPosition {
	ret, _, _ := getLazyProc("PageControl_GetTabPosition").Call(obj)
	return TTabPosition(ret)
}

func PageControl_SetTabPosition(obj uintptr, value TTabPosition) {
	getLazyProc("PageControl_SetTabPosition").Call(obj, uintptr(value))
}

func PageControl_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetTabStop(obj uintptr, value bool) {
	getLazyProc("PageControl_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetTabWidth(obj uintptr) int16 {
	ret, _, _ := getLazyProc("PageControl_GetTabWidth").Call(obj)
	return int16(ret)
}

func PageControl_SetTabWidth(obj uintptr, value int16) {
	getLazyProc("PageControl_SetTabWidth").Call(obj, uintptr(value))
}

func PageControl_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetVisible(obj uintptr, value bool) {
	getLazyProc("PageControl_SetVisible").Call(obj, GoBoolToDBool(value))
}

func PageControl_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnChanging(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnChanging").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func PageControl_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("PageControl_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func PageControl_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetDockClientCount").Call(obj)
	return int32(ret)
}

func PageControl_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func PageControl_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetBrush").Call(obj)
	return ret
}

func PageControl_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetControlCount").Call(obj)
	return int32(ret)
}

func PageControl_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("PageControl_GetHandle").Call(obj)
	return HWND(ret)
}

func PageControl_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("PageControl_GetParentWindow").Call(obj)
	return HWND(ret)
}

func PageControl_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("PageControl_SetParentWindow").Call(obj, uintptr(value))
}

func PageControl_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("PageControl_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func PageControl_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetAction").Call(obj)
	return ret
}

func PageControl_SetAction(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetAction").Call(obj, value)
}

func PageControl_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("PageControl_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("PageControl_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func PageControl_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetClientHeight").Call(obj)
	return int32(ret)
}

func PageControl_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("PageControl_SetClientHeight").Call(obj, uintptr(value))
}

func PageControl_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("PageControl_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("PageControl_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PageControl_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetClientWidth").Call(obj)
	return int32(ret)
}

func PageControl_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("PageControl_SetClientWidth").Call(obj, uintptr(value))
}

func PageControl_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("PageControl_GetControlState").Call(obj)
	return TControlState(ret)
}

func PageControl_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("PageControl_SetControlState").Call(obj, uintptr(value))
}

func PageControl_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("PageControl_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func PageControl_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("PageControl_SetControlStyle").Call(obj, uintptr(value))
}

func PageControl_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageControl_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func PageControl_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetParent").Call(obj)
	return ret
}

func PageControl_SetParent(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetParent").Call(obj, value)
}

func PageControl_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetLeft").Call(obj)
	return int32(ret)
}

func PageControl_SetLeft(obj uintptr, value int32) {
	getLazyProc("PageControl_SetLeft").Call(obj, uintptr(value))
}

func PageControl_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetTop").Call(obj)
	return int32(ret)
}

func PageControl_SetTop(obj uintptr, value int32) {
	getLazyProc("PageControl_SetTop").Call(obj, uintptr(value))
}

func PageControl_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetWidth").Call(obj)
	return int32(ret)
}

func PageControl_SetWidth(obj uintptr, value int32) {
	getLazyProc("PageControl_SetWidth").Call(obj, uintptr(value))
}

func PageControl_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetHeight").Call(obj)
	return int32(ret)
}

func PageControl_SetHeight(obj uintptr, value int32) {
	getLazyProc("PageControl_SetHeight").Call(obj, uintptr(value))
}

func PageControl_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("PageControl_GetCursor").Call(obj)
	return TCursor(ret)
}

func PageControl_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("PageControl_SetCursor").Call(obj, uintptr(value))
}

func PageControl_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("PageControl_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func PageControl_SetHint(obj uintptr, value string) {
	getLazyProc("PageControl_SetHint").Call(obj, GoStrToDStr(value))
}

func PageControl_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetComponentCount").Call(obj)
	return int32(ret)
}

func PageControl_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageControl_GetComponentIndex").Call(obj)
	return int32(ret)
}

func PageControl_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("PageControl_SetComponentIndex").Call(obj, uintptr(value))
}

func PageControl_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetOwner").Call(obj)
	return ret
}

func PageControl_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("PageControl_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func PageControl_SetName(obj uintptr, value string) {
	getLazyProc("PageControl_SetName").Call(obj, GoStrToDStr(value))
}

func PageControl_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("PageControl_GetTag").Call(obj)
	return int(ret)
}

func PageControl_SetTag(obj uintptr, value int) {
	getLazyProc("PageControl_SetTag").Call(obj, uintptr(value))
}

func PageControl_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetAnchorSideLeft").Call(obj)
	return ret
}

func PageControl_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetAnchorSideLeft").Call(obj, value)
}

func PageControl_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetAnchorSideTop").Call(obj)
	return ret
}

func PageControl_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetAnchorSideTop").Call(obj, value)
}

func PageControl_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetAnchorSideRight").Call(obj)
	return ret
}

func PageControl_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetAnchorSideRight").Call(obj, value)
}

func PageControl_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetAnchorSideBottom").Call(obj)
	return ret
}

func PageControl_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetAnchorSideBottom").Call(obj, value)
}

func PageControl_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetChildSizing").Call(obj)
	return ret
}

func PageControl_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetChildSizing").Call(obj, value)
}

func PageControl_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetBorderSpacing").Call(obj)
	return ret
}

func PageControl_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("PageControl_SetBorderSpacing").Call(obj, value)
}

func PageControl_GetPages(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetPages").Call(obj, uintptr(Index))
	return ret
}

func PageControl_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func PageControl_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetControls").Call(obj, uintptr(Index))
	return ret
}

func PageControl_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func PageControl_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("PageControl_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func PageControl_StaticClassType() TClass {
	r, _, _ := getLazyProc("PageControl_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTabSheet ---------------------------

func TabSheet_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_Create").Call(obj)
	return ret
}

func TabSheet_Free(obj uintptr) {
	getLazyProc("TabSheet_Free").Call(obj)
}

func TabSheet_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func TabSheet_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("TabSheet_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func TabSheet_DisableAlign(obj uintptr) {
	getLazyProc("TabSheet_DisableAlign").Call(obj)
}

func TabSheet_EnableAlign(obj uintptr) {
	getLazyProc("TabSheet_EnableAlign").Call(obj)
}

func TabSheet_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("TabSheet_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func TabSheet_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("TabSheet_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func TabSheet_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("TabSheet_InsertControl").Call(obj, AControl)
}

func TabSheet_Invalidate(obj uintptr) {
	getLazyProc("TabSheet_Invalidate").Call(obj)
}

func TabSheet_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("TabSheet_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func TabSheet_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("TabSheet_RemoveControl").Call(obj, AControl)
}

func TabSheet_Realign(obj uintptr) {
	getLazyProc("TabSheet_Realign").Call(obj)
}

func TabSheet_Repaint(obj uintptr) {
	getLazyProc("TabSheet_Repaint").Call(obj)
}

func TabSheet_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("TabSheet_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func TabSheet_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("TabSheet_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func TabSheet_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("TabSheet_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func TabSheet_SetFocus(obj uintptr) {
	getLazyProc("TabSheet_SetFocus").Call(obj)
}

func TabSheet_Update(obj uintptr) {
	getLazyProc("TabSheet_Update").Call(obj)
}

func TabSheet_BringToFront(obj uintptr) {
	getLazyProc("TabSheet_BringToFront").Call(obj)
}

func TabSheet_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("TabSheet_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TabSheet_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("TabSheet_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TabSheet_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_Hide(obj uintptr) {
	getLazyProc("TabSheet_Hide").Call(obj)
}

func TabSheet_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("TabSheet_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func TabSheet_Refresh(obj uintptr) {
	getLazyProc("TabSheet_Refresh").Call(obj)
}

func TabSheet_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("TabSheet_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TabSheet_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("TabSheet_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TabSheet_SendToBack(obj uintptr) {
	getLazyProc("TabSheet_SendToBack").Call(obj)
}

func TabSheet_Show(obj uintptr) {
	getLazyProc("TabSheet_Show").Call(obj)
}

func TabSheet_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("TabSheet_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func TabSheet_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetTextLen").Call(obj)
	return int32(ret)
}

func TabSheet_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("TabSheet_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func TabSheet_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("TabSheet_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func TabSheet_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TabSheet_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TabSheet_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TabSheet_Assign").Call(obj, Source)
}

func TabSheet_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TabSheet_ClassType").Call(obj)
	return TClass(ret)
}

func TabSheet_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TabSheet_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TabSheet_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_InstanceSize").Call(obj)
	return int32(ret)
}

func TabSheet_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TabSheet_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TabSheet_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TabSheet_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetHashCode").Call(obj)
	return int32(ret)
}

func TabSheet_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TabSheet_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TabSheet_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("TabSheet_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func TabSheet_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("TabSheet_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func TabSheet_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("TabSheet_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func TabSheet_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("TabSheet_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func TabSheet_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("TabSheet_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func TabSheet_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("TabSheet_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func TabSheet_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("TabSheet_AnchorClient").Call(obj, uintptr(ASpace))
}

func TabSheet_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("TabSheet_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func TabSheet_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("TabSheet_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func TabSheet_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("TabSheet_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func TabSheet_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("TabSheet_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func TabSheet_GetPageControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetPageControl").Call(obj)
	return ret
}

func TabSheet_SetPageControl(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetPageControl").Call(obj, value)
}

func TabSheet_GetTabIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetTabIndex").Call(obj)
	return int32(ret)
}

func TabSheet_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetBorderWidth").Call(obj)
	return int32(ret)
}

func TabSheet_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetBorderWidth").Call(obj, uintptr(value))
}

func TabSheet_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("TabSheet_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func TabSheet_SetCaption(obj uintptr, value string) {
	getLazyProc("TabSheet_SetCaption").Call(obj, GoStrToDStr(value))
}

func TabSheet_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetEnabled(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetFont").Call(obj)
	return ret
}

func TabSheet_SetFont(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetFont").Call(obj, value)
}

func TabSheet_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetHeight").Call(obj)
	return int32(ret)
}

func TabSheet_SetHeight(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetHeight").Call(obj, uintptr(value))
}

func TabSheet_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetImageIndex").Call(obj)
	return int32(ret)
}

func TabSheet_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetImageIndex").Call(obj, uintptr(value))
}

func TabSheet_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetLeft").Call(obj)
	return int32(ret)
}

func TabSheet_SetLeft(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetLeft").Call(obj, uintptr(value))
}

func TabSheet_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetConstraints").Call(obj)
	return ret
}

func TabSheet_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetConstraints").Call(obj, value)
}

func TabSheet_GetPageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetPageIndex").Call(obj)
	return int32(ret)
}

func TabSheet_SetPageIndex(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetPageIndex").Call(obj, uintptr(value))
}

func TabSheet_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetParentFont(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetPopupMenu").Call(obj)
	return ret
}

func TabSheet_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetPopupMenu").Call(obj, value)
}

func TabSheet_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetShowHint(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetTabVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetTabVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetTabVisible(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetTabVisible").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetTop").Call(obj)
	return int32(ret)
}

func TabSheet_SetTop(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetTop").Call(obj, uintptr(value))
}

func TabSheet_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetVisible(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetVisible").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetWidth").Call(obj)
	return int32(ret)
}

func TabSheet_SetWidth(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetWidth").Call(obj, uintptr(value))
}

func TabSheet_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnHide(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnHide").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("TabSheet_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func TabSheet_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetDockClientCount").Call(obj)
	return int32(ret)
}

func TabSheet_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetDockSite(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func TabSheet_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetBrush").Call(obj)
	return ret
}

func TabSheet_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetControlCount").Call(obj)
	return int32(ret)
}

func TabSheet_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("TabSheet_GetHandle").Call(obj)
	return HWND(ret)
}

func TabSheet_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("TabSheet_GetParentWindow").Call(obj)
	return HWND(ret)
}

func TabSheet_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("TabSheet_SetParentWindow").Call(obj, uintptr(value))
}

func TabSheet_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("TabSheet_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func TabSheet_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("TabSheet_SetTabOrder").Call(obj, uintptr(value))
}

func TabSheet_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetTabStop(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("TabSheet_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetAction").Call(obj)
	return ret
}

func TabSheet_SetAction(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetAction").Call(obj, value)
}

func TabSheet_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("TabSheet_GetAlign").Call(obj)
	return TAlign(ret)
}

func TabSheet_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("TabSheet_SetAlign").Call(obj, uintptr(value))
}

func TabSheet_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("TabSheet_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func TabSheet_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("TabSheet_SetAnchors").Call(obj, uintptr(value))
}

func TabSheet_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("TabSheet_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func TabSheet_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("TabSheet_SetBiDiMode").Call(obj, uintptr(value))
}

func TabSheet_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("TabSheet_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TabSheet_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("TabSheet_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func TabSheet_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetClientHeight").Call(obj)
	return int32(ret)
}

func TabSheet_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetClientHeight").Call(obj, uintptr(value))
}

func TabSheet_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("TabSheet_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TabSheet_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("TabSheet_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func TabSheet_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetClientWidth").Call(obj)
	return int32(ret)
}

func TabSheet_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetClientWidth").Call(obj, uintptr(value))
}

func TabSheet_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("TabSheet_GetControlState").Call(obj)
	return TControlState(ret)
}

func TabSheet_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("TabSheet_SetControlState").Call(obj, uintptr(value))
}

func TabSheet_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("TabSheet_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func TabSheet_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("TabSheet_SetControlStyle").Call(obj, uintptr(value))
}

func TabSheet_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("TabSheet_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func TabSheet_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetParent").Call(obj)
	return ret
}

func TabSheet_SetParent(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetParent").Call(obj, value)
}

func TabSheet_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("TabSheet_GetCursor").Call(obj)
	return TCursor(ret)
}

func TabSheet_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("TabSheet_SetCursor").Call(obj, uintptr(value))
}

func TabSheet_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("TabSheet_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func TabSheet_SetHint(obj uintptr, value string) {
	getLazyProc("TabSheet_SetHint").Call(obj, GoStrToDStr(value))
}

func TabSheet_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetComponentCount").Call(obj)
	return int32(ret)
}

func TabSheet_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TabSheet_GetComponentIndex").Call(obj)
	return int32(ret)
}

func TabSheet_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("TabSheet_SetComponentIndex").Call(obj, uintptr(value))
}

func TabSheet_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetOwner").Call(obj)
	return ret
}

func TabSheet_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("TabSheet_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func TabSheet_SetName(obj uintptr, value string) {
	getLazyProc("TabSheet_SetName").Call(obj, GoStrToDStr(value))
}

func TabSheet_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("TabSheet_GetTag").Call(obj)
	return int(ret)
}

func TabSheet_SetTag(obj uintptr, value int) {
	getLazyProc("TabSheet_SetTag").Call(obj, uintptr(value))
}

func TabSheet_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetAnchorSideLeft").Call(obj)
	return ret
}

func TabSheet_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetAnchorSideLeft").Call(obj, value)
}

func TabSheet_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetAnchorSideTop").Call(obj)
	return ret
}

func TabSheet_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetAnchorSideTop").Call(obj, value)
}

func TabSheet_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetAnchorSideRight").Call(obj)
	return ret
}

func TabSheet_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetAnchorSideRight").Call(obj, value)
}

func TabSheet_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetAnchorSideBottom").Call(obj)
	return ret
}

func TabSheet_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetAnchorSideBottom").Call(obj, value)
}

func TabSheet_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetChildSizing").Call(obj)
	return ret
}

func TabSheet_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetChildSizing").Call(obj, value)
}

func TabSheet_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetBorderSpacing").Call(obj)
	return ret
}

func TabSheet_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("TabSheet_SetBorderSpacing").Call(obj, value)
}

func TabSheet_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func TabSheet_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetControls").Call(obj, uintptr(Index))
	return ret
}

func TabSheet_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func TabSheet_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("TabSheet_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func TabSheet_StaticClassType() TClass {
	r, _, _ := getLazyProc("TabSheet_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TControl ---------------------------

func Control_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_Create").Call(obj)
	return ret
}

func Control_Free(obj uintptr) {
	getLazyProc("Control_Free").Call(obj)
}

func Control_BringToFront(obj uintptr) {
	getLazyProc("Control_BringToFront").Call(obj)
}

func Control_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Control_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Control_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Control_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Control_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Control_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Control_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Control_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Control_Hide(obj uintptr) {
	getLazyProc("Control_Hide").Call(obj)
}

func Control_Invalidate(obj uintptr) {
	getLazyProc("Control_Invalidate").Call(obj)
}

func Control_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Control_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Control_Refresh(obj uintptr) {
	getLazyProc("Control_Refresh").Call(obj)
}

func Control_Repaint(obj uintptr) {
	getLazyProc("Control_Repaint").Call(obj)
}

func Control_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Control_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Control_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Control_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Control_SendToBack(obj uintptr) {
	getLazyProc("Control_SendToBack").Call(obj)
}

func Control_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Control_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Control_Show(obj uintptr) {
	getLazyProc("Control_Show").Call(obj)
}

func Control_Update(obj uintptr) {
	getLazyProc("Control_Update").Call(obj)
}

func Control_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Control_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Control_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetTextLen").Call(obj)
	return int32(ret)
}

func Control_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Control_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Control_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Control_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Control_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Control_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Control_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Control_Assign").Call(obj, Source)
}

func Control_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Control_ClassType").Call(obj)
	return TClass(ret)
}

func Control_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Control_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Control_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_InstanceSize").Call(obj)
	return int32(ret)
}

func Control_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Control_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Control_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Control_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Control_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetHashCode").Call(obj)
	return int32(ret)
}

func Control_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Control_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Control_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Control_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Control_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Control_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Control_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Control_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Control_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Control_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Control_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Control_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Control_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Control_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Control_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Control_AnchorClient").Call(obj, uintptr(ASpace))
}

func Control_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Control_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Control_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Control_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Control_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Control_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Control_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Control_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Control_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Control_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Control_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Control_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Control_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetAction").Call(obj)
	return ret
}

func Control_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Control_SetAction").Call(obj, value)
}

func Control_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Control_GetAlign").Call(obj)
	return TAlign(ret)
}

func Control_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Control_SetAlign").Call(obj, uintptr(value))
}

func Control_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Control_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Control_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Control_SetAnchors").Call(obj, uintptr(value))
}

func Control_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Control_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Control_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Control_SetBiDiMode").Call(obj, uintptr(value))
}

func Control_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Control_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Control_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Control_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Control_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetClientHeight").Call(obj)
	return int32(ret)
}

func Control_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Control_SetClientHeight").Call(obj, uintptr(value))
}

func Control_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Control_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Control_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Control_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Control_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetClientWidth").Call(obj)
	return int32(ret)
}

func Control_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Control_SetClientWidth").Call(obj, uintptr(value))
}

func Control_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetConstraints").Call(obj)
	return ret
}

func Control_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Control_SetConstraints").Call(obj, value)
}

func Control_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Control_GetControlState").Call(obj)
	return TControlState(ret)
}

func Control_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Control_SetControlState").Call(obj, uintptr(value))
}

func Control_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Control_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Control_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Control_SetControlStyle").Call(obj, uintptr(value))
}

func Control_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Control_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Control_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Control_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Control_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Control_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Control_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Control_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Control_SetVisible(obj uintptr, value bool) {
	getLazyProc("Control_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Control_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetParent").Call(obj)
	return ret
}

func Control_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Control_SetParent").Call(obj, value)
}

func Control_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetLeft").Call(obj)
	return int32(ret)
}

func Control_SetLeft(obj uintptr, value int32) {
	getLazyProc("Control_SetLeft").Call(obj, uintptr(value))
}

func Control_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetTop").Call(obj)
	return int32(ret)
}

func Control_SetTop(obj uintptr, value int32) {
	getLazyProc("Control_SetTop").Call(obj, uintptr(value))
}

func Control_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetWidth").Call(obj)
	return int32(ret)
}

func Control_SetWidth(obj uintptr, value int32) {
	getLazyProc("Control_SetWidth").Call(obj, uintptr(value))
}

func Control_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetHeight").Call(obj)
	return int32(ret)
}

func Control_SetHeight(obj uintptr, value int32) {
	getLazyProc("Control_SetHeight").Call(obj, uintptr(value))
}

func Control_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Control_GetCursor").Call(obj)
	return TCursor(ret)
}

func Control_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Control_SetCursor").Call(obj, uintptr(value))
}

func Control_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Control_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Control_SetHint(obj uintptr, value string) {
	getLazyProc("Control_SetHint").Call(obj, GoStrToDStr(value))
}

func Control_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetComponentCount").Call(obj)
	return int32(ret)
}

func Control_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Control_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Control_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Control_SetComponentIndex").Call(obj, uintptr(value))
}

func Control_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetOwner").Call(obj)
	return ret
}

func Control_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Control_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Control_SetName(obj uintptr, value string) {
	getLazyProc("Control_SetName").Call(obj, GoStrToDStr(value))
}

func Control_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Control_GetTag").Call(obj)
	return int(ret)
}

func Control_SetTag(obj uintptr, value int) {
	getLazyProc("Control_SetTag").Call(obj, uintptr(value))
}

func Control_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetAnchorSideLeft").Call(obj)
	return ret
}

func Control_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Control_SetAnchorSideLeft").Call(obj, value)
}

func Control_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetAnchorSideTop").Call(obj)
	return ret
}

func Control_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Control_SetAnchorSideTop").Call(obj, value)
}

func Control_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetAnchorSideRight").Call(obj)
	return ret
}

func Control_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Control_SetAnchorSideRight").Call(obj, value)
}

func Control_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetAnchorSideBottom").Call(obj)
	return ret
}

func Control_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Control_SetAnchorSideBottom").Call(obj, value)
}

func Control_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Control_GetBorderSpacing").Call(obj)
	return ret
}

func Control_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Control_SetBorderSpacing").Call(obj, value)
}

func Control_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Control_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Control_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Control_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Control_StaticClassType() TClass {
	r, _, _ := getLazyProc("Control_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TWinControl ---------------------------

func WinControl_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_Create").Call(obj)
	return ret
}

func WinControl_Free(obj uintptr) {
	getLazyProc("WinControl_Free").Call(obj)
}

func WinControl_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func WinControl_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("WinControl_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func WinControl_DisableAlign(obj uintptr) {
	getLazyProc("WinControl_DisableAlign").Call(obj)
}

func WinControl_EnableAlign(obj uintptr) {
	getLazyProc("WinControl_EnableAlign").Call(obj)
}

func WinControl_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("WinControl_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func WinControl_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("WinControl_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func WinControl_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("WinControl_InsertControl").Call(obj, AControl)
}

func WinControl_Invalidate(obj uintptr) {
	getLazyProc("WinControl_Invalidate").Call(obj)
}

func WinControl_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("WinControl_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func WinControl_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("WinControl_RemoveControl").Call(obj, AControl)
}

func WinControl_Realign(obj uintptr) {
	getLazyProc("WinControl_Realign").Call(obj)
}

func WinControl_Repaint(obj uintptr) {
	getLazyProc("WinControl_Repaint").Call(obj)
}

func WinControl_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("WinControl_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func WinControl_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("WinControl_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func WinControl_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("WinControl_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func WinControl_SetFocus(obj uintptr) {
	getLazyProc("WinControl_SetFocus").Call(obj)
}

func WinControl_Update(obj uintptr) {
	getLazyProc("WinControl_Update").Call(obj)
}

func WinControl_BringToFront(obj uintptr) {
	getLazyProc("WinControl_BringToFront").Call(obj)
}

func WinControl_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("WinControl_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func WinControl_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("WinControl_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func WinControl_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_Hide(obj uintptr) {
	getLazyProc("WinControl_Hide").Call(obj)
}

func WinControl_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("WinControl_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func WinControl_Refresh(obj uintptr) {
	getLazyProc("WinControl_Refresh").Call(obj)
}

func WinControl_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("WinControl_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func WinControl_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("WinControl_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func WinControl_SendToBack(obj uintptr) {
	getLazyProc("WinControl_SendToBack").Call(obj)
}

func WinControl_Show(obj uintptr) {
	getLazyProc("WinControl_Show").Call(obj)
}

func WinControl_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("WinControl_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func WinControl_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetTextLen").Call(obj)
	return int32(ret)
}

func WinControl_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("WinControl_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func WinControl_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("WinControl_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func WinControl_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("WinControl_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func WinControl_Assign(obj uintptr, Source uintptr) {
	getLazyProc("WinControl_Assign").Call(obj, Source)
}

func WinControl_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("WinControl_ClassType").Call(obj)
	return TClass(ret)
}

func WinControl_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("WinControl_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func WinControl_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_InstanceSize").Call(obj)
	return int32(ret)
}

func WinControl_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("WinControl_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func WinControl_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func WinControl_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetHashCode").Call(obj)
	return int32(ret)
}

func WinControl_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("WinControl_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func WinControl_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("WinControl_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func WinControl_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("WinControl_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func WinControl_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("WinControl_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func WinControl_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("WinControl_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func WinControl_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("WinControl_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func WinControl_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("WinControl_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func WinControl_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("WinControl_AnchorClient").Call(obj, uintptr(ASpace))
}

func WinControl_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("WinControl_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func WinControl_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("WinControl_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func WinControl_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("WinControl_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func WinControl_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("WinControl_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func WinControl_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetDockClientCount").Call(obj)
	return int32(ret)
}

func WinControl_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetDockSite(obj uintptr, value bool) {
	getLazyProc("WinControl_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("WinControl_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func WinControl_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetBrush").Call(obj)
	return ret
}

func WinControl_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetControlCount").Call(obj)
	return int32(ret)
}

func WinControl_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("WinControl_GetHandle").Call(obj)
	return HWND(ret)
}

func WinControl_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("WinControl_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("WinControl_GetParentWindow").Call(obj)
	return HWND(ret)
}

func WinControl_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("WinControl_SetParentWindow").Call(obj, uintptr(value))
}

func WinControl_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("WinControl_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func WinControl_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("WinControl_SetTabOrder").Call(obj, uintptr(value))
}

func WinControl_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetTabStop(obj uintptr, value bool) {
	getLazyProc("WinControl_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("WinControl_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetEnabled(obj uintptr, value bool) {
	getLazyProc("WinControl_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetAction").Call(obj)
	return ret
}

func WinControl_SetAction(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetAction").Call(obj, value)
}

func WinControl_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("WinControl_GetAlign").Call(obj)
	return TAlign(ret)
}

func WinControl_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("WinControl_SetAlign").Call(obj, uintptr(value))
}

func WinControl_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("WinControl_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func WinControl_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("WinControl_SetAnchors").Call(obj, uintptr(value))
}

func WinControl_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("WinControl_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func WinControl_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("WinControl_SetBiDiMode").Call(obj, uintptr(value))
}

func WinControl_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("WinControl_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func WinControl_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("WinControl_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func WinControl_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetClientHeight").Call(obj)
	return int32(ret)
}

func WinControl_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("WinControl_SetClientHeight").Call(obj, uintptr(value))
}

func WinControl_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("WinControl_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func WinControl_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("WinControl_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func WinControl_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetClientWidth").Call(obj)
	return int32(ret)
}

func WinControl_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("WinControl_SetClientWidth").Call(obj, uintptr(value))
}

func WinControl_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetConstraints").Call(obj)
	return ret
}

func WinControl_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetConstraints").Call(obj, value)
}

func WinControl_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("WinControl_GetControlState").Call(obj)
	return TControlState(ret)
}

func WinControl_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("WinControl_SetControlState").Call(obj, uintptr(value))
}

func WinControl_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("WinControl_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func WinControl_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("WinControl_SetControlStyle").Call(obj, uintptr(value))
}

func WinControl_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetShowHint(obj uintptr, value bool) {
	getLazyProc("WinControl_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("WinControl_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func WinControl_SetVisible(obj uintptr, value bool) {
	getLazyProc("WinControl_SetVisible").Call(obj, GoBoolToDBool(value))
}

func WinControl_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetParent").Call(obj)
	return ret
}

func WinControl_SetParent(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetParent").Call(obj, value)
}

func WinControl_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetLeft").Call(obj)
	return int32(ret)
}

func WinControl_SetLeft(obj uintptr, value int32) {
	getLazyProc("WinControl_SetLeft").Call(obj, uintptr(value))
}

func WinControl_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetTop").Call(obj)
	return int32(ret)
}

func WinControl_SetTop(obj uintptr, value int32) {
	getLazyProc("WinControl_SetTop").Call(obj, uintptr(value))
}

func WinControl_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetWidth").Call(obj)
	return int32(ret)
}

func WinControl_SetWidth(obj uintptr, value int32) {
	getLazyProc("WinControl_SetWidth").Call(obj, uintptr(value))
}

func WinControl_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetHeight").Call(obj)
	return int32(ret)
}

func WinControl_SetHeight(obj uintptr, value int32) {
	getLazyProc("WinControl_SetHeight").Call(obj, uintptr(value))
}

func WinControl_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("WinControl_GetCursor").Call(obj)
	return TCursor(ret)
}

func WinControl_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("WinControl_SetCursor").Call(obj, uintptr(value))
}

func WinControl_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("WinControl_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func WinControl_SetHint(obj uintptr, value string) {
	getLazyProc("WinControl_SetHint").Call(obj, GoStrToDStr(value))
}

func WinControl_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetComponentCount").Call(obj)
	return int32(ret)
}

func WinControl_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("WinControl_GetComponentIndex").Call(obj)
	return int32(ret)
}

func WinControl_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("WinControl_SetComponentIndex").Call(obj, uintptr(value))
}

func WinControl_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetOwner").Call(obj)
	return ret
}

func WinControl_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("WinControl_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func WinControl_SetName(obj uintptr, value string) {
	getLazyProc("WinControl_SetName").Call(obj, GoStrToDStr(value))
}

func WinControl_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("WinControl_GetTag").Call(obj)
	return int(ret)
}

func WinControl_SetTag(obj uintptr, value int) {
	getLazyProc("WinControl_SetTag").Call(obj, uintptr(value))
}

func WinControl_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetAnchorSideLeft").Call(obj)
	return ret
}

func WinControl_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetAnchorSideLeft").Call(obj, value)
}

func WinControl_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetAnchorSideTop").Call(obj)
	return ret
}

func WinControl_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetAnchorSideTop").Call(obj, value)
}

func WinControl_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetAnchorSideRight").Call(obj)
	return ret
}

func WinControl_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetAnchorSideRight").Call(obj, value)
}

func WinControl_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetAnchorSideBottom").Call(obj)
	return ret
}

func WinControl_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetAnchorSideBottom").Call(obj, value)
}

func WinControl_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetChildSizing").Call(obj)
	return ret
}

func WinControl_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetChildSizing").Call(obj, value)
}

func WinControl_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetBorderSpacing").Call(obj)
	return ret
}

func WinControl_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("WinControl_SetBorderSpacing").Call(obj, value)
}

func WinControl_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func WinControl_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetControls").Call(obj, uintptr(Index))
	return ret
}

func WinControl_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func WinControl_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("WinControl_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func WinControl_StaticClassType() TClass {
	r, _, _ := getLazyProc("WinControl_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TScreen ---------------------------

func Screen_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Screen_Create").Call(obj)
	return ret
}

func Screen_Free(obj uintptr) {
	getLazyProc("Screen_Free").Call(obj)
}

func Screen_BeginTempCursor(obj uintptr, aCursor TCursor) {
	getLazyProc("Screen_BeginTempCursor").Call(obj, uintptr(aCursor))
}

func Screen_EndTempCursor(obj uintptr, aCursor TCursor) {
	getLazyProc("Screen_EndTempCursor").Call(obj, uintptr(aCursor))
}

func Screen_BeginWaitCursor(obj uintptr) {
	getLazyProc("Screen_BeginWaitCursor").Call(obj)
}

func Screen_EndWaitCursor(obj uintptr) {
	getLazyProc("Screen_EndWaitCursor").Call(obj)
}

func Screen_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Screen_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Screen_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Screen_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Screen_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Screen_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Screen_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Screen_Assign").Call(obj, Source)
}

func Screen_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Screen_ClassType").Call(obj)
	return TClass(ret)
}

func Screen_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Screen_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Screen_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_InstanceSize").Call(obj)
	return int32(ret)
}

func Screen_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Screen_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Screen_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Screen_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Screen_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetHashCode").Call(obj)
	return int32(ret)
}

func Screen_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Screen_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Screen_GetRealCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Screen_GetRealCursor").Call(obj)
	return TCursor(ret)
}

func Screen_GetFocusedForm(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Screen_GetFocusedForm").Call(obj)
	return ret
}

func Screen_GetActiveControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Screen_GetActiveControl").Call(obj)
	return ret
}

func Screen_GetActiveForm(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Screen_GetActiveForm").Call(obj)
	return ret
}

func Screen_GetCustomFormCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetCustomFormCount").Call(obj)
	return int32(ret)
}

func Screen_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Screen_GetCursor").Call(obj)
	return TCursor(ret)
}

func Screen_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Screen_SetCursor").Call(obj, uintptr(value))
}

func Screen_GetMonitorCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetMonitorCount").Call(obj)
	return int32(ret)
}

func Screen_GetDesktopRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Screen_GetDesktopRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Screen_GetDesktopHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetDesktopHeight").Call(obj)
	return int32(ret)
}

func Screen_GetDesktopLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetDesktopLeft").Call(obj)
	return int32(ret)
}

func Screen_GetDesktopTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetDesktopTop").Call(obj)
	return int32(ret)
}

func Screen_GetDesktopWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetDesktopWidth").Call(obj)
	return int32(ret)
}

func Screen_GetWorkAreaRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Screen_GetWorkAreaRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Screen_GetWorkAreaHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetWorkAreaHeight").Call(obj)
	return int32(ret)
}

func Screen_GetWorkAreaLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetWorkAreaLeft").Call(obj)
	return int32(ret)
}

func Screen_GetWorkAreaTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetWorkAreaTop").Call(obj)
	return int32(ret)
}

func Screen_GetWorkAreaWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetWorkAreaWidth").Call(obj)
	return int32(ret)
}

func Screen_GetFonts(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Screen_GetFonts").Call(obj)
	return ret
}

func Screen_GetFormCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetFormCount").Call(obj)
	return int32(ret)
}

func Screen_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetHeight").Call(obj)
	return int32(ret)
}

func Screen_GetPixelsPerInch(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetPixelsPerInch").Call(obj)
	return int32(ret)
}

func Screen_GetPrimaryMonitor(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Screen_GetPrimaryMonitor").Call(obj)
	return ret
}

func Screen_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetWidth").Call(obj)
	return int32(ret)
}

func Screen_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetComponentCount").Call(obj)
	return int32(ret)
}

func Screen_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Screen_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Screen_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Screen_SetComponentIndex").Call(obj, uintptr(value))
}

func Screen_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Screen_GetOwner").Call(obj)
	return ret
}

func Screen_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Screen_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Screen_SetName(obj uintptr, value string) {
	getLazyProc("Screen_SetName").Call(obj, GoStrToDStr(value))
}

func Screen_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Screen_GetTag").Call(obj)
	return int(ret)
}

func Screen_SetTag(obj uintptr, value int) {
	getLazyProc("Screen_SetTag").Call(obj, uintptr(value))
}

func Screen_GetCursors(obj uintptr, Index int32) HICON {
	ret, _, _ := getLazyProc("Screen_GetCursors").Call(obj, uintptr(Index))
	return HICON(ret)
}

func Screen_SetCursors(obj uintptr, Index int32, value HICON) {
	getLazyProc("Screen_SetCursors").Call(obj, uintptr(Index), uintptr(value))
}

func Screen_GetMonitors(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Screen_GetMonitors").Call(obj, uintptr(Index))
	return ret
}

func Screen_GetForms(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Screen_GetForms").Call(obj, uintptr(Index))
	return ret
}

func Screen_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Screen_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Screen_StaticClassType() TClass {
	r, _, _ := getLazyProc("Screen_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMouse ---------------------------

func Mouse_Create() uintptr {
	ret, _, _ := getLazyProc("Mouse_Create").Call()
	return ret
}

func Mouse_Free(obj uintptr) {
	getLazyProc("Mouse_Free").Call(obj)
}

func Mouse_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Mouse_ClassType").Call(obj)
	return TClass(ret)
}

func Mouse_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Mouse_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Mouse_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Mouse_InstanceSize").Call(obj)
	return int32(ret)
}

func Mouse_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Mouse_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Mouse_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Mouse_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Mouse_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Mouse_GetHashCode").Call(obj)
	return int32(ret)
}

func Mouse_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Mouse_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Mouse_GetCapture(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Mouse_GetCapture").Call(obj)
	return HWND(ret)
}

func Mouse_SetCapture(obj uintptr, value HWND) {
	getLazyProc("Mouse_SetCapture").Call(obj, uintptr(value))
}

func Mouse_GetCursorPos(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Mouse_GetCursorPos").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Mouse_SetCursorPos(obj uintptr, value TPoint) {
	getLazyProc("Mouse_SetCursorPos").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Mouse_GetIsDragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Mouse_GetIsDragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Mouse_GetWheelScrollLines(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Mouse_GetWheelScrollLines").Call(obj)
	return int32(ret)
}

func Mouse_StaticClassType() TClass {
	r, _, _ := getLazyProc("Mouse_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TListColumn ---------------------------

func ListColumn_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListColumn_Create").Call(obj)
	return ret
}

func ListColumn_Free(obj uintptr) {
	getLazyProc("ListColumn_Free").Call(obj)
}

func ListColumn_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ListColumn_Assign").Call(obj, Source)
}

func ListColumn_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumn_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumn_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ListColumn_ClassType").Call(obj)
	return TClass(ret)
}

func ListColumn_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumn_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumn_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_InstanceSize").Call(obj)
	return int32(ret)
}

func ListColumn_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ListColumn_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ListColumn_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ListColumn_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ListColumn_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_GetHashCode").Call(obj)
	return int32(ret)
}

func ListColumn_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumn_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumn_GetSortIndicator(obj uintptr) TSortIndicator {
	ret, _, _ := getLazyProc("ListColumn_GetSortIndicator").Call(obj)
	return TSortIndicator(ret)
}

func ListColumn_SetSortIndicator(obj uintptr, value TSortIndicator) {
	getLazyProc("ListColumn_SetSortIndicator").Call(obj, uintptr(value))
}

func ListColumn_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("ListColumn_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func ListColumn_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("ListColumn_SetAlignment").Call(obj, uintptr(value))
}

func ListColumn_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("ListColumn_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func ListColumn_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("ListColumn_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func ListColumn_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumn_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumn_SetCaption(obj uintptr, value string) {
	getLazyProc("ListColumn_SetCaption").Call(obj, GoStrToDStr(value))
}

func ListColumn_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_GetImageIndex").Call(obj)
	return int32(ret)
}

func ListColumn_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("ListColumn_SetImageIndex").Call(obj, uintptr(value))
}

func ListColumn_GetMaxWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_GetMaxWidth").Call(obj)
	return int32(ret)
}

func ListColumn_SetMaxWidth(obj uintptr, value int32) {
	getLazyProc("ListColumn_SetMaxWidth").Call(obj, uintptr(value))
}

func ListColumn_GetMinWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_GetMinWidth").Call(obj)
	return int32(ret)
}

func ListColumn_SetMinWidth(obj uintptr, value int32) {
	getLazyProc("ListColumn_SetMinWidth").Call(obj, uintptr(value))
}

func ListColumn_GetTag(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_GetTag").Call(obj)
	return int32(ret)
}

func ListColumn_SetTag(obj uintptr, value int32) {
	getLazyProc("ListColumn_SetTag").Call(obj, uintptr(value))
}

func ListColumn_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_GetWidth").Call(obj)
	return int32(ret)
}

func ListColumn_SetWidth(obj uintptr, value int32) {
	getLazyProc("ListColumn_SetWidth").Call(obj, uintptr(value))
}

func ListColumn_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ListColumn_GetCollection").Call(obj)
	return ret
}

func ListColumn_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("ListColumn_SetCollection").Call(obj, value)
}

func ListColumn_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ListColumn_GetIndex").Call(obj)
	return int32(ret)
}

func ListColumn_SetIndex(obj uintptr, value int32) {
	getLazyProc("ListColumn_SetIndex").Call(obj, uintptr(value))
}

func ListColumn_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("ListColumn_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func ListColumn_SetDisplayName(obj uintptr, value string) {
	getLazyProc("ListColumn_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func ListColumn_StaticClassType() TClass {
	r, _, _ := getLazyProc("ListColumn_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCollectionItem ---------------------------

func CollectionItem_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CollectionItem_Create").Call(obj)
	return ret
}

func CollectionItem_Free(obj uintptr) {
	getLazyProc("CollectionItem_Free").Call(obj)
}

func CollectionItem_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("CollectionItem_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func CollectionItem_Assign(obj uintptr, Source uintptr) {
	getLazyProc("CollectionItem_Assign").Call(obj, Source)
}

func CollectionItem_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("CollectionItem_ClassType").Call(obj)
	return TClass(ret)
}

func CollectionItem_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("CollectionItem_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func CollectionItem_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CollectionItem_InstanceSize").Call(obj)
	return int32(ret)
}

func CollectionItem_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("CollectionItem_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func CollectionItem_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("CollectionItem_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func CollectionItem_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CollectionItem_GetHashCode").Call(obj)
	return int32(ret)
}

func CollectionItem_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("CollectionItem_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func CollectionItem_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CollectionItem_GetCollection").Call(obj)
	return ret
}

func CollectionItem_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("CollectionItem_SetCollection").Call(obj, value)
}

func CollectionItem_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CollectionItem_GetIndex").Call(obj)
	return int32(ret)
}

func CollectionItem_SetIndex(obj uintptr, value int32) {
	getLazyProc("CollectionItem_SetIndex").Call(obj, uintptr(value))
}

func CollectionItem_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("CollectionItem_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func CollectionItem_SetDisplayName(obj uintptr, value string) {
	getLazyProc("CollectionItem_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func CollectionItem_StaticClassType() TClass {
	r, _, _ := getLazyProc("CollectionItem_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TStatusPanels ---------------------------

func StatusPanels_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusPanels_Create").Call(obj)
	return ret
}

func StatusPanels_Free(obj uintptr) {
	getLazyProc("StatusPanels_Free").Call(obj)
}

func StatusPanels_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusPanels_Add").Call(obj)
	return ret
}

func StatusPanels_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StatusPanels_Insert").Call(obj, uintptr(Index))
	return ret
}

func StatusPanels_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusPanels_Owner").Call(obj)
	return ret
}

func StatusPanels_Assign(obj uintptr, Source uintptr) {
	getLazyProc("StatusPanels_Assign").Call(obj, Source)
}

func StatusPanels_BeginUpdate(obj uintptr) {
	getLazyProc("StatusPanels_BeginUpdate").Call(obj)
}

func StatusPanels_Clear(obj uintptr) {
	getLazyProc("StatusPanels_Clear").Call(obj)
}

func StatusPanels_Delete(obj uintptr, Index int32) {
	getLazyProc("StatusPanels_Delete").Call(obj, uintptr(Index))
}

func StatusPanels_EndUpdate(obj uintptr) {
	getLazyProc("StatusPanels_EndUpdate").Call(obj)
}

func StatusPanels_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("StatusPanels_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func StatusPanels_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanels_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanels_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("StatusPanels_ClassType").Call(obj)
	return TClass(ret)
}

func StatusPanels_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanels_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanels_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanels_InstanceSize").Call(obj)
	return int32(ret)
}

func StatusPanels_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("StatusPanels_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func StatusPanels_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusPanels_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func StatusPanels_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanels_GetHashCode").Call(obj)
	return int32(ret)
}

func StatusPanels_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanels_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanels_GetCapacity(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanels_GetCapacity").Call(obj)
	return int32(ret)
}

func StatusPanels_SetCapacity(obj uintptr, value int32) {
	getLazyProc("StatusPanels_SetCapacity").Call(obj, uintptr(value))
}

func StatusPanels_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanels_GetCount").Call(obj)
	return int32(ret)
}

func StatusPanels_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StatusPanels_GetItems").Call(obj, uintptr(Index))
	return ret
}

func StatusPanels_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("StatusPanels_SetItems").Call(obj, uintptr(Index), value)
}

func StatusPanels_StaticClassType() TClass {
	r, _, _ := getLazyProc("StatusPanels_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TStatusPanel ---------------------------

func StatusPanel_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusPanel_Create").Call(obj)
	return ret
}

func StatusPanel_Free(obj uintptr) {
	getLazyProc("StatusPanel_Free").Call(obj)
}

func StatusPanel_Assign(obj uintptr, Source uintptr) {
	getLazyProc("StatusPanel_Assign").Call(obj, Source)
}

func StatusPanel_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanel_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanel_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("StatusPanel_ClassType").Call(obj)
	return TClass(ret)
}

func StatusPanel_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanel_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanel_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanel_InstanceSize").Call(obj)
	return int32(ret)
}

func StatusPanel_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("StatusPanel_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func StatusPanel_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("StatusPanel_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func StatusPanel_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanel_GetHashCode").Call(obj)
	return int32(ret)
}

func StatusPanel_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanel_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanel_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("StatusPanel_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func StatusPanel_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("StatusPanel_SetAlignment").Call(obj, uintptr(value))
}

func StatusPanel_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("StatusPanel_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func StatusPanel_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("StatusPanel_SetBiDiMode").Call(obj, uintptr(value))
}

func StatusPanel_GetStyle(obj uintptr) TStatusPanelStyle {
	ret, _, _ := getLazyProc("StatusPanel_GetStyle").Call(obj)
	return TStatusPanelStyle(ret)
}

func StatusPanel_SetStyle(obj uintptr, value TStatusPanelStyle) {
	getLazyProc("StatusPanel_SetStyle").Call(obj, uintptr(value))
}

func StatusPanel_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanel_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanel_SetText(obj uintptr, value string) {
	getLazyProc("StatusPanel_SetText").Call(obj, GoStrToDStr(value))
}

func StatusPanel_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanel_GetWidth").Call(obj)
	return int32(ret)
}

func StatusPanel_SetWidth(obj uintptr, value int32) {
	getLazyProc("StatusPanel_SetWidth").Call(obj, uintptr(value))
}

func StatusPanel_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StatusPanel_GetCollection").Call(obj)
	return ret
}

func StatusPanel_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("StatusPanel_SetCollection").Call(obj, value)
}

func StatusPanel_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StatusPanel_GetIndex").Call(obj)
	return int32(ret)
}

func StatusPanel_SetIndex(obj uintptr, value int32) {
	getLazyProc("StatusPanel_SetIndex").Call(obj, uintptr(value))
}

func StatusPanel_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("StatusPanel_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func StatusPanel_SetDisplayName(obj uintptr, value string) {
	getLazyProc("StatusPanel_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func StatusPanel_StaticClassType() TClass {
	r, _, _ := getLazyProc("StatusPanel_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TSpinEdit ---------------------------

func SpinEdit_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_Create").Call(obj)
	return ret
}

func SpinEdit_Free(obj uintptr) {
	getLazyProc("SpinEdit_Free").Call(obj)
}

func SpinEdit_Clear(obj uintptr) {
	getLazyProc("SpinEdit_Clear").Call(obj)
}

func SpinEdit_ClearSelection(obj uintptr) {
	getLazyProc("SpinEdit_ClearSelection").Call(obj)
}

func SpinEdit_CopyToClipboard(obj uintptr) {
	getLazyProc("SpinEdit_CopyToClipboard").Call(obj)
}

func SpinEdit_CutToClipboard(obj uintptr) {
	getLazyProc("SpinEdit_CutToClipboard").Call(obj)
}

func SpinEdit_PasteFromClipboard(obj uintptr) {
	getLazyProc("SpinEdit_PasteFromClipboard").Call(obj)
}

func SpinEdit_Undo(obj uintptr) {
	getLazyProc("SpinEdit_Undo").Call(obj)
}

func SpinEdit_SelectAll(obj uintptr) {
	getLazyProc("SpinEdit_SelectAll").Call(obj)
}

func SpinEdit_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func SpinEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func SpinEdit_DisableAlign(obj uintptr) {
	getLazyProc("SpinEdit_DisableAlign").Call(obj)
}

func SpinEdit_EnableAlign(obj uintptr) {
	getLazyProc("SpinEdit_EnableAlign").Call(obj)
}

func SpinEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func SpinEdit_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("SpinEdit_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func SpinEdit_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("SpinEdit_InsertControl").Call(obj, AControl)
}

func SpinEdit_Invalidate(obj uintptr) {
	getLazyProc("SpinEdit_Invalidate").Call(obj)
}

func SpinEdit_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("SpinEdit_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func SpinEdit_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("SpinEdit_RemoveControl").Call(obj, AControl)
}

func SpinEdit_Realign(obj uintptr) {
	getLazyProc("SpinEdit_Realign").Call(obj)
}

func SpinEdit_Repaint(obj uintptr) {
	getLazyProc("SpinEdit_Repaint").Call(obj)
}

func SpinEdit_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("SpinEdit_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func SpinEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("SpinEdit_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func SpinEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("SpinEdit_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func SpinEdit_SetFocus(obj uintptr) {
	getLazyProc("SpinEdit_SetFocus").Call(obj)
}

func SpinEdit_Update(obj uintptr) {
	getLazyProc("SpinEdit_Update").Call(obj)
}

func SpinEdit_BringToFront(obj uintptr) {
	getLazyProc("SpinEdit_BringToFront").Call(obj)
}

func SpinEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("SpinEdit_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpinEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("SpinEdit_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpinEdit_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_Hide(obj uintptr) {
	getLazyProc("SpinEdit_Hide").Call(obj)
}

func SpinEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("SpinEdit_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func SpinEdit_Refresh(obj uintptr) {
	getLazyProc("SpinEdit_Refresh").Call(obj)
}

func SpinEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("SpinEdit_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpinEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("SpinEdit_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpinEdit_SendToBack(obj uintptr) {
	getLazyProc("SpinEdit_SendToBack").Call(obj)
}

func SpinEdit_Show(obj uintptr) {
	getLazyProc("SpinEdit_Show").Call(obj)
}

func SpinEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("SpinEdit_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func SpinEdit_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetTextLen").Call(obj)
	return int32(ret)
}

func SpinEdit_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("SpinEdit_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func SpinEdit_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func SpinEdit_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_Assign(obj uintptr, Source uintptr) {
	getLazyProc("SpinEdit_Assign").Call(obj, Source)
}

func SpinEdit_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("SpinEdit_ClassType").Call(obj)
	return TClass(ret)
}

func SpinEdit_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_InstanceSize").Call(obj)
	return int32(ret)
}

func SpinEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("SpinEdit_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func SpinEdit_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetHashCode").Call(obj)
	return int32(ret)
}

func SpinEdit_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("SpinEdit_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func SpinEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("SpinEdit_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func SpinEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("SpinEdit_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func SpinEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("SpinEdit_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func SpinEdit_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("SpinEdit_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func SpinEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("SpinEdit_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func SpinEdit_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("SpinEdit_AnchorClient").Call(obj, uintptr(ASpace))
}

func SpinEdit_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("SpinEdit_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func SpinEdit_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("SpinEdit_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func SpinEdit_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("SpinEdit_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func SpinEdit_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("SpinEdit_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func SpinEdit_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("SpinEdit_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func SpinEdit_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("SpinEdit_SetAnchors").Call(obj, uintptr(value))
}

func SpinEdit_GetAutoSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetAutoSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetAutoSelect(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetAutoSelect").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("SpinEdit_GetColor").Call(obj)
	return TColor(ret)
}

func SpinEdit_SetColor(obj uintptr, value TColor) {
	getLazyProc("SpinEdit_SetColor").Call(obj, uintptr(value))
}

func SpinEdit_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetConstraints").Call(obj)
	return ret
}

func SpinEdit_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetConstraints").Call(obj, value)
}

func SpinEdit_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetEnabled(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetFont").Call(obj)
	return ret
}

func SpinEdit_SetFont(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetFont").Call(obj, value)
}

func SpinEdit_GetIncrement(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetIncrement").Call(obj)
	return int32(ret)
}

func SpinEdit_SetIncrement(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetIncrement").Call(obj, uintptr(value))
}

func SpinEdit_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetMaxLength").Call(obj)
	return int32(ret)
}

func SpinEdit_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetMaxLength").Call(obj, uintptr(value))
}

func SpinEdit_GetMaxValue(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetMaxValue").Call(obj)
	return int32(ret)
}

func SpinEdit_SetMaxValue(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetMaxValue").Call(obj, uintptr(value))
}

func SpinEdit_GetMinValue(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetMinValue").Call(obj)
	return int32(ret)
}

func SpinEdit_SetMinValue(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetMinValue").Call(obj, uintptr(value))
}

func SpinEdit_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetParentColor(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetParentFont(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetPopupMenu").Call(obj)
	return ret
}

func SpinEdit_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetPopupMenu").Call(obj, value)
}

func SpinEdit_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetShowHint(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("SpinEdit_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func SpinEdit_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("SpinEdit_SetTabOrder").Call(obj, uintptr(value))
}

func SpinEdit_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetTabStop(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetValue(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetValue").Call(obj)
	return int32(ret)
}

func SpinEdit_SetValue(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetValue").Call(obj, uintptr(value))
}

func SpinEdit_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetVisible(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetVisible").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("SpinEdit_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func SpinEdit_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("SpinEdit_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func SpinEdit_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("SpinEdit_SetAlignment").Call(obj, uintptr(value))
}

func SpinEdit_GetCanUndo(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetCanUndo").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetModified(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetModified").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetSelLength").Call(obj)
	return int32(ret)
}

func SpinEdit_SetSelLength(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetSelLength").Call(obj, uintptr(value))
}

func SpinEdit_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetSelStart").Call(obj)
	return int32(ret)
}

func SpinEdit_SetSelStart(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetSelStart").Call(obj, uintptr(value))
}

func SpinEdit_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_SetSelText(obj uintptr, value string) {
	getLazyProc("SpinEdit_SetSelText").Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_SetText(obj uintptr, value string) {
	getLazyProc("SpinEdit_SetText").Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetTextHint(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_GetTextHint").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_SetTextHint(obj uintptr, value string) {
	getLazyProc("SpinEdit_SetTextHint").Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetDockClientCount").Call(obj)
	return int32(ret)
}

func SpinEdit_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetDockSite(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func SpinEdit_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetBrush").Call(obj)
	return ret
}

func SpinEdit_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetControlCount").Call(obj)
	return int32(ret)
}

func SpinEdit_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("SpinEdit_GetHandle").Call(obj)
	return HWND(ret)
}

func SpinEdit_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("SpinEdit_GetParentWindow").Call(obj)
	return HWND(ret)
}

func SpinEdit_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("SpinEdit_SetParentWindow").Call(obj, uintptr(value))
}

func SpinEdit_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("SpinEdit_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetAction").Call(obj)
	return ret
}

func SpinEdit_SetAction(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetAction").Call(obj, value)
}

func SpinEdit_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("SpinEdit_GetAlign").Call(obj)
	return TAlign(ret)
}

func SpinEdit_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("SpinEdit_SetAlign").Call(obj, uintptr(value))
}

func SpinEdit_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("SpinEdit_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func SpinEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("SpinEdit_SetBiDiMode").Call(obj, uintptr(value))
}

func SpinEdit_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("SpinEdit_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpinEdit_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("SpinEdit_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func SpinEdit_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetClientHeight").Call(obj)
	return int32(ret)
}

func SpinEdit_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetClientHeight").Call(obj, uintptr(value))
}

func SpinEdit_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("SpinEdit_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpinEdit_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("SpinEdit_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func SpinEdit_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetClientWidth").Call(obj)
	return int32(ret)
}

func SpinEdit_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetClientWidth").Call(obj, uintptr(value))
}

func SpinEdit_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("SpinEdit_GetControlState").Call(obj)
	return TControlState(ret)
}

func SpinEdit_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("SpinEdit_SetControlState").Call(obj, uintptr(value))
}

func SpinEdit_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("SpinEdit_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func SpinEdit_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("SpinEdit_SetControlStyle").Call(obj, uintptr(value))
}

func SpinEdit_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("SpinEdit_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func SpinEdit_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetParent").Call(obj)
	return ret
}

func SpinEdit_SetParent(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetParent").Call(obj, value)
}

func SpinEdit_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetLeft").Call(obj)
	return int32(ret)
}

func SpinEdit_SetLeft(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetLeft").Call(obj, uintptr(value))
}

func SpinEdit_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetTop").Call(obj)
	return int32(ret)
}

func SpinEdit_SetTop(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetTop").Call(obj, uintptr(value))
}

func SpinEdit_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetWidth").Call(obj)
	return int32(ret)
}

func SpinEdit_SetWidth(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetWidth").Call(obj, uintptr(value))
}

func SpinEdit_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetHeight").Call(obj)
	return int32(ret)
}

func SpinEdit_SetHeight(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetHeight").Call(obj, uintptr(value))
}

func SpinEdit_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("SpinEdit_GetCursor").Call(obj)
	return TCursor(ret)
}

func SpinEdit_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("SpinEdit_SetCursor").Call(obj, uintptr(value))
}

func SpinEdit_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_SetHint(obj uintptr, value string) {
	getLazyProc("SpinEdit_SetHint").Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetComponentCount").Call(obj)
	return int32(ret)
}

func SpinEdit_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SpinEdit_GetComponentIndex").Call(obj)
	return int32(ret)
}

func SpinEdit_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("SpinEdit_SetComponentIndex").Call(obj, uintptr(value))
}

func SpinEdit_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetOwner").Call(obj)
	return ret
}

func SpinEdit_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("SpinEdit_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func SpinEdit_SetName(obj uintptr, value string) {
	getLazyProc("SpinEdit_SetName").Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("SpinEdit_GetTag").Call(obj)
	return int(ret)
}

func SpinEdit_SetTag(obj uintptr, value int) {
	getLazyProc("SpinEdit_SetTag").Call(obj, uintptr(value))
}

func SpinEdit_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetAnchorSideLeft").Call(obj)
	return ret
}

func SpinEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetAnchorSideLeft").Call(obj, value)
}

func SpinEdit_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetAnchorSideTop").Call(obj)
	return ret
}

func SpinEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetAnchorSideTop").Call(obj, value)
}

func SpinEdit_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetAnchorSideRight").Call(obj)
	return ret
}

func SpinEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetAnchorSideRight").Call(obj, value)
}

func SpinEdit_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetAnchorSideBottom").Call(obj)
	return ret
}

func SpinEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetAnchorSideBottom").Call(obj, value)
}

func SpinEdit_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetChildSizing").Call(obj)
	return ret
}

func SpinEdit_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetChildSizing").Call(obj, value)
}

func SpinEdit_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetBorderSpacing").Call(obj)
	return ret
}

func SpinEdit_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("SpinEdit_SetBorderSpacing").Call(obj, value)
}

func SpinEdit_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func SpinEdit_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetControls").Call(obj, uintptr(Index))
	return ret
}

func SpinEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func SpinEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("SpinEdit_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func SpinEdit_StaticClassType() TClass {
	r, _, _ := getLazyProc("SpinEdit_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMiniWebview ---------------------------

func MiniWebview_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_Create").Call(obj)
	return ret
}

func MiniWebview_Free(obj uintptr) {
	getLazyProc("MiniWebview_Free").Call(obj)
}

func MiniWebview_Navigate(obj uintptr, AURL string) {
	getLazyProc("MiniWebview_Navigate").Call(obj, GoStrToDStr(AURL))
}

func MiniWebview_GoBack(obj uintptr) {
	getLazyProc("MiniWebview_GoBack").Call(obj)
}

func MiniWebview_GoForward(obj uintptr) {
	getLazyProc("MiniWebview_GoForward").Call(obj)
}

func MiniWebview_GoHome(obj uintptr) {
	getLazyProc("MiniWebview_GoHome").Call(obj)
}

func MiniWebview_GoSearch(obj uintptr) {
	getLazyProc("MiniWebview_GoSearch").Call(obj)
}

func MiniWebview_Refresh(obj uintptr) {
	getLazyProc("MiniWebview_Refresh").Call(obj)
}

func MiniWebview_Stop(obj uintptr) {
	getLazyProc("MiniWebview_Stop").Call(obj)
}

func MiniWebview_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("MiniWebview_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func MiniWebview_ExecuteScript(obj uintptr, AScriptText string, AScriptType string) string {
	ret, _, _ := getLazyProc("MiniWebview_ExecuteScript").Call(obj, GoStrToDStr(AScriptText), GoStrToDStr(AScriptType))
	return DStrToGoStr(ret)
}

func MiniWebview_ExecuteJS(obj uintptr, AScriptText string) string {
	ret, _, _ := getLazyProc("MiniWebview_ExecuteJS").Call(obj, GoStrToDStr(AScriptText))
	return DStrToGoStr(ret)
}

func MiniWebview_LoadHTML(obj uintptr, AStr string) {
	getLazyProc("MiniWebview_LoadHTML").Call(obj, GoStrToDStr(AStr))
}

func MiniWebview_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func MiniWebview_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func MiniWebview_DisableAlign(obj uintptr) {
	getLazyProc("MiniWebview_DisableAlign").Call(obj)
}

func MiniWebview_EnableAlign(obj uintptr) {
	getLazyProc("MiniWebview_EnableAlign").Call(obj)
}

func MiniWebview_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func MiniWebview_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("MiniWebview_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func MiniWebview_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("MiniWebview_InsertControl").Call(obj, AControl)
}

func MiniWebview_Invalidate(obj uintptr) {
	getLazyProc("MiniWebview_Invalidate").Call(obj)
}

func MiniWebview_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("MiniWebview_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func MiniWebview_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("MiniWebview_RemoveControl").Call(obj, AControl)
}

func MiniWebview_Realign(obj uintptr) {
	getLazyProc("MiniWebview_Realign").Call(obj)
}

func MiniWebview_Repaint(obj uintptr) {
	getLazyProc("MiniWebview_Repaint").Call(obj)
}

func MiniWebview_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("MiniWebview_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func MiniWebview_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("MiniWebview_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func MiniWebview_SetFocus(obj uintptr) {
	getLazyProc("MiniWebview_SetFocus").Call(obj)
}

func MiniWebview_Update(obj uintptr) {
	getLazyProc("MiniWebview_Update").Call(obj)
}

func MiniWebview_BringToFront(obj uintptr) {
	getLazyProc("MiniWebview_BringToFront").Call(obj)
}

func MiniWebview_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("MiniWebview_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MiniWebview_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("MiniWebview_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MiniWebview_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_Hide(obj uintptr) {
	getLazyProc("MiniWebview_Hide").Call(obj)
}

func MiniWebview_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("MiniWebview_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func MiniWebview_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("MiniWebview_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MiniWebview_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("MiniWebview_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MiniWebview_SendToBack(obj uintptr) {
	getLazyProc("MiniWebview_SendToBack").Call(obj)
}

func MiniWebview_Show(obj uintptr) {
	getLazyProc("MiniWebview_Show").Call(obj)
}

func MiniWebview_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("MiniWebview_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func MiniWebview_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetTextLen").Call(obj)
	return int32(ret)
}

func MiniWebview_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("MiniWebview_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func MiniWebview_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func MiniWebview_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("MiniWebview_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func MiniWebview_Assign(obj uintptr, Source uintptr) {
	getLazyProc("MiniWebview_Assign").Call(obj, Source)
}

func MiniWebview_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("MiniWebview_ClassType").Call(obj)
	return TClass(ret)
}

func MiniWebview_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("MiniWebview_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func MiniWebview_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_InstanceSize").Call(obj)
	return int32(ret)
}

func MiniWebview_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("MiniWebview_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func MiniWebview_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetHashCode").Call(obj)
	return int32(ret)
}

func MiniWebview_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("MiniWebview_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func MiniWebview_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("MiniWebview_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func MiniWebview_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("MiniWebview_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func MiniWebview_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("MiniWebview_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func MiniWebview_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("MiniWebview_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func MiniWebview_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("MiniWebview_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func MiniWebview_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("MiniWebview_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func MiniWebview_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("MiniWebview_AnchorClient").Call(obj, uintptr(ASpace))
}

func MiniWebview_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MiniWebview_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MiniWebview_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("MiniWebview_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func MiniWebview_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("MiniWebview_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func MiniWebview_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("MiniWebview_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func MiniWebview_GetReadyState(obj uintptr) TReadyState {
	ret, _, _ := getLazyProc("MiniWebview_GetReadyState").Call(obj)
	return TReadyState(ret)
}

func MiniWebview_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("MiniWebview_GetAlign").Call(obj)
	return TAlign(ret)
}

func MiniWebview_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("MiniWebview_SetAlign").Call(obj, uintptr(value))
}

func MiniWebview_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("MiniWebview_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func MiniWebview_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("MiniWebview_SetAnchors").Call(obj, uintptr(value))
}

func MiniWebview_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetConstraints").Call(obj)
	return ret
}

func MiniWebview_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetConstraints").Call(obj, value)
}

func MiniWebview_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetEnabled(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetVisible(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetVisible").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_SetOnTitleChange(obj uintptr, fn interface{}) {
	getLazyProc("MiniWebview_SetOnTitleChange").Call(obj, addEventToMap(obj, fn))
}

func MiniWebview_SetOnJSExternal(obj uintptr, fn interface{}) {
	getLazyProc("MiniWebview_SetOnJSExternal").Call(obj, addEventToMap(obj, fn))
}

func MiniWebview_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetDockClientCount").Call(obj)
	return int32(ret)
}

func MiniWebview_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetDockSite(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func MiniWebview_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetBrush").Call(obj)
	return ret
}

func MiniWebview_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetControlCount").Call(obj)
	return int32(ret)
}

func MiniWebview_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("MiniWebview_GetHandle").Call(obj)
	return HWND(ret)
}

func MiniWebview_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("MiniWebview_GetParentWindow").Call(obj)
	return HWND(ret)
}

func MiniWebview_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("MiniWebview_SetParentWindow").Call(obj, uintptr(value))
}

func MiniWebview_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("MiniWebview_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func MiniWebview_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("MiniWebview_SetTabOrder").Call(obj, uintptr(value))
}

func MiniWebview_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetTabStop(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetAction").Call(obj)
	return ret
}

func MiniWebview_SetAction(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetAction").Call(obj, value)
}

func MiniWebview_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("MiniWebview_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func MiniWebview_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("MiniWebview_SetBiDiMode").Call(obj, uintptr(value))
}

func MiniWebview_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("MiniWebview_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MiniWebview_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("MiniWebview_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MiniWebview_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetClientHeight").Call(obj)
	return int32(ret)
}

func MiniWebview_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("MiniWebview_SetClientHeight").Call(obj, uintptr(value))
}

func MiniWebview_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("MiniWebview_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MiniWebview_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("MiniWebview_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MiniWebview_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetClientWidth").Call(obj)
	return int32(ret)
}

func MiniWebview_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("MiniWebview_SetClientWidth").Call(obj, uintptr(value))
}

func MiniWebview_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("MiniWebview_GetControlState").Call(obj)
	return TControlState(ret)
}

func MiniWebview_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("MiniWebview_SetControlState").Call(obj, uintptr(value))
}

func MiniWebview_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("MiniWebview_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func MiniWebview_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("MiniWebview_SetControlStyle").Call(obj, uintptr(value))
}

func MiniWebview_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("MiniWebview_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func MiniWebview_SetShowHint(obj uintptr, value bool) {
	getLazyProc("MiniWebview_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetParent").Call(obj)
	return ret
}

func MiniWebview_SetParent(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetParent").Call(obj, value)
}

func MiniWebview_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetLeft").Call(obj)
	return int32(ret)
}

func MiniWebview_SetLeft(obj uintptr, value int32) {
	getLazyProc("MiniWebview_SetLeft").Call(obj, uintptr(value))
}

func MiniWebview_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetTop").Call(obj)
	return int32(ret)
}

func MiniWebview_SetTop(obj uintptr, value int32) {
	getLazyProc("MiniWebview_SetTop").Call(obj, uintptr(value))
}

func MiniWebview_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetWidth").Call(obj)
	return int32(ret)
}

func MiniWebview_SetWidth(obj uintptr, value int32) {
	getLazyProc("MiniWebview_SetWidth").Call(obj, uintptr(value))
}

func MiniWebview_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetHeight").Call(obj)
	return int32(ret)
}

func MiniWebview_SetHeight(obj uintptr, value int32) {
	getLazyProc("MiniWebview_SetHeight").Call(obj, uintptr(value))
}

func MiniWebview_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("MiniWebview_GetCursor").Call(obj)
	return TCursor(ret)
}

func MiniWebview_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("MiniWebview_SetCursor").Call(obj, uintptr(value))
}

func MiniWebview_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("MiniWebview_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func MiniWebview_SetHint(obj uintptr, value string) {
	getLazyProc("MiniWebview_SetHint").Call(obj, GoStrToDStr(value))
}

func MiniWebview_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetComponentCount").Call(obj)
	return int32(ret)
}

func MiniWebview_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MiniWebview_GetComponentIndex").Call(obj)
	return int32(ret)
}

func MiniWebview_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("MiniWebview_SetComponentIndex").Call(obj, uintptr(value))
}

func MiniWebview_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetOwner").Call(obj)
	return ret
}

func MiniWebview_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("MiniWebview_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func MiniWebview_SetName(obj uintptr, value string) {
	getLazyProc("MiniWebview_SetName").Call(obj, GoStrToDStr(value))
}

func MiniWebview_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("MiniWebview_GetTag").Call(obj)
	return int(ret)
}

func MiniWebview_SetTag(obj uintptr, value int) {
	getLazyProc("MiniWebview_SetTag").Call(obj, uintptr(value))
}

func MiniWebview_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetAnchorSideLeft").Call(obj)
	return ret
}

func MiniWebview_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetAnchorSideLeft").Call(obj, value)
}

func MiniWebview_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetAnchorSideTop").Call(obj)
	return ret
}

func MiniWebview_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetAnchorSideTop").Call(obj, value)
}

func MiniWebview_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetAnchorSideRight").Call(obj)
	return ret
}

func MiniWebview_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetAnchorSideRight").Call(obj, value)
}

func MiniWebview_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetAnchorSideBottom").Call(obj)
	return ret
}

func MiniWebview_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetAnchorSideBottom").Call(obj, value)
}

func MiniWebview_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetChildSizing").Call(obj)
	return ret
}

func MiniWebview_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetChildSizing").Call(obj, value)
}

func MiniWebview_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetBorderSpacing").Call(obj)
	return ret
}

func MiniWebview_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("MiniWebview_SetBorderSpacing").Call(obj, value)
}

func MiniWebview_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func MiniWebview_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetControls").Call(obj, uintptr(Index))
	return ret
}

func MiniWebview_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func MiniWebview_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("MiniWebview_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func MiniWebview_StaticClassType() TClass {
	r, _, _ := getLazyProc("MiniWebview_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCanvas ---------------------------

func Canvas_Create() uintptr {
	ret, _, _ := getLazyProc("Canvas_Create").Call()
	return ret
}

func Canvas_Free(obj uintptr) {
	getLazyProc("Canvas_Free").Call(obj)
}

func Canvas_Arc(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32) {
	getLazyProc("Canvas_Arc").Call(obj, uintptr(X1), uintptr(Y1), uintptr(X2), uintptr(Y2), uintptr(X3), uintptr(Y3), uintptr(X4), uintptr(Y4))
}

func Canvas_ArcTo(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32) {
	getLazyProc("Canvas_ArcTo").Call(obj, uintptr(X1), uintptr(Y1), uintptr(X2), uintptr(Y2), uintptr(X3), uintptr(Y3), uintptr(X4), uintptr(Y4))
}

func Canvas_AngleArc(obj uintptr, X int32, Y int32, Radius uint32, StartAngle float32, SweepAngle float32) {
	getLazyProc("Canvas_AngleArc").Call(obj, uintptr(X), uintptr(Y), uintptr(Radius), uintptr(unsafe.Pointer(&StartAngle)), uintptr(unsafe.Pointer(&SweepAngle)))
}

func Canvas_Chord(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32) {
	getLazyProc("Canvas_Chord").Call(obj, uintptr(X1), uintptr(Y1), uintptr(X2), uintptr(Y2), uintptr(X3), uintptr(Y3), uintptr(X4), uintptr(Y4))
}

func Canvas_Ellipse(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32) {
	getLazyProc("Canvas_Ellipse").Call(obj, uintptr(X1), uintptr(Y1), uintptr(X2), uintptr(Y2))
}

func Canvas_FloodFill(obj uintptr, X int32, Y int32, Color TColor, FillStyle TFillStyle) {
	getLazyProc("Canvas_FloodFill").Call(obj, uintptr(X), uintptr(Y), uintptr(Color), uintptr(FillStyle))
}

func Canvas_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Canvas_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Canvas_LineTo(obj uintptr, X int32, Y int32) {
	getLazyProc("Canvas_LineTo").Call(obj, uintptr(X), uintptr(Y))
}

func Canvas_MoveTo(obj uintptr, X int32, Y int32) {
	getLazyProc("Canvas_MoveTo").Call(obj, uintptr(X), uintptr(Y))
}

func Canvas_Pie(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32) {
	getLazyProc("Canvas_Pie").Call(obj, uintptr(X1), uintptr(Y1), uintptr(X2), uintptr(Y2), uintptr(X3), uintptr(Y3), uintptr(X4), uintptr(Y4))
}

func Canvas_Rectangle(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32) {
	getLazyProc("Canvas_Rectangle").Call(obj, uintptr(X1), uintptr(Y1), uintptr(X2), uintptr(Y2))
}

func Canvas_Refresh(obj uintptr) {
	getLazyProc("Canvas_Refresh").Call(obj)
}

func Canvas_RoundRect(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32) {
	getLazyProc("Canvas_RoundRect").Call(obj, uintptr(X1), uintptr(Y1), uintptr(X2), uintptr(Y2), uintptr(X3), uintptr(Y3))
}

func Canvas_StretchDraw(obj uintptr, Rect TRect, Graphic uintptr) {
	getLazyProc("Canvas_StretchDraw").Call(obj, uintptr(unsafe.Pointer(&Rect)), Graphic)
}

func Canvas_TextExtent(obj uintptr, Text string) TSize {
	var ret TSize
	getLazyProc("Canvas_TextExtent").Call(obj, GoStrToDStr(Text), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Canvas_TextOut(obj uintptr, X int32, Y int32, Text string) {
	getLazyProc("Canvas_TextOut").Call(obj, uintptr(X), uintptr(Y), GoStrToDStr(Text))
}

func Canvas_Lock(obj uintptr) {
	getLazyProc("Canvas_Lock").Call(obj)
}

func Canvas_TextHeight(obj uintptr, Text string) int32 {
	ret, _, _ := getLazyProc("Canvas_TextHeight").Call(obj, GoStrToDStr(Text))
	return int32(ret)
}

func Canvas_TextWidth(obj uintptr, Text string) int32 {
	ret, _, _ := getLazyProc("Canvas_TextWidth").Call(obj, GoStrToDStr(Text))
	return int32(ret)
}

func Canvas_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Canvas_Assign").Call(obj, Source)
}

func Canvas_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Canvas_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Canvas_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Canvas_ClassType").Call(obj)
	return TClass(ret)
}

func Canvas_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Canvas_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Canvas_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Canvas_InstanceSize").Call(obj)
	return int32(ret)
}

func Canvas_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Canvas_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Canvas_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Canvas_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Canvas_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Canvas_GetHashCode").Call(obj)
	return int32(ret)
}

func Canvas_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Canvas_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Canvas_GetHandle(obj uintptr) HDC {
	ret, _, _ := getLazyProc("Canvas_GetHandle").Call(obj)
	return HDC(ret)
}

func Canvas_SetHandle(obj uintptr, value HDC) {
	getLazyProc("Canvas_SetHandle").Call(obj, uintptr(value))
}

func Canvas_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Canvas_GetBrush").Call(obj)
	return ret
}

func Canvas_SetBrush(obj uintptr, value uintptr) {
	getLazyProc("Canvas_SetBrush").Call(obj, value)
}

func Canvas_GetCopyMode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Canvas_GetCopyMode").Call(obj)
	return int32(ret)
}

func Canvas_SetCopyMode(obj uintptr, value int32) {
	getLazyProc("Canvas_SetCopyMode").Call(obj, uintptr(value))
}

func Canvas_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Canvas_GetFont").Call(obj)
	return ret
}

func Canvas_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Canvas_SetFont").Call(obj, value)
}

func Canvas_GetPen(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Canvas_GetPen").Call(obj)
	return ret
}

func Canvas_SetPen(obj uintptr, value uintptr) {
	getLazyProc("Canvas_SetPen").Call(obj, value)
}

func Canvas_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Canvas_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Canvas_SetOnChanging(obj uintptr, fn interface{}) {
	getLazyProc("Canvas_SetOnChanging").Call(obj, addEventToMap(obj, fn))
}

func Canvas_GetPixels(obj uintptr, X int32, Y int32) TColor {
	ret, _, _ := getLazyProc("Canvas_GetPixels").Call(obj, uintptr(X), uintptr(Y))
	return TColor(ret)
}

func Canvas_SetPixels(obj uintptr, X int32, Y int32, value TColor) {
	getLazyProc("Canvas_SetPixels").Call(obj, uintptr(X), uintptr(Y), uintptr(value))
}

func Canvas_StaticClassType() TClass {
	r, _, _ := getLazyProc("Canvas_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TObject ---------------------------

func Object_Create() uintptr {
	ret, _, _ := getLazyProc("Object_Create").Call()
	return ret
}

func Object_Free(obj uintptr) {
	getLazyProc("Object_Free").Call(obj)
}

func Object_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Object_ClassType").Call(obj)
	return TClass(ret)
}

func Object_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Object_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Object_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Object_InstanceSize").Call(obj)
	return int32(ret)
}

func Object_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Object_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Object_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Object_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Object_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Object_GetHashCode").Call(obj)
	return int32(ret)
}

func Object_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Object_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Object_StaticClassType() TClass {
	r, _, _ := getLazyProc("Object_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TGraphic ---------------------------

func Graphic_Create() uintptr {
	ret, _, _ := getLazyProc("Graphic_Create").Call()
	return ret
}

func Graphic_Free(obj uintptr) {
	getLazyProc("Graphic_Free").Call(obj)
}

func Graphic_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Graphic_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Graphic_LoadFromFile(obj uintptr, Filename string) {
	getLazyProc("Graphic_LoadFromFile").Call(obj, GoStrToDStr(Filename))
}

func Graphic_SaveToFile(obj uintptr, Filename string) {
	getLazyProc("Graphic_SaveToFile").Call(obj, GoStrToDStr(Filename))
}

func Graphic_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("Graphic_LoadFromStream").Call(obj, Stream)
}

func Graphic_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("Graphic_SaveToStream").Call(obj, Stream)
}

func Graphic_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Graphic_Assign").Call(obj, Source)
}

func Graphic_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Graphic_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Graphic_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Graphic_ClassType").Call(obj)
	return TClass(ret)
}

func Graphic_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Graphic_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Graphic_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Graphic_InstanceSize").Call(obj)
	return int32(ret)
}

func Graphic_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Graphic_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Graphic_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Graphic_GetHashCode").Call(obj)
	return int32(ret)
}

func Graphic_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Graphic_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Graphic_GetEmpty(obj uintptr) bool {
	ret, _, _ := getLazyProc("Graphic_GetEmpty").Call(obj)
	return DBoolToGoBool(ret)
}

func Graphic_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Graphic_GetHeight").Call(obj)
	return int32(ret)
}

func Graphic_SetHeight(obj uintptr, value int32) {
	getLazyProc("Graphic_SetHeight").Call(obj, uintptr(value))
}

func Graphic_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Graphic_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Graphic_SetModified(obj uintptr, value bool) {
	getLazyProc("Graphic_SetModified").Call(obj, GoBoolToDBool(value))
}

func Graphic_GetPalette(obj uintptr) HPALETTE {
	ret, _, _ := getLazyProc("Graphic_GetPalette").Call(obj)
	return HPALETTE(ret)
}

func Graphic_SetPalette(obj uintptr, value HPALETTE) {
	getLazyProc("Graphic_SetPalette").Call(obj, uintptr(value))
}

func Graphic_GetPaletteModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("Graphic_GetPaletteModified").Call(obj)
	return DBoolToGoBool(ret)
}

func Graphic_SetPaletteModified(obj uintptr, value bool) {
	getLazyProc("Graphic_SetPaletteModified").Call(obj, GoBoolToDBool(value))
}

func Graphic_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Graphic_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func Graphic_SetTransparent(obj uintptr, value bool) {
	getLazyProc("Graphic_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func Graphic_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Graphic_GetWidth").Call(obj)
	return int32(ret)
}

func Graphic_SetWidth(obj uintptr, value int32) {
	getLazyProc("Graphic_SetWidth").Call(obj, uintptr(value))
}

func Graphic_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("Graphic_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func Graphic_StaticClassType() TClass {
	r, _, _ := getLazyProc("Graphic_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPngImage ---------------------------

func PngImage_Create() uintptr {
	ret, _, _ := getLazyProc("PngImage_Create").Call()
	return ret
}

func PngImage_Free(obj uintptr) {
	getLazyProc("PngImage_Free").Call(obj)
}

func PngImage_Assign(obj uintptr, Source uintptr) {
	getLazyProc("PngImage_Assign").Call(obj, Source)
}

func PngImage_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("PngImage_LoadFromStream").Call(obj, Stream)
}

func PngImage_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("PngImage_SaveToStream").Call(obj, Stream)
}

func PngImage_LoadFromResourceName(obj uintptr, Instance uintptr, Name string) {
	getLazyProc("PngImage_LoadFromResourceName").Call(obj, Instance, GoStrToDStr(Name))
}

func PngImage_LoadFromResourceID(obj uintptr, Instance uintptr, ResID int32) {
	getLazyProc("PngImage_LoadFromResourceID").Call(obj, Instance, uintptr(ResID))
}

func PngImage_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("PngImage_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func PngImage_LoadFromFile(obj uintptr, Filename string) {
	getLazyProc("PngImage_LoadFromFile").Call(obj, GoStrToDStr(Filename))
}

func PngImage_SaveToFile(obj uintptr, Filename string) {
	getLazyProc("PngImage_SaveToFile").Call(obj, GoStrToDStr(Filename))
}

func PngImage_SetSize(obj uintptr, AWidth int32, AHeight int32) {
	getLazyProc("PngImage_SetSize").Call(obj, uintptr(AWidth), uintptr(AHeight))
}

func PngImage_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("PngImage_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func PngImage_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("PngImage_ClassType").Call(obj)
	return TClass(ret)
}

func PngImage_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("PngImage_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func PngImage_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PngImage_InstanceSize").Call(obj)
	return int32(ret)
}

func PngImage_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("PngImage_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func PngImage_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PngImage_GetHashCode").Call(obj)
	return int32(ret)
}

func PngImage_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("PngImage_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func PngImage_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PngImage_GetCanvas").Call(obj)
	return ret
}

func PngImage_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PngImage_GetWidth").Call(obj)
	return int32(ret)
}

func PngImage_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PngImage_GetHeight").Call(obj)
	return int32(ret)
}

func PngImage_GetEmpty(obj uintptr) bool {
	ret, _, _ := getLazyProc("PngImage_GetEmpty").Call(obj)
	return DBoolToGoBool(ret)
}

func PngImage_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("PngImage_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func PngImage_SetModified(obj uintptr, value bool) {
	getLazyProc("PngImage_SetModified").Call(obj, GoBoolToDBool(value))
}

func PngImage_GetPalette(obj uintptr) HPALETTE {
	ret, _, _ := getLazyProc("PngImage_GetPalette").Call(obj)
	return HPALETTE(ret)
}

func PngImage_SetPalette(obj uintptr, value HPALETTE) {
	getLazyProc("PngImage_SetPalette").Call(obj, uintptr(value))
}

func PngImage_GetPaletteModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("PngImage_GetPaletteModified").Call(obj)
	return DBoolToGoBool(ret)
}

func PngImage_SetPaletteModified(obj uintptr, value bool) {
	getLazyProc("PngImage_SetPaletteModified").Call(obj, GoBoolToDBool(value))
}

func PngImage_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("PngImage_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func PngImage_SetTransparent(obj uintptr, value bool) {
	getLazyProc("PngImage_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func PngImage_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("PngImage_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func PngImage_StaticClassType() TClass {
	r, _, _ := getLazyProc("PngImage_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TJPEGImage ---------------------------

func JPEGImage_Create() uintptr {
	ret, _, _ := getLazyProc("JPEGImage_Create").Call()
	return ret
}

func JPEGImage_Free(obj uintptr) {
	getLazyProc("JPEGImage_Free").Call(obj)
}

func JPEGImage_Assign(obj uintptr, Source uintptr) {
	getLazyProc("JPEGImage_Assign").Call(obj, Source)
}

func JPEGImage_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("JPEGImage_LoadFromStream").Call(obj, Stream)
}

func JPEGImage_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("JPEGImage_SaveToStream").Call(obj, Stream)
}

func JPEGImage_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("JPEGImage_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func JPEGImage_LoadFromFile(obj uintptr, Filename string) {
	getLazyProc("JPEGImage_LoadFromFile").Call(obj, GoStrToDStr(Filename))
}

func JPEGImage_SaveToFile(obj uintptr, Filename string) {
	getLazyProc("JPEGImage_SaveToFile").Call(obj, GoStrToDStr(Filename))
}

func JPEGImage_SetSize(obj uintptr, AWidth int32, AHeight int32) {
	getLazyProc("JPEGImage_SetSize").Call(obj, uintptr(AWidth), uintptr(AHeight))
}

func JPEGImage_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("JPEGImage_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func JPEGImage_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("JPEGImage_ClassType").Call(obj)
	return TClass(ret)
}

func JPEGImage_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("JPEGImage_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func JPEGImage_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("JPEGImage_InstanceSize").Call(obj)
	return int32(ret)
}

func JPEGImage_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("JPEGImage_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func JPEGImage_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("JPEGImage_GetHashCode").Call(obj)
	return int32(ret)
}

func JPEGImage_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("JPEGImage_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func JPEGImage_GetPixelFormat(obj uintptr) TJPEGPixelFormat {
	ret, _, _ := getLazyProc("JPEGImage_GetPixelFormat").Call(obj)
	return TJPEGPixelFormat(ret)
}

func JPEGImage_SetPixelFormat(obj uintptr, value TJPEGPixelFormat) {
	getLazyProc("JPEGImage_SetPixelFormat").Call(obj, uintptr(value))
}

func JPEGImage_GetPerformance(obj uintptr) TJPEGPerformance {
	ret, _, _ := getLazyProc("JPEGImage_GetPerformance").Call(obj)
	return TJPEGPerformance(ret)
}

func JPEGImage_SetPerformance(obj uintptr, value TJPEGPerformance) {
	getLazyProc("JPEGImage_SetPerformance").Call(obj, uintptr(value))
}

func JPEGImage_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("JPEGImage_GetCanvas").Call(obj)
	return ret
}

func JPEGImage_GetEmpty(obj uintptr) bool {
	ret, _, _ := getLazyProc("JPEGImage_GetEmpty").Call(obj)
	return DBoolToGoBool(ret)
}

func JPEGImage_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("JPEGImage_GetHeight").Call(obj)
	return int32(ret)
}

func JPEGImage_SetHeight(obj uintptr, value int32) {
	getLazyProc("JPEGImage_SetHeight").Call(obj, uintptr(value))
}

func JPEGImage_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("JPEGImage_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func JPEGImage_SetModified(obj uintptr, value bool) {
	getLazyProc("JPEGImage_SetModified").Call(obj, GoBoolToDBool(value))
}

func JPEGImage_GetPalette(obj uintptr) HPALETTE {
	ret, _, _ := getLazyProc("JPEGImage_GetPalette").Call(obj)
	return HPALETTE(ret)
}

func JPEGImage_SetPalette(obj uintptr, value HPALETTE) {
	getLazyProc("JPEGImage_SetPalette").Call(obj, uintptr(value))
}

func JPEGImage_GetPaletteModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("JPEGImage_GetPaletteModified").Call(obj)
	return DBoolToGoBool(ret)
}

func JPEGImage_SetPaletteModified(obj uintptr, value bool) {
	getLazyProc("JPEGImage_SetPaletteModified").Call(obj, GoBoolToDBool(value))
}

func JPEGImage_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("JPEGImage_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func JPEGImage_SetTransparent(obj uintptr, value bool) {
	getLazyProc("JPEGImage_SetTransparent").Call(obj, GoBoolToDBool(value))
}

func JPEGImage_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("JPEGImage_GetWidth").Call(obj)
	return int32(ret)
}

func JPEGImage_SetWidth(obj uintptr, value int32) {
	getLazyProc("JPEGImage_SetWidth").Call(obj, uintptr(value))
}

func JPEGImage_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("JPEGImage_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func JPEGImage_StaticClassType() TClass {
	r, _, _ := getLazyProc("JPEGImage_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TGIFImage ---------------------------

func GIFImage_Create() uintptr {
	ret, _, _ := getLazyProc("GIFImage_Create").Call()
	return ret
}

func GIFImage_Free(obj uintptr) {
	getLazyProc("GIFImage_Free").Call(obj)
}

func GIFImage_SaveToStream(obj uintptr, Stream uintptr) {
	getLazyProc("GIFImage_SaveToStream").Call(obj, Stream)
}

func GIFImage_LoadFromStream(obj uintptr, Stream uintptr) {
	getLazyProc("GIFImage_LoadFromStream").Call(obj, Stream)
}

func GIFImage_Clear(obj uintptr) {
	getLazyProc("GIFImage_Clear").Call(obj)
}

func GIFImage_Assign(obj uintptr, Source uintptr) {
	getLazyProc("GIFImage_Assign").Call(obj, Source)
}

func GIFImage_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("GIFImage_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func GIFImage_LoadFromFile(obj uintptr, Filename string) {
	getLazyProc("GIFImage_LoadFromFile").Call(obj, GoStrToDStr(Filename))
}

func GIFImage_SaveToFile(obj uintptr, Filename string) {
	getLazyProc("GIFImage_SaveToFile").Call(obj, GoStrToDStr(Filename))
}

func GIFImage_SetSize(obj uintptr, AWidth int32, AHeight int32) {
	getLazyProc("GIFImage_SetSize").Call(obj, uintptr(AWidth), uintptr(AHeight))
}

func GIFImage_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("GIFImage_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func GIFImage_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("GIFImage_ClassType").Call(obj)
	return TClass(ret)
}

func GIFImage_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("GIFImage_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func GIFImage_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GIFImage_InstanceSize").Call(obj)
	return int32(ret)
}

func GIFImage_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("GIFImage_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func GIFImage_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GIFImage_GetHashCode").Call(obj)
	return int32(ret)
}

func GIFImage_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("GIFImage_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func GIFImage_GetBitsPerPixel(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GIFImage_GetBitsPerPixel").Call(obj)
	return int32(ret)
}

func GIFImage_GetEmpty(obj uintptr) bool {
	ret, _, _ := getLazyProc("GIFImage_GetEmpty").Call(obj)
	return DBoolToGoBool(ret)
}

func GIFImage_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GIFImage_GetHeight").Call(obj)
	return int32(ret)
}

func GIFImage_SetHeight(obj uintptr, value int32) {
	getLazyProc("GIFImage_SetHeight").Call(obj, uintptr(value))
}

func GIFImage_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("GIFImage_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func GIFImage_SetModified(obj uintptr, value bool) {
	getLazyProc("GIFImage_SetModified").Call(obj, GoBoolToDBool(value))
}

func GIFImage_GetPalette(obj uintptr) HPALETTE {
	ret, _, _ := getLazyProc("GIFImage_GetPalette").Call(obj)
	return HPALETTE(ret)
}

func GIFImage_SetPalette(obj uintptr, value HPALETTE) {
	getLazyProc("GIFImage_SetPalette").Call(obj, uintptr(value))
}

func GIFImage_GetPaletteModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("GIFImage_GetPaletteModified").Call(obj)
	return DBoolToGoBool(ret)
}

func GIFImage_SetPaletteModified(obj uintptr, value bool) {
	getLazyProc("GIFImage_SetPaletteModified").Call(obj, GoBoolToDBool(value))
}

func GIFImage_GetTransparent(obj uintptr) bool {
	ret, _, _ := getLazyProc("GIFImage_GetTransparent").Call(obj)
	return DBoolToGoBool(ret)
}

func GIFImage_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GIFImage_GetWidth").Call(obj)
	return int32(ret)
}

func GIFImage_SetWidth(obj uintptr, value int32) {
	getLazyProc("GIFImage_SetWidth").Call(obj, uintptr(value))
}

func GIFImage_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("GIFImage_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func GIFImage_StaticClassType() TClass {
	r, _, _ := getLazyProc("GIFImage_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TActionList ---------------------------

func ActionList_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ActionList_Create").Call(obj)
	return ret
}

func ActionList_Free(obj uintptr) {
	getLazyProc("ActionList_Free").Call(obj)
}

func ActionList_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ActionList_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ActionList_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ActionList_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ActionList_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ActionList_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ActionList_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ActionList_Assign").Call(obj, Source)
}

func ActionList_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ActionList_ClassType").Call(obj)
	return TClass(ret)
}

func ActionList_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ActionList_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ActionList_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ActionList_InstanceSize").Call(obj)
	return int32(ret)
}

func ActionList_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ActionList_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ActionList_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ActionList_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ActionList_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ActionList_GetHashCode").Call(obj)
	return int32(ret)
}

func ActionList_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ActionList_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ActionList_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ActionList_GetImages").Call(obj)
	return ret
}

func ActionList_SetImages(obj uintptr, value uintptr) {
	getLazyProc("ActionList_SetImages").Call(obj, value)
}

func ActionList_GetState(obj uintptr) TActionListState {
	ret, _, _ := getLazyProc("ActionList_GetState").Call(obj)
	return TActionListState(ret)
}

func ActionList_SetState(obj uintptr, value TActionListState) {
	getLazyProc("ActionList_SetState").Call(obj, uintptr(value))
}

func ActionList_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ActionList_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ActionList_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ActionList_GetComponentCount").Call(obj)
	return int32(ret)
}

func ActionList_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ActionList_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ActionList_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ActionList_SetComponentIndex").Call(obj, uintptr(value))
}

func ActionList_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ActionList_GetOwner").Call(obj)
	return ret
}

func ActionList_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ActionList_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ActionList_SetName(obj uintptr, value string) {
	getLazyProc("ActionList_SetName").Call(obj, GoStrToDStr(value))
}

func ActionList_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ActionList_GetTag").Call(obj)
	return int(ret)
}

func ActionList_SetTag(obj uintptr, value int) {
	getLazyProc("ActionList_SetTag").Call(obj, uintptr(value))
}

func ActionList_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ActionList_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ActionList_StaticClassType() TClass {
	r, _, _ := getLazyProc("ActionList_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TAction ---------------------------

func Action_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Action_Create").Call(obj)
	return ret
}

func Action_Free(obj uintptr) {
	getLazyProc("Action_Free").Call(obj)
}

func Action_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func Action_Update(obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_Update").Call(obj)
	return DBoolToGoBool(ret)
}

func Action_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Action_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Action_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Action_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Action_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Action_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Action_Assign").Call(obj, Source)
}

func Action_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Action_ClassType").Call(obj)
	return TClass(ret)
}

func Action_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Action_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Action_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Action_InstanceSize").Call(obj)
	return int32(ret)
}

func Action_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Action_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Action_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Action_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Action_GetHashCode").Call(obj)
	return int32(ret)
}

func Action_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Action_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Action_GetAutoCheck(obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_GetAutoCheck").Call(obj)
	return DBoolToGoBool(ret)
}

func Action_SetAutoCheck(obj uintptr, value bool) {
	getLazyProc("Action_SetAutoCheck").Call(obj, GoBoolToDBool(value))
}

func Action_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("Action_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func Action_SetCaption(obj uintptr, value string) {
	getLazyProc("Action_SetCaption").Call(obj, GoStrToDStr(value))
}

func Action_GetChecked(obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_GetChecked").Call(obj)
	return DBoolToGoBool(ret)
}

func Action_SetChecked(obj uintptr, value bool) {
	getLazyProc("Action_SetChecked").Call(obj, GoBoolToDBool(value))
}

func Action_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Action_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Action_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Action_GetGroupIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Action_GetGroupIndex").Call(obj)
	return int32(ret)
}

func Action_SetGroupIndex(obj uintptr, value int32) {
	getLazyProc("Action_SetGroupIndex").Call(obj, uintptr(value))
}

func Action_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Action_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Action_SetHint(obj uintptr, value string) {
	getLazyProc("Action_SetHint").Call(obj, GoStrToDStr(value))
}

func Action_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Action_GetImageIndex").Call(obj)
	return int32(ret)
}

func Action_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("Action_SetImageIndex").Call(obj, uintptr(value))
}

func Action_GetShortCut(obj uintptr) TShortCut {
	ret, _, _ := getLazyProc("Action_GetShortCut").Call(obj)
	return TShortCut(ret)
}

func Action_SetShortCut(obj uintptr, value TShortCut) {
	getLazyProc("Action_SetShortCut").Call(obj, uintptr(value))
}

func Action_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Action_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Action_SetVisible(obj uintptr, value bool) {
	getLazyProc("Action_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Action_SetOnExecute(obj uintptr, fn interface{}) {
	getLazyProc("Action_SetOnExecute").Call(obj, addEventToMap(obj, fn))
}

func Action_SetOnUpdate(obj uintptr, fn interface{}) {
	getLazyProc("Action_SetOnUpdate").Call(obj, addEventToMap(obj, fn))
}

func Action_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Action_GetIndex").Call(obj)
	return int32(ret)
}

func Action_SetIndex(obj uintptr, value int32) {
	getLazyProc("Action_SetIndex").Call(obj, uintptr(value))
}

func Action_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Action_GetComponentCount").Call(obj)
	return int32(ret)
}

func Action_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Action_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Action_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Action_SetComponentIndex").Call(obj, uintptr(value))
}

func Action_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Action_GetOwner").Call(obj)
	return ret
}

func Action_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Action_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Action_SetName(obj uintptr, value string) {
	getLazyProc("Action_SetName").Call(obj, GoStrToDStr(value))
}

func Action_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Action_GetTag").Call(obj)
	return int(ret)
}

func Action_SetTag(obj uintptr, value int) {
	getLazyProc("Action_SetTag").Call(obj, uintptr(value))
}

func Action_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Action_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Action_StaticClassType() TClass {
	r, _, _ := getLazyProc("Action_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TToolButton ---------------------------

func ToolButton_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_Create").Call(obj)
	return ret
}

func ToolButton_Free(obj uintptr) {
	getLazyProc("ToolButton_Free").Call(obj)
}

func ToolButton_CheckMenuDropdown(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_CheckMenuDropdown").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_Click(obj uintptr) {
	getLazyProc("ToolButton_Click").Call(obj)
}

func ToolButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ToolButton_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ToolButton_BringToFront(obj uintptr) {
	getLazyProc("ToolButton_BringToFront").Call(obj)
}

func ToolButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ToolButton_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToolButton_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolButton_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_Hide(obj uintptr) {
	getLazyProc("ToolButton_Hide").Call(obj)
}

func ToolButton_Invalidate(obj uintptr) {
	getLazyProc("ToolButton_Invalidate").Call(obj)
}

func ToolButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ToolButton_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ToolButton_Refresh(obj uintptr) {
	getLazyProc("ToolButton_Refresh").Call(obj)
}

func ToolButton_Repaint(obj uintptr) {
	getLazyProc("ToolButton_Repaint").Call(obj)
}

func ToolButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ToolButton_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToolButton_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolButton_SendToBack(obj uintptr) {
	getLazyProc("ToolButton_SendToBack").Call(obj)
}

func ToolButton_Show(obj uintptr) {
	getLazyProc("ToolButton_Show").Call(obj)
}

func ToolButton_Update(obj uintptr) {
	getLazyProc("ToolButton_Update").Call(obj)
}

func ToolButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ToolButton_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ToolButton_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetTextLen").Call(obj)
	return int32(ret)
}

func ToolButton_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ToolButton_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ToolButton_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ToolButton_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ToolButton_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolButton_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ToolButton_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ToolButton_Assign").Call(obj, Source)
}

func ToolButton_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ToolButton_ClassType").Call(obj)
	return TClass(ret)
}

func ToolButton_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolButton_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ToolButton_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_InstanceSize").Call(obj)
	return int32(ret)
}

func ToolButton_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ToolButton_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ToolButton_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ToolButton_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetHashCode").Call(obj)
	return int32(ret)
}

func ToolButton_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolButton_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ToolButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ToolButton_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ToolButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ToolButton_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ToolButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ToolButton_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ToolButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ToolButton_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ToolButton_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ToolButton_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ToolButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ToolButton_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ToolButton_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ToolButton_AnchorClient").Call(obj, uintptr(ASpace))
}

func ToolButton_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToolButton_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToolButton_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ToolButton_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ToolButton_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ToolButton_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ToolButton_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ToolButton_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ToolButton_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetIndex").Call(obj)
	return int32(ret)
}

func ToolButton_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetAction").Call(obj)
	return ret
}

func ToolButton_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetAction").Call(obj, value)
}

func ToolButton_GetAllowAllUp(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetAllowAllUp").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetAllowAllUp(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetAllowAllUp").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolButton_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func ToolButton_SetCaption(obj uintptr, value string) {
	getLazyProc("ToolButton_SetCaption").Call(obj, GoStrToDStr(value))
}

func ToolButton_GetDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetDown").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetDown(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetDown").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ToolButton_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ToolButton_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ToolButton_SetDragCursor").Call(obj, uintptr(value))
}

func ToolButton_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ToolButton_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ToolButton_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ToolButton_SetDragKind").Call(obj, uintptr(value))
}

func ToolButton_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ToolButton_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ToolButton_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ToolButton_SetDragMode").Call(obj, uintptr(value))
}

func ToolButton_GetDropdownMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetDropdownMenu").Call(obj)
	return ret
}

func ToolButton_SetDropdownMenu(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetDropdownMenu").Call(obj, value)
}

func ToolButton_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetGrouped(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetGrouped").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetGrouped(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetGrouped").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetHeight").Call(obj)
	return int32(ret)
}

func ToolButton_SetHeight(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetHeight").Call(obj, uintptr(value))
}

func ToolButton_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetImageIndex").Call(obj)
	return int32(ret)
}

func ToolButton_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetImageIndex").Call(obj, uintptr(value))
}

func ToolButton_GetIndeterminate(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetIndeterminate").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetIndeterminate(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetIndeterminate").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetMarked(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetMarked").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetMarked(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetMarked").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetPopupMenu").Call(obj)
	return ret
}

func ToolButton_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetPopupMenu").Call(obj, value)
}

func ToolButton_GetWrap(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetWrap").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetWrap(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetWrap").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetStyle(obj uintptr) TToolButtonStyle {
	ret, _, _ := getLazyProc("ToolButton_GetStyle").Call(obj)
	return TToolButtonStyle(ret)
}

func ToolButton_SetStyle(obj uintptr, value TToolButtonStyle) {
	getLazyProc("ToolButton_SetStyle").Call(obj, uintptr(value))
}

func ToolButton_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_SetVisible(obj uintptr, value bool) {
	getLazyProc("ToolButton_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetWidth").Call(obj)
	return int32(ret)
}

func ToolButton_SetWidth(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetWidth").Call(obj, uintptr(value))
}

func ToolButton_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("ToolButton_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func ToolButton_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ToolButton_GetAlign").Call(obj)
	return TAlign(ret)
}

func ToolButton_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ToolButton_SetAlign").Call(obj, uintptr(value))
}

func ToolButton_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ToolButton_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ToolButton_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ToolButton_SetAnchors").Call(obj, uintptr(value))
}

func ToolButton_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ToolButton_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ToolButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ToolButton_SetBiDiMode").Call(obj, uintptr(value))
}

func ToolButton_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ToolButton_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolButton_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ToolButton_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ToolButton_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetClientHeight").Call(obj)
	return int32(ret)
}

func ToolButton_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetClientHeight").Call(obj, uintptr(value))
}

func ToolButton_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToolButton_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolButton_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ToolButton_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToolButton_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetClientWidth").Call(obj)
	return int32(ret)
}

func ToolButton_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetClientWidth").Call(obj, uintptr(value))
}

func ToolButton_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetConstraints").Call(obj)
	return ret
}

func ToolButton_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetConstraints").Call(obj, value)
}

func ToolButton_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ToolButton_GetControlState").Call(obj)
	return TControlState(ret)
}

func ToolButton_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ToolButton_SetControlState").Call(obj, uintptr(value))
}

func ToolButton_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ToolButton_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ToolButton_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ToolButton_SetControlStyle").Call(obj, uintptr(value))
}

func ToolButton_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToolButton_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ToolButton_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetParent").Call(obj)
	return ret
}

func ToolButton_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetParent").Call(obj, value)
}

func ToolButton_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetLeft").Call(obj)
	return int32(ret)
}

func ToolButton_SetLeft(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetLeft").Call(obj, uintptr(value))
}

func ToolButton_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetTop").Call(obj)
	return int32(ret)
}

func ToolButton_SetTop(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetTop").Call(obj, uintptr(value))
}

func ToolButton_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ToolButton_GetCursor").Call(obj)
	return TCursor(ret)
}

func ToolButton_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ToolButton_SetCursor").Call(obj, uintptr(value))
}

func ToolButton_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolButton_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ToolButton_SetHint(obj uintptr, value string) {
	getLazyProc("ToolButton_SetHint").Call(obj, GoStrToDStr(value))
}

func ToolButton_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetComponentCount").Call(obj)
	return int32(ret)
}

func ToolButton_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToolButton_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ToolButton_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ToolButton_SetComponentIndex").Call(obj, uintptr(value))
}

func ToolButton_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetOwner").Call(obj)
	return ret
}

func ToolButton_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ToolButton_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ToolButton_SetName(obj uintptr, value string) {
	getLazyProc("ToolButton_SetName").Call(obj, GoStrToDStr(value))
}

func ToolButton_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ToolButton_GetTag").Call(obj)
	return int(ret)
}

func ToolButton_SetTag(obj uintptr, value int) {
	getLazyProc("ToolButton_SetTag").Call(obj, uintptr(value))
}

func ToolButton_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetAnchorSideLeft").Call(obj)
	return ret
}

func ToolButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetAnchorSideLeft").Call(obj, value)
}

func ToolButton_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetAnchorSideTop").Call(obj)
	return ret
}

func ToolButton_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetAnchorSideTop").Call(obj, value)
}

func ToolButton_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetAnchorSideRight").Call(obj)
	return ret
}

func ToolButton_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetAnchorSideRight").Call(obj, value)
}

func ToolButton_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetAnchorSideBottom").Call(obj)
	return ret
}

func ToolButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetAnchorSideBottom").Call(obj, value)
}

func ToolButton_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetBorderSpacing").Call(obj)
	return ret
}

func ToolButton_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ToolButton_SetBorderSpacing").Call(obj, value)
}

func ToolButton_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ToolButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ToolButton_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ToolButton_StaticClassType() TClass {
	r, _, _ := getLazyProc("ToolButton_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TIniFile ---------------------------

func IniFile_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("IniFile_Create").Call(obj)
	return ret
}

func IniFile_Free(obj uintptr) {
	getLazyProc("IniFile_Free").Call(obj)
}

func IniFile_ReadString(obj uintptr, Section string, Ident string, Default string) string {
	ret, _, _ := getLazyProc("IniFile_ReadString").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident), GoStrToDStr(Default))
	return DStrToGoStr(ret)
}

func IniFile_WriteString(obj uintptr, Section string, Ident string, Value string) {
	getLazyProc("IniFile_WriteString").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident), GoStrToDStr(Value))
}

func IniFile_ReadSections(obj uintptr, Strings uintptr) {
	getLazyProc("IniFile_ReadSections").Call(obj, Strings)
}

func IniFile_ReadSectionValues(obj uintptr, Section string, Strings uintptr) {
	getLazyProc("IniFile_ReadSectionValues").Call(obj, GoStrToDStr(Section), Strings)
}

func IniFile_EraseSection(obj uintptr, Section string) {
	getLazyProc("IniFile_EraseSection").Call(obj, GoStrToDStr(Section))
}

func IniFile_DeleteKey(obj uintptr, Section string, Ident string) {
	getLazyProc("IniFile_DeleteKey").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident))
}

func IniFile_UpdateFile(obj uintptr) {
	getLazyProc("IniFile_UpdateFile").Call(obj)
}

func IniFile_SectionExists(obj uintptr, Section string) bool {
	ret, _, _ := getLazyProc("IniFile_SectionExists").Call(obj, GoStrToDStr(Section))
	return DBoolToGoBool(ret)
}

func IniFile_ReadInteger(obj uintptr, Section string, Ident string, Default int32) int32 {
	ret, _, _ := getLazyProc("IniFile_ReadInteger").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident), uintptr(Default))
	return int32(ret)
}

func IniFile_WriteInteger(obj uintptr, Section string, Ident string, Value int32) {
	getLazyProc("IniFile_WriteInteger").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident), uintptr(Value))
}

func IniFile_ReadBool(obj uintptr, Section string, Ident string, Default bool) bool {
	ret, _, _ := getLazyProc("IniFile_ReadBool").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident), GoBoolToDBool(Default))
	return DBoolToGoBool(ret)
}

func IniFile_WriteBool(obj uintptr, Section string, Ident string, Value bool) {
	getLazyProc("IniFile_WriteBool").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident), GoBoolToDBool(Value))
}

func IniFile_ReadDate(obj uintptr, Section string, Name string, Default time.Time) time.Time {
	var ret int64
	getLazyProc("IniFile_ReadDate").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(Default.Unix()), uintptr(unsafe.Pointer(&ret)))
	return time.Unix(ret, 0)
}

func IniFile_ReadDateTime(obj uintptr, Section string, Name string, Default time.Time) time.Time {
	var ret int64
	getLazyProc("IniFile_ReadDateTime").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(Default.Unix()), uintptr(unsafe.Pointer(&ret)))
	return time.Unix(ret, 0)
}

func IniFile_ReadFloat(obj uintptr, Section string, Name string, Default float64) float64 {
	var ret float64
	getLazyProc("IniFile_ReadFloat").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(unsafe.Pointer(&Default)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func IniFile_ReadTime(obj uintptr, Section string, Name string, Default time.Time) time.Time {
	var ret int64
	getLazyProc("IniFile_ReadTime").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(Default.Unix()), uintptr(unsafe.Pointer(&ret)))
	return time.Unix(ret, 0)
}

func IniFile_WriteDate(obj uintptr, Section string, Name string, Value time.Time) {
	getLazyProc("IniFile_WriteDate").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(Value.Unix()))
}

func IniFile_WriteDateTime(obj uintptr, Section string, Name string, Value time.Time) {
	getLazyProc("IniFile_WriteDateTime").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(Value.Unix()))
}

func IniFile_WriteFloat(obj uintptr, Section string, Name string, Value float64) {
	getLazyProc("IniFile_WriteFloat").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(unsafe.Pointer(&Value)))
}

func IniFile_WriteTime(obj uintptr, Section string, Name string, Value time.Time) {
	getLazyProc("IniFile_WriteTime").Call(obj, GoStrToDStr(Section), GoStrToDStr(Name), uintptr(Value.Unix()))
}

func IniFile_ValueExists(obj uintptr, Section string, Ident string) bool {
	ret, _, _ := getLazyProc("IniFile_ValueExists").Call(obj, GoStrToDStr(Section), GoStrToDStr(Ident))
	return DBoolToGoBool(ret)
}

func IniFile_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("IniFile_ClassType").Call(obj)
	return TClass(ret)
}

func IniFile_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("IniFile_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func IniFile_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("IniFile_InstanceSize").Call(obj)
	return int32(ret)
}

func IniFile_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("IniFile_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func IniFile_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("IniFile_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func IniFile_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("IniFile_GetHashCode").Call(obj)
	return int32(ret)
}

func IniFile_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("IniFile_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func IniFile_GetFileName(obj uintptr) string {
	ret, _, _ := getLazyProc("IniFile_GetFileName").Call(obj)
	return DStrToGoStr(ret)
}

func IniFile_StaticClassType() TClass {
	r, _, _ := getLazyProc("IniFile_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TRegistry ---------------------------

func Registry_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Registry_Create").Call(obj)
	return ret
}

func Registry_Free(obj uintptr) {
	getLazyProc("Registry_Free").Call(obj)
}

func Registry_CloseKey(obj uintptr) {
	getLazyProc("Registry_CloseKey").Call(obj)
}

func Registry_CreateKey(obj uintptr, Key string) bool {
	ret, _, _ := getLazyProc("Registry_CreateKey").Call(obj, GoStrToDStr(Key))
	return DBoolToGoBool(ret)
}

func Registry_DeleteKey(obj uintptr, Key string) bool {
	ret, _, _ := getLazyProc("Registry_DeleteKey").Call(obj, GoStrToDStr(Key))
	return DBoolToGoBool(ret)
}

func Registry_DeleteValue(obj uintptr, Name string) bool {
	ret, _, _ := getLazyProc("Registry_DeleteValue").Call(obj, GoStrToDStr(Name))
	return DBoolToGoBool(ret)
}

func Registry_HasSubKeys(obj uintptr) bool {
	ret, _, _ := getLazyProc("Registry_HasSubKeys").Call(obj)
	return DBoolToGoBool(ret)
}

func Registry_KeyExists(obj uintptr, Key string) bool {
	ret, _, _ := getLazyProc("Registry_KeyExists").Call(obj, GoStrToDStr(Key))
	return DBoolToGoBool(ret)
}

func Registry_LoadKey(obj uintptr, Key string, FileName string) bool {
	ret, _, _ := getLazyProc("Registry_LoadKey").Call(obj, GoStrToDStr(Key), GoStrToDStr(FileName))
	return DBoolToGoBool(ret)
}

func Registry_MoveKey(obj uintptr, OldName string, NewName string, Delete bool) {
	getLazyProc("Registry_MoveKey").Call(obj, GoStrToDStr(OldName), GoStrToDStr(NewName), GoBoolToDBool(Delete))
}

func Registry_OpenKey(obj uintptr, Key string, CanCreate bool) bool {
	ret, _, _ := getLazyProc("Registry_OpenKey").Call(obj, GoStrToDStr(Key), GoBoolToDBool(CanCreate))
	return DBoolToGoBool(ret)
}

func Registry_OpenKeyReadOnly(obj uintptr, Key string) bool {
	ret, _, _ := getLazyProc("Registry_OpenKeyReadOnly").Call(obj, GoStrToDStr(Key))
	return DBoolToGoBool(ret)
}

func Registry_ReadBool(obj uintptr, Name string) bool {
	ret, _, _ := getLazyProc("Registry_ReadBool").Call(obj, GoStrToDStr(Name))
	return DBoolToGoBool(ret)
}

func Registry_ReadDate(obj uintptr, Name string) time.Time {
	var ret int64
	getLazyProc("Registry_ReadDate").Call(obj, GoStrToDStr(Name), uintptr(unsafe.Pointer(&ret)))
	return time.Unix(ret, 0)
}

func Registry_ReadDateTime(obj uintptr, Name string) time.Time {
	var ret int64
	getLazyProc("Registry_ReadDateTime").Call(obj, GoStrToDStr(Name), uintptr(unsafe.Pointer(&ret)))
	return time.Unix(ret, 0)
}

func Registry_ReadFloat(obj uintptr, Name string) float64 {
	var ret float64
	getLazyProc("Registry_ReadFloat").Call(obj, GoStrToDStr(Name), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Registry_ReadInteger(obj uintptr, Name string) int32 {
	ret, _, _ := getLazyProc("Registry_ReadInteger").Call(obj, GoStrToDStr(Name))
	return int32(ret)
}

func Registry_ReadString(obj uintptr, Name string) string {
	ret, _, _ := getLazyProc("Registry_ReadString").Call(obj, GoStrToDStr(Name))
	return DStrToGoStr(ret)
}

func Registry_ReadTime(obj uintptr, Name string) time.Time {
	var ret int64
	getLazyProc("Registry_ReadTime").Call(obj, GoStrToDStr(Name), uintptr(unsafe.Pointer(&ret)))
	return time.Unix(ret, 0)
}

func Registry_RegistryConnect(obj uintptr, UNCName string) bool {
	ret, _, _ := getLazyProc("Registry_RegistryConnect").Call(obj, GoStrToDStr(UNCName))
	return DBoolToGoBool(ret)
}

func Registry_RenameValue(obj uintptr, OldName string, NewName string) {
	getLazyProc("Registry_RenameValue").Call(obj, GoStrToDStr(OldName), GoStrToDStr(NewName))
}

func Registry_ReplaceKey(obj uintptr, Key string, FileName string, BackUpFileName string) bool {
	ret, _, _ := getLazyProc("Registry_ReplaceKey").Call(obj, GoStrToDStr(Key), GoStrToDStr(FileName), GoStrToDStr(BackUpFileName))
	return DBoolToGoBool(ret)
}

func Registry_RestoreKey(obj uintptr, Key string, FileName string) bool {
	ret, _, _ := getLazyProc("Registry_RestoreKey").Call(obj, GoStrToDStr(Key), GoStrToDStr(FileName))
	return DBoolToGoBool(ret)
}

func Registry_SaveKey(obj uintptr, Key string, FileName string) bool {
	ret, _, _ := getLazyProc("Registry_SaveKey").Call(obj, GoStrToDStr(Key), GoStrToDStr(FileName))
	return DBoolToGoBool(ret)
}

func Registry_UnLoadKey(obj uintptr, Key string) bool {
	ret, _, _ := getLazyProc("Registry_UnLoadKey").Call(obj, GoStrToDStr(Key))
	return DBoolToGoBool(ret)
}

func Registry_ValueExists(obj uintptr, Name string) bool {
	ret, _, _ := getLazyProc("Registry_ValueExists").Call(obj, GoStrToDStr(Name))
	return DBoolToGoBool(ret)
}

func Registry_WriteBool(obj uintptr, Name string, Value bool) {
	getLazyProc("Registry_WriteBool").Call(obj, GoStrToDStr(Name), GoBoolToDBool(Value))
}

func Registry_WriteDate(obj uintptr, Name string, Value time.Time) {
	getLazyProc("Registry_WriteDate").Call(obj, GoStrToDStr(Name), uintptr(Value.Unix()))
}

func Registry_WriteDateTime(obj uintptr, Name string, Value time.Time) {
	getLazyProc("Registry_WriteDateTime").Call(obj, GoStrToDStr(Name), uintptr(Value.Unix()))
}

func Registry_WriteFloat(obj uintptr, Name string, Value float64) {
	getLazyProc("Registry_WriteFloat").Call(obj, GoStrToDStr(Name), uintptr(unsafe.Pointer(&Value)))
}

func Registry_WriteInteger(obj uintptr, Name string, Value int32) {
	getLazyProc("Registry_WriteInteger").Call(obj, GoStrToDStr(Name), uintptr(Value))
}

func Registry_WriteString(obj uintptr, Name string, Value string) {
	getLazyProc("Registry_WriteString").Call(obj, GoStrToDStr(Name), GoStrToDStr(Value))
}

func Registry_WriteExpandString(obj uintptr, Name string, Value string) {
	getLazyProc("Registry_WriteExpandString").Call(obj, GoStrToDStr(Name), GoStrToDStr(Value))
}

func Registry_WriteTime(obj uintptr, Name string, Value time.Time) {
	getLazyProc("Registry_WriteTime").Call(obj, GoStrToDStr(Name), uintptr(Value.Unix()))
}

func Registry_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Registry_ClassType").Call(obj)
	return TClass(ret)
}

func Registry_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Registry_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Registry_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Registry_InstanceSize").Call(obj)
	return int32(ret)
}

func Registry_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Registry_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Registry_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Registry_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Registry_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Registry_GetHashCode").Call(obj)
	return int32(ret)
}

func Registry_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Registry_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Registry_GetCurrentKey(obj uintptr) HKEY {
	ret, _, _ := getLazyProc("Registry_GetCurrentKey").Call(obj)
	return HKEY(ret)
}

func Registry_GetCurrentPath(obj uintptr) string {
	ret, _, _ := getLazyProc("Registry_GetCurrentPath").Call(obj)
	return DStrToGoStr(ret)
}

func Registry_GetLazyWrite(obj uintptr) bool {
	ret, _, _ := getLazyProc("Registry_GetLazyWrite").Call(obj)
	return DBoolToGoBool(ret)
}

func Registry_SetLazyWrite(obj uintptr, value bool) {
	getLazyProc("Registry_SetLazyWrite").Call(obj, GoBoolToDBool(value))
}

func Registry_GetLastError(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Registry_GetLastError").Call(obj)
	return int32(ret)
}

func Registry_GetLastErrorMsg(obj uintptr) string {
	ret, _, _ := getLazyProc("Registry_GetLastErrorMsg").Call(obj)
	return DStrToGoStr(ret)
}

func Registry_GetRootKey(obj uintptr) HKEY {
	ret, _, _ := getLazyProc("Registry_GetRootKey").Call(obj)
	return HKEY(ret)
}

func Registry_SetRootKey(obj uintptr, value HKEY) {
	getLazyProc("Registry_SetRootKey").Call(obj, uintptr(value))
}

func Registry_GetAccess(obj uintptr) uint32 {
	ret, _, _ := getLazyProc("Registry_GetAccess").Call(obj)
	return uint32(ret)
}

func Registry_SetAccess(obj uintptr, value uint32) {
	getLazyProc("Registry_SetAccess").Call(obj, uintptr(value))
}

func Registry_StaticClassType() TClass {
	r, _, _ := getLazyProc("Registry_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TClipboard ---------------------------

func Clipboard_Create() uintptr {
	ret, _, _ := getLazyProc("Clipboard_Create").Call()
	return ret
}

func Clipboard_Free(obj uintptr) {
	getLazyProc("Clipboard_Free").Call(obj)
}

func Clipboard_FindPictureFormatID(obj uintptr) TClipboardFormat {
	ret, _, _ := getLazyProc("Clipboard_FindPictureFormatID").Call(obj)
	return TClipboardFormat(ret)
}

func Clipboard_FindFormatID(obj uintptr, FormatName string) TClipboardFormat {
	ret, _, _ := getLazyProc("Clipboard_FindFormatID").Call(obj, GoStrToDStr(FormatName))
	return TClipboardFormat(ret)
}

func Clipboard_SupportedFormats(obj uintptr, List uintptr) {
	getLazyProc("Clipboard_SupportedFormats").Call(obj, List)
}

func Clipboard_HasFormatName(obj uintptr, FormatName string) bool {
	ret, _, _ := getLazyProc("Clipboard_HasFormatName").Call(obj, GoStrToDStr(FormatName))
	return DBoolToGoBool(ret)
}

func Clipboard_HasPictureFormat(obj uintptr) bool {
	ret, _, _ := getLazyProc("Clipboard_HasPictureFormat").Call(obj)
	return DBoolToGoBool(ret)
}

func Clipboard_SetAsHtml(obj uintptr, Html string, PlainText string) {
	getLazyProc("Clipboard_SetAsHtml").Call(obj, GoStrToDStr(Html), GoStrToDStr(PlainText))
}

func Clipboard_GetFormat(obj uintptr, FormatID TClipboardFormat, Stream uintptr) bool {
	ret, _, _ := getLazyProc("Clipboard_GetFormat").Call(obj, uintptr(FormatID), Stream)
	return DBoolToGoBool(ret)
}

func Clipboard_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Clipboard_Assign").Call(obj, Source)
}

func Clipboard_Clear(obj uintptr) {
	getLazyProc("Clipboard_Clear").Call(obj)
}

func Clipboard_Close(obj uintptr) {
	getLazyProc("Clipboard_Close").Call(obj)
}

func Clipboard_Open(obj uintptr) {
	getLazyProc("Clipboard_Open").Call(obj)
}

func Clipboard_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Clipboard_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Clipboard_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Clipboard_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Clipboard_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Clipboard_ClassType").Call(obj)
	return TClass(ret)
}

func Clipboard_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Clipboard_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Clipboard_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Clipboard_InstanceSize").Call(obj)
	return int32(ret)
}

func Clipboard_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Clipboard_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Clipboard_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Clipboard_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Clipboard_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Clipboard_GetHashCode").Call(obj)
	return int32(ret)
}

func Clipboard_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Clipboard_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Clipboard_GetFormatCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Clipboard_GetFormatCount").Call(obj)
	return int32(ret)
}

func Clipboard_GetFormats(obj uintptr, Index int32) TClipboardFormat {
	ret, _, _ := getLazyProc("Clipboard_GetFormats").Call(obj, uintptr(Index))
	return TClipboardFormat(ret)
}

func Clipboard_StaticClassType() TClass {
	r, _, _ := getLazyProc("Clipboard_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMonitor ---------------------------

func Monitor_Create() uintptr {
	ret, _, _ := getLazyProc("Monitor_Create").Call()
	return ret
}

func Monitor_Free(obj uintptr) {
	getLazyProc("Monitor_Free").Call(obj)
}

func Monitor_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Monitor_ClassType").Call(obj)
	return TClass(ret)
}

func Monitor_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Monitor_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Monitor_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_InstanceSize").Call(obj)
	return int32(ret)
}

func Monitor_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Monitor_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Monitor_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Monitor_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Monitor_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_GetHashCode").Call(obj)
	return int32(ret)
}

func Monitor_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Monitor_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Monitor_GetHandle(obj uintptr) HMONITOR {
	ret, _, _ := getLazyProc("Monitor_GetHandle").Call(obj)
	return HMONITOR(ret)
}

func Monitor_GetMonitorNum(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_GetMonitorNum").Call(obj)
	return int32(ret)
}

func Monitor_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_GetLeft").Call(obj)
	return int32(ret)
}

func Monitor_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_GetHeight").Call(obj)
	return int32(ret)
}

func Monitor_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_GetTop").Call(obj)
	return int32(ret)
}

func Monitor_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_GetWidth").Call(obj)
	return int32(ret)
}

func Monitor_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Monitor_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Monitor_GetWorkareaRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Monitor_GetWorkareaRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Monitor_GetPrimary(obj uintptr) bool {
	ret, _, _ := getLazyProc("Monitor_GetPrimary").Call(obj)
	return DBoolToGoBool(ret)
}

func Monitor_GetPixelsPerInch(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Monitor_GetPixelsPerInch").Call(obj)
	return int32(ret)
}

func Monitor_StaticClassType() TClass {
	r, _, _ := getLazyProc("Monitor_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPaintBox ---------------------------

func PaintBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_Create").Call(obj)
	return ret
}

func PaintBox_Free(obj uintptr) {
	getLazyProc("PaintBox_Free").Call(obj)
}

func PaintBox_BringToFront(obj uintptr) {
	getLazyProc("PaintBox_BringToFront").Call(obj)
}

func PaintBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("PaintBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PaintBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("PaintBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PaintBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_Hide(obj uintptr) {
	getLazyProc("PaintBox_Hide").Call(obj)
}

func PaintBox_Invalidate(obj uintptr) {
	getLazyProc("PaintBox_Invalidate").Call(obj)
}

func PaintBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("PaintBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func PaintBox_Refresh(obj uintptr) {
	getLazyProc("PaintBox_Refresh").Call(obj)
}

func PaintBox_Repaint(obj uintptr) {
	getLazyProc("PaintBox_Repaint").Call(obj)
}

func PaintBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("PaintBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PaintBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("PaintBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PaintBox_SendToBack(obj uintptr) {
	getLazyProc("PaintBox_SendToBack").Call(obj)
}

func PaintBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("PaintBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func PaintBox_Show(obj uintptr) {
	getLazyProc("PaintBox_Show").Call(obj)
}

func PaintBox_Update(obj uintptr) {
	getLazyProc("PaintBox_Update").Call(obj)
}

func PaintBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("PaintBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func PaintBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetTextLen").Call(obj)
	return int32(ret)
}

func PaintBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("PaintBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func PaintBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("PaintBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func PaintBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("PaintBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func PaintBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("PaintBox_Assign").Call(obj, Source)
}

func PaintBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("PaintBox_ClassType").Call(obj)
	return TClass(ret)
}

func PaintBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("PaintBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func PaintBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_InstanceSize").Call(obj)
	return int32(ret)
}

func PaintBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("PaintBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func PaintBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func PaintBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetHashCode").Call(obj)
	return int32(ret)
}

func PaintBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("PaintBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func PaintBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("PaintBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func PaintBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("PaintBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func PaintBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("PaintBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func PaintBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("PaintBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func PaintBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("PaintBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func PaintBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("PaintBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func PaintBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("PaintBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func PaintBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("PaintBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func PaintBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("PaintBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func PaintBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("PaintBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func PaintBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("PaintBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func PaintBox_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetCanvas").Call(obj)
	return ret
}

func PaintBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("PaintBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func PaintBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("PaintBox_SetAlign").Call(obj, uintptr(value))
}

func PaintBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("PaintBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func PaintBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("PaintBox_SetAnchors").Call(obj, uintptr(value))
}

func PaintBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("PaintBox_GetColor").Call(obj)
	return TColor(ret)
}

func PaintBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("PaintBox_SetColor").Call(obj, uintptr(value))
}

func PaintBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetConstraints").Call(obj)
	return ret
}

func PaintBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetConstraints").Call(obj, value)
}

func PaintBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("PaintBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func PaintBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("PaintBox_SetDragCursor").Call(obj, uintptr(value))
}

func PaintBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("PaintBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func PaintBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("PaintBox_SetDragMode").Call(obj, uintptr(value))
}

func PaintBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("PaintBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetFont").Call(obj)
	return ret
}

func PaintBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetFont").Call(obj, value)
}

func PaintBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("PaintBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("PaintBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("PaintBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetPopupMenu").Call(obj)
	return ret
}

func PaintBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetPopupMenu").Call(obj, value)
}

func PaintBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("PaintBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("PaintBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func PaintBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_SetOnPaint(obj uintptr, fn interface{}) {
	getLazyProc("PaintBox_SetOnPaint").Call(obj, addEventToMap(obj, fn))
}

func PaintBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetAction").Call(obj)
	return ret
}

func PaintBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetAction").Call(obj, value)
}

func PaintBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("PaintBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func PaintBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("PaintBox_SetBiDiMode").Call(obj, uintptr(value))
}

func PaintBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("PaintBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PaintBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("PaintBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func PaintBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func PaintBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("PaintBox_SetClientHeight").Call(obj, uintptr(value))
}

func PaintBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("PaintBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PaintBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("PaintBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func PaintBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func PaintBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("PaintBox_SetClientWidth").Call(obj, uintptr(value))
}

func PaintBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("PaintBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func PaintBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("PaintBox_SetControlState").Call(obj, uintptr(value))
}

func PaintBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("PaintBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func PaintBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("PaintBox_SetControlStyle").Call(obj, uintptr(value))
}

func PaintBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("PaintBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func PaintBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetParent").Call(obj)
	return ret
}

func PaintBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetParent").Call(obj, value)
}

func PaintBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetLeft").Call(obj)
	return int32(ret)
}

func PaintBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("PaintBox_SetLeft").Call(obj, uintptr(value))
}

func PaintBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetTop").Call(obj)
	return int32(ret)
}

func PaintBox_SetTop(obj uintptr, value int32) {
	getLazyProc("PaintBox_SetTop").Call(obj, uintptr(value))
}

func PaintBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetWidth").Call(obj)
	return int32(ret)
}

func PaintBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("PaintBox_SetWidth").Call(obj, uintptr(value))
}

func PaintBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetHeight").Call(obj)
	return int32(ret)
}

func PaintBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("PaintBox_SetHeight").Call(obj, uintptr(value))
}

func PaintBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("PaintBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func PaintBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("PaintBox_SetCursor").Call(obj, uintptr(value))
}

func PaintBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("PaintBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func PaintBox_SetHint(obj uintptr, value string) {
	getLazyProc("PaintBox_SetHint").Call(obj, GoStrToDStr(value))
}

func PaintBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func PaintBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PaintBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func PaintBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("PaintBox_SetComponentIndex").Call(obj, uintptr(value))
}

func PaintBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetOwner").Call(obj)
	return ret
}

func PaintBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("PaintBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func PaintBox_SetName(obj uintptr, value string) {
	getLazyProc("PaintBox_SetName").Call(obj, GoStrToDStr(value))
}

func PaintBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("PaintBox_GetTag").Call(obj)
	return int(ret)
}

func PaintBox_SetTag(obj uintptr, value int) {
	getLazyProc("PaintBox_SetTag").Call(obj, uintptr(value))
}

func PaintBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func PaintBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetAnchorSideLeft").Call(obj, value)
}

func PaintBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetAnchorSideTop").Call(obj)
	return ret
}

func PaintBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetAnchorSideTop").Call(obj, value)
}

func PaintBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetAnchorSideRight").Call(obj)
	return ret
}

func PaintBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetAnchorSideRight").Call(obj, value)
}

func PaintBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func PaintBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetAnchorSideBottom").Call(obj, value)
}

func PaintBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetBorderSpacing").Call(obj)
	return ret
}

func PaintBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("PaintBox_SetBorderSpacing").Call(obj, value)
}

func PaintBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func PaintBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("PaintBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func PaintBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("PaintBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTimer ---------------------------

func Timer_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Timer_Create").Call(obj)
	return ret
}

func Timer_Free(obj uintptr) {
	getLazyProc("Timer_Free").Call(obj)
}

func Timer_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Timer_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Timer_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Timer_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Timer_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Timer_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Timer_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Timer_Assign").Call(obj, Source)
}

func Timer_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Timer_ClassType").Call(obj)
	return TClass(ret)
}

func Timer_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Timer_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Timer_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Timer_InstanceSize").Call(obj)
	return int32(ret)
}

func Timer_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Timer_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Timer_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Timer_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Timer_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Timer_GetHashCode").Call(obj)
	return int32(ret)
}

func Timer_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Timer_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Timer_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Timer_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Timer_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Timer_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Timer_GetInterval(obj uintptr) uint32 {
	ret, _, _ := getLazyProc("Timer_GetInterval").Call(obj)
	return uint32(ret)
}

func Timer_SetInterval(obj uintptr, value uint32) {
	getLazyProc("Timer_SetInterval").Call(obj, uintptr(value))
}

func Timer_SetOnTimer(obj uintptr, fn interface{}) {
	getLazyProc("Timer_SetOnTimer").Call(obj, addEventToMap(obj, fn))
}

func Timer_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Timer_GetComponentCount").Call(obj)
	return int32(ret)
}

func Timer_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Timer_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Timer_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Timer_SetComponentIndex").Call(obj, uintptr(value))
}

func Timer_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Timer_GetOwner").Call(obj)
	return ret
}

func Timer_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Timer_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Timer_SetName(obj uintptr, value string) {
	getLazyProc("Timer_SetName").Call(obj, GoStrToDStr(value))
}

func Timer_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Timer_GetTag").Call(obj)
	return int(ret)
}

func Timer_SetTag(obj uintptr, value int) {
	getLazyProc("Timer_SetTag").Call(obj, uintptr(value))
}

func Timer_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Timer_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Timer_StaticClassType() TClass {
	r, _, _ := getLazyProc("Timer_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TList ---------------------------

func List_Create() uintptr {
	ret, _, _ := getLazyProc("List_Create").Call()
	return ret
}

func List_Free(obj uintptr) {
	getLazyProc("List_Free").Call(obj)
}

func List_Add(obj uintptr, Item uintptr) int32 {
	ret, _, _ := getLazyProc("List_Add").Call(obj, Item)
	return int32(ret)
}

func List_Clear(obj uintptr) {
	getLazyProc("List_Clear").Call(obj)
}

func List_Delete(obj uintptr, Index int32) {
	getLazyProc("List_Delete").Call(obj, uintptr(Index))
}

func List_Expand(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("List_Expand").Call(obj)
	return ret
}

func List_IndexOf(obj uintptr, Item uintptr) int32 {
	ret, _, _ := getLazyProc("List_IndexOf").Call(obj, Item)
	return int32(ret)
}

func List_Insert(obj uintptr, Index int32, Item uintptr) {
	getLazyProc("List_Insert").Call(obj, uintptr(Index), Item)
}

func List_Move(obj uintptr, CurIndex int32, NewIndex int32) {
	getLazyProc("List_Move").Call(obj, uintptr(CurIndex), uintptr(NewIndex))
}

func List_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("List_ClassType").Call(obj)
	return TClass(ret)
}

func List_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("List_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func List_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("List_InstanceSize").Call(obj)
	return int32(ret)
}

func List_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("List_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func List_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("List_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func List_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("List_GetHashCode").Call(obj)
	return int32(ret)
}

func List_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("List_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func List_GetCapacity(obj uintptr) int32 {
	ret, _, _ := getLazyProc("List_GetCapacity").Call(obj)
	return int32(ret)
}

func List_SetCapacity(obj uintptr, value int32) {
	getLazyProc("List_SetCapacity").Call(obj, uintptr(value))
}

func List_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("List_GetCount").Call(obj)
	return int32(ret)
}

func List_SetCount(obj uintptr, value int32) {
	getLazyProc("List_SetCount").Call(obj, uintptr(value))
}

func List_GetList(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("List_GetList").Call(obj)
	return ret
}

func List_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("List_GetItems").Call(obj, uintptr(Index))
	return ret
}

func List_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("List_SetItems").Call(obj, uintptr(Index), value)
}

func List_StaticClassType() TClass {
	r, _, _ := getLazyProc("List_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TComponent ---------------------------

func Component_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Component_Create").Call(obj)
	return ret
}

func Component_Free(obj uintptr) {
	getLazyProc("Component_Free").Call(obj)
}

func Component_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Component_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Component_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Component_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Component_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Component_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Component_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Component_Assign").Call(obj, Source)
}

func Component_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Component_ClassType").Call(obj)
	return TClass(ret)
}

func Component_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Component_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Component_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Component_InstanceSize").Call(obj)
	return int32(ret)
}

func Component_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Component_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Component_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Component_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Component_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Component_GetHashCode").Call(obj)
	return int32(ret)
}

func Component_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Component_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Component_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Component_GetComponentCount").Call(obj)
	return int32(ret)
}

func Component_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Component_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Component_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Component_SetComponentIndex").Call(obj, uintptr(value))
}

func Component_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Component_GetOwner").Call(obj)
	return ret
}

func Component_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Component_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Component_SetName(obj uintptr, value string) {
	getLazyProc("Component_SetName").Call(obj, GoStrToDStr(value))
}

func Component_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Component_GetTag").Call(obj)
	return int(ret)
}

func Component_SetTag(obj uintptr, value int) {
	getLazyProc("Component_SetTag").Call(obj, uintptr(value))
}

func Component_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Component_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Component_StaticClassType() TClass {
	r, _, _ := getLazyProc("Component_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TParaAttributes ---------------------------

func ParaAttributes_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ParaAttributes_Assign").Call(obj, Source)
}

func ParaAttributes_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ParaAttributes_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ParaAttributes_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ParaAttributes_ClassType").Call(obj)
	return TClass(ret)
}

func ParaAttributes_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ParaAttributes_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ParaAttributes_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ParaAttributes_InstanceSize").Call(obj)
	return int32(ret)
}

func ParaAttributes_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ParaAttributes_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ParaAttributes_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ParaAttributes_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ParaAttributes_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ParaAttributes_GetHashCode").Call(obj)
	return int32(ret)
}

func ParaAttributes_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ParaAttributes_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ParaAttributes_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("ParaAttributes_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func ParaAttributes_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("ParaAttributes_SetAlignment").Call(obj, uintptr(value))
}

func ParaAttributes_GetFirstIndent(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ParaAttributes_GetFirstIndent").Call(obj)
	return int32(ret)
}

func ParaAttributes_SetFirstIndent(obj uintptr, value int32) {
	getLazyProc("ParaAttributes_SetFirstIndent").Call(obj, uintptr(value))
}

func ParaAttributes_GetLeftIndent(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ParaAttributes_GetLeftIndent").Call(obj)
	return int32(ret)
}

func ParaAttributes_SetLeftIndent(obj uintptr, value int32) {
	getLazyProc("ParaAttributes_SetLeftIndent").Call(obj, uintptr(value))
}

func ParaAttributes_GetNumbering(obj uintptr) TNumberingStyle {
	ret, _, _ := getLazyProc("ParaAttributes_GetNumbering").Call(obj)
	return TNumberingStyle(ret)
}

func ParaAttributes_SetNumbering(obj uintptr, value TNumberingStyle) {
	getLazyProc("ParaAttributes_SetNumbering").Call(obj, uintptr(value))
}

func ParaAttributes_GetRightIndent(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ParaAttributes_GetRightIndent").Call(obj)
	return int32(ret)
}

func ParaAttributes_SetRightIndent(obj uintptr, value int32) {
	getLazyProc("ParaAttributes_SetRightIndent").Call(obj, uintptr(value))
}

func ParaAttributes_GetTabCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ParaAttributes_GetTabCount").Call(obj)
	return int32(ret)
}

func ParaAttributes_SetTabCount(obj uintptr, value int32) {
	getLazyProc("ParaAttributes_SetTabCount").Call(obj, uintptr(value))
}

func ParaAttributes_GetTab(obj uintptr, Index uint8) int32 {
	ret, _, _ := getLazyProc("ParaAttributes_GetTab").Call(obj, uintptr(Index))
	return int32(ret)
}

func ParaAttributes_SetTab(obj uintptr, Index uint8, value int32) {
	getLazyProc("ParaAttributes_SetTab").Call(obj, uintptr(Index), uintptr(value))
}

func ParaAttributes_StaticClassType() TClass {
	r, _, _ := getLazyProc("ParaAttributes_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTextAttributes ---------------------------

func TextAttributes_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TextAttributes_Assign").Call(obj, Source)
}

func TextAttributes_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TextAttributes_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TextAttributes_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TextAttributes_ClassType").Call(obj)
	return TClass(ret)
}

func TextAttributes_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TextAttributes_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TextAttributes_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TextAttributes_InstanceSize").Call(obj)
	return int32(ret)
}

func TextAttributes_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TextAttributes_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TextAttributes_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TextAttributes_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TextAttributes_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TextAttributes_GetHashCode").Call(obj)
	return int32(ret)
}

func TextAttributes_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TextAttributes_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TextAttributes_GetCharset(obj uintptr) TFontCharset {
	ret, _, _ := getLazyProc("TextAttributes_GetCharset").Call(obj)
	return TFontCharset(ret)
}

func TextAttributes_SetCharset(obj uintptr, value TFontCharset) {
	getLazyProc("TextAttributes_SetCharset").Call(obj, uintptr(value))
}

func TextAttributes_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("TextAttributes_GetColor").Call(obj)
	return TColor(ret)
}

func TextAttributes_SetColor(obj uintptr, value TColor) {
	getLazyProc("TextAttributes_SetColor").Call(obj, uintptr(value))
}

func TextAttributes_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("TextAttributes_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func TextAttributes_SetName(obj uintptr, value string) {
	getLazyProc("TextAttributes_SetName").Call(obj, GoStrToDStr(value))
}

func TextAttributes_GetPitch(obj uintptr) TFontPitch {
	ret, _, _ := getLazyProc("TextAttributes_GetPitch").Call(obj)
	return TFontPitch(ret)
}

func TextAttributes_SetPitch(obj uintptr, value TFontPitch) {
	getLazyProc("TextAttributes_SetPitch").Call(obj, uintptr(value))
}

func TextAttributes_GetSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TextAttributes_GetSize").Call(obj)
	return int32(ret)
}

func TextAttributes_SetSize(obj uintptr, value int32) {
	getLazyProc("TextAttributes_SetSize").Call(obj, uintptr(value))
}

func TextAttributes_GetStyle(obj uintptr) TFontStyles {
	ret, _, _ := getLazyProc("TextAttributes_GetStyle").Call(obj)
	return TFontStyles(ret)
}

func TextAttributes_SetStyle(obj uintptr, value TFontStyles) {
	getLazyProc("TextAttributes_SetStyle").Call(obj, uintptr(value))
}

func TextAttributes_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TextAttributes_GetHeight").Call(obj)
	return int32(ret)
}

func TextAttributes_SetHeight(obj uintptr, value int32) {
	getLazyProc("TextAttributes_SetHeight").Call(obj, uintptr(value))
}

func TextAttributes_StaticClassType() TClass {
	r, _, _ := getLazyProc("TextAttributes_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TIconOptions ---------------------------

func IconOptions_Assign(obj uintptr, Source uintptr) {
	getLazyProc("IconOptions_Assign").Call(obj, Source)
}

func IconOptions_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("IconOptions_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func IconOptions_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("IconOptions_ClassType").Call(obj)
	return TClass(ret)
}

func IconOptions_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("IconOptions_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func IconOptions_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("IconOptions_InstanceSize").Call(obj)
	return int32(ret)
}

func IconOptions_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("IconOptions_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func IconOptions_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("IconOptions_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func IconOptions_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("IconOptions_GetHashCode").Call(obj)
	return int32(ret)
}

func IconOptions_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("IconOptions_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func IconOptions_GetArrangement(obj uintptr) TIconArrangement {
	ret, _, _ := getLazyProc("IconOptions_GetArrangement").Call(obj)
	return TIconArrangement(ret)
}

func IconOptions_SetArrangement(obj uintptr, value TIconArrangement) {
	getLazyProc("IconOptions_SetArrangement").Call(obj, uintptr(value))
}

func IconOptions_GetAutoArrange(obj uintptr) bool {
	ret, _, _ := getLazyProc("IconOptions_GetAutoArrange").Call(obj)
	return DBoolToGoBool(ret)
}

func IconOptions_SetAutoArrange(obj uintptr, value bool) {
	getLazyProc("IconOptions_SetAutoArrange").Call(obj, GoBoolToDBool(value))
}

func IconOptions_StaticClassType() TClass {
	r, _, _ := getLazyProc("IconOptions_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- Exception ---------------------------

func Exception_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Exception_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Exception_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Exception_ClassType").Call(obj)
	return TClass(ret)
}

func Exception_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Exception_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Exception_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Exception_InstanceSize").Call(obj)
	return int32(ret)
}

func Exception_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Exception_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Exception_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Exception_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Exception_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Exception_GetHashCode").Call(obj)
	return int32(ret)
}

func Exception_GetMessage(obj uintptr) string {
	ret, _, _ := getLazyProc("Exception_GetMessage").Call(obj)
	return DStrToGoStr(ret)
}

func Exception_SetMessage(obj uintptr, value string) {
	getLazyProc("Exception_SetMessage").Call(obj, GoStrToDStr(value))
}

func Exception_StaticClassType() TClass {
	r, _, _ := getLazyProc("Exception_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TScrollBar ---------------------------

func ScrollBar_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_Create").Call(obj)
	return ret
}

func ScrollBar_Free(obj uintptr) {
	getLazyProc("ScrollBar_Free").Call(obj)
}

func ScrollBar_SetParams(obj uintptr, APosition int32, AMin int32, AMax int32) {
	getLazyProc("ScrollBar_SetParams").Call(obj, uintptr(APosition), uintptr(AMin), uintptr(AMax))
}

func ScrollBar_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ScrollBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ScrollBar_DisableAlign(obj uintptr) {
	getLazyProc("ScrollBar_DisableAlign").Call(obj)
}

func ScrollBar_EnableAlign(obj uintptr) {
	getLazyProc("ScrollBar_EnableAlign").Call(obj)
}

func ScrollBar_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ScrollBar_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ScrollBar_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ScrollBar_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ScrollBar_InsertControl").Call(obj, AControl)
}

func ScrollBar_Invalidate(obj uintptr) {
	getLazyProc("ScrollBar_Invalidate").Call(obj)
}

func ScrollBar_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ScrollBar_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ScrollBar_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ScrollBar_RemoveControl").Call(obj, AControl)
}

func ScrollBar_Realign(obj uintptr) {
	getLazyProc("ScrollBar_Realign").Call(obj)
}

func ScrollBar_Repaint(obj uintptr) {
	getLazyProc("ScrollBar_Repaint").Call(obj)
}

func ScrollBar_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ScrollBar_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ScrollBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ScrollBar_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ScrollBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ScrollBar_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ScrollBar_SetFocus(obj uintptr) {
	getLazyProc("ScrollBar_SetFocus").Call(obj)
}

func ScrollBar_Update(obj uintptr) {
	getLazyProc("ScrollBar_Update").Call(obj)
}

func ScrollBar_BringToFront(obj uintptr) {
	getLazyProc("ScrollBar_BringToFront").Call(obj)
}

func ScrollBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ScrollBar_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ScrollBar_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBar_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_Hide(obj uintptr) {
	getLazyProc("ScrollBar_Hide").Call(obj)
}

func ScrollBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ScrollBar_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ScrollBar_Refresh(obj uintptr) {
	getLazyProc("ScrollBar_Refresh").Call(obj)
}

func ScrollBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ScrollBar_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ScrollBar_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBar_SendToBack(obj uintptr) {
	getLazyProc("ScrollBar_SendToBack").Call(obj)
}

func ScrollBar_Show(obj uintptr) {
	getLazyProc("ScrollBar_Show").Call(obj)
}

func ScrollBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ScrollBar_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ScrollBar_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetTextLen").Call(obj)
	return int32(ret)
}

func ScrollBar_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ScrollBar_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ScrollBar_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ScrollBar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ScrollBar_Assign").Call(obj, Source)
}

func ScrollBar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ScrollBar_ClassType").Call(obj)
	return TClass(ret)
}

func ScrollBar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_InstanceSize").Call(obj)
	return int32(ret)
}

func ScrollBar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ScrollBar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ScrollBar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetHashCode").Call(obj)
	return int32(ret)
}

func ScrollBar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ScrollBar_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ScrollBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ScrollBar_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ScrollBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ScrollBar_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ScrollBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ScrollBar_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ScrollBar_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ScrollBar_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ScrollBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ScrollBar_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ScrollBar_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ScrollBar_AnchorClient").Call(obj, uintptr(ASpace))
}

func ScrollBar_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBar_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBar_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ScrollBar_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ScrollBar_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ScrollBar_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ScrollBar_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ScrollBar_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ScrollBar_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ScrollBar_GetAlign").Call(obj)
	return TAlign(ret)
}

func ScrollBar_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ScrollBar_SetAlign").Call(obj, uintptr(value))
}

func ScrollBar_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ScrollBar_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ScrollBar_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ScrollBar_SetAnchors").Call(obj, uintptr(value))
}

func ScrollBar_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ScrollBar_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ScrollBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ScrollBar_SetBiDiMode").Call(obj, uintptr(value))
}

func ScrollBar_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetConstraints").Call(obj)
	return ret
}

func ScrollBar_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetConstraints").Call(obj, value)
}

func ScrollBar_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ScrollBar_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ScrollBar_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ScrollBar_SetDragCursor").Call(obj, uintptr(value))
}

func ScrollBar_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ScrollBar_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ScrollBar_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ScrollBar_SetDragKind").Call(obj, uintptr(value))
}

func ScrollBar_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ScrollBar_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ScrollBar_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ScrollBar_SetDragMode").Call(obj, uintptr(value))
}

func ScrollBar_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetKind(obj uintptr) TScrollBarKind {
	ret, _, _ := getLazyProc("ScrollBar_GetKind").Call(obj)
	return TScrollBarKind(ret)
}

func ScrollBar_SetKind(obj uintptr, value TScrollBarKind) {
	getLazyProc("ScrollBar_SetKind").Call(obj, uintptr(value))
}

func ScrollBar_GetLargeChange(obj uintptr) TScrollBarInc {
	ret, _, _ := getLazyProc("ScrollBar_GetLargeChange").Call(obj)
	return TScrollBarInc(ret)
}

func ScrollBar_SetLargeChange(obj uintptr, value TScrollBarInc) {
	getLazyProc("ScrollBar_SetLargeChange").Call(obj, uintptr(value))
}

func ScrollBar_GetMax(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetMax").Call(obj)
	return int32(ret)
}

func ScrollBar_SetMax(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetMax").Call(obj, uintptr(value))
}

func ScrollBar_GetMin(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetMin").Call(obj)
	return int32(ret)
}

func ScrollBar_SetMin(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetMin").Call(obj, uintptr(value))
}

func ScrollBar_GetPageSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetPageSize").Call(obj)
	return int32(ret)
}

func ScrollBar_SetPageSize(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetPageSize").Call(obj, uintptr(value))
}

func ScrollBar_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetPopupMenu").Call(obj)
	return ret
}

func ScrollBar_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetPopupMenu").Call(obj, value)
}

func ScrollBar_GetPosition(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetPosition").Call(obj)
	return int32(ret)
}

func ScrollBar_SetPosition(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetPosition").Call(obj, uintptr(value))
}

func ScrollBar_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetSmallChange(obj uintptr) TScrollBarInc {
	ret, _, _ := getLazyProc("ScrollBar_GetSmallChange").Call(obj)
	return TScrollBarInc(ret)
}

func ScrollBar_SetSmallChange(obj uintptr, value TScrollBarInc) {
	getLazyProc("ScrollBar_SetSmallChange").Call(obj, uintptr(value))
}

func ScrollBar_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ScrollBar_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ScrollBar_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ScrollBar_SetTabOrder").Call(obj, uintptr(value))
}

func ScrollBar_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetVisible(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBar_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ScrollBar_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ScrollBar_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ScrollBar_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetBrush").Call(obj)
	return ret
}

func ScrollBar_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetControlCount").Call(obj)
	return int32(ret)
}

func ScrollBar_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ScrollBar_GetHandle").Call(obj)
	return HWND(ret)
}

func ScrollBar_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ScrollBar_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ScrollBar_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ScrollBar_SetParentWindow").Call(obj, uintptr(value))
}

func ScrollBar_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ScrollBar_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetAction").Call(obj)
	return ret
}

func ScrollBar_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetAction").Call(obj, value)
}

func ScrollBar_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ScrollBar_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBar_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ScrollBar_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ScrollBar_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetClientHeight").Call(obj)
	return int32(ret)
}

func ScrollBar_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetClientHeight").Call(obj, uintptr(value))
}

func ScrollBar_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ScrollBar_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBar_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ScrollBar_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBar_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetClientWidth").Call(obj)
	return int32(ret)
}

func ScrollBar_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetClientWidth").Call(obj, uintptr(value))
}

func ScrollBar_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ScrollBar_GetControlState").Call(obj)
	return TControlState(ret)
}

func ScrollBar_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ScrollBar_SetControlState").Call(obj, uintptr(value))
}

func ScrollBar_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ScrollBar_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ScrollBar_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ScrollBar_SetControlStyle").Call(obj, uintptr(value))
}

func ScrollBar_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBar_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBar_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetParent").Call(obj)
	return ret
}

func ScrollBar_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetParent").Call(obj, value)
}

func ScrollBar_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetLeft").Call(obj)
	return int32(ret)
}

func ScrollBar_SetLeft(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetLeft").Call(obj, uintptr(value))
}

func ScrollBar_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetTop").Call(obj)
	return int32(ret)
}

func ScrollBar_SetTop(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetTop").Call(obj, uintptr(value))
}

func ScrollBar_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetWidth").Call(obj)
	return int32(ret)
}

func ScrollBar_SetWidth(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetWidth").Call(obj, uintptr(value))
}

func ScrollBar_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetHeight").Call(obj)
	return int32(ret)
}

func ScrollBar_SetHeight(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetHeight").Call(obj, uintptr(value))
}

func ScrollBar_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ScrollBar_GetCursor").Call(obj)
	return TCursor(ret)
}

func ScrollBar_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ScrollBar_SetCursor").Call(obj, uintptr(value))
}

func ScrollBar_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBar_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBar_SetHint(obj uintptr, value string) {
	getLazyProc("ScrollBar_SetHint").Call(obj, GoStrToDStr(value))
}

func ScrollBar_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetComponentCount").Call(obj)
	return int32(ret)
}

func ScrollBar_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBar_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ScrollBar_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ScrollBar_SetComponentIndex").Call(obj, uintptr(value))
}

func ScrollBar_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetOwner").Call(obj)
	return ret
}

func ScrollBar_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBar_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBar_SetName(obj uintptr, value string) {
	getLazyProc("ScrollBar_SetName").Call(obj, GoStrToDStr(value))
}

func ScrollBar_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ScrollBar_GetTag").Call(obj)
	return int(ret)
}

func ScrollBar_SetTag(obj uintptr, value int) {
	getLazyProc("ScrollBar_SetTag").Call(obj, uintptr(value))
}

func ScrollBar_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetAnchorSideLeft").Call(obj)
	return ret
}

func ScrollBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetAnchorSideLeft").Call(obj, value)
}

func ScrollBar_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetAnchorSideTop").Call(obj)
	return ret
}

func ScrollBar_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetAnchorSideTop").Call(obj, value)
}

func ScrollBar_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetAnchorSideRight").Call(obj)
	return ret
}

func ScrollBar_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetAnchorSideRight").Call(obj, value)
}

func ScrollBar_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetAnchorSideBottom").Call(obj)
	return ret
}

func ScrollBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetAnchorSideBottom").Call(obj, value)
}

func ScrollBar_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetChildSizing").Call(obj)
	return ret
}

func ScrollBar_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetChildSizing").Call(obj, value)
}

func ScrollBar_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetBorderSpacing").Call(obj)
	return ret
}

func ScrollBar_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ScrollBar_SetBorderSpacing").Call(obj, value)
}

func ScrollBar_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ScrollBar_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ScrollBar_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ScrollBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ScrollBar_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ScrollBar_StaticClassType() TClass {
	r, _, _ := getLazyProc("ScrollBar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TMaskEdit ---------------------------

func MaskEdit_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_Create").Call(obj)
	return ret
}

func MaskEdit_Free(obj uintptr) {
	getLazyProc("MaskEdit_Free").Call(obj)
}

func MaskEdit_ValidateEdit(obj uintptr) {
	getLazyProc("MaskEdit_ValidateEdit").Call(obj)
}

func MaskEdit_Clear(obj uintptr) {
	getLazyProc("MaskEdit_Clear").Call(obj)
}

func MaskEdit_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetTextLen").Call(obj)
	return int32(ret)
}

func MaskEdit_ClearSelection(obj uintptr) {
	getLazyProc("MaskEdit_ClearSelection").Call(obj)
}

func MaskEdit_CopyToClipboard(obj uintptr) {
	getLazyProc("MaskEdit_CopyToClipboard").Call(obj)
}

func MaskEdit_CutToClipboard(obj uintptr) {
	getLazyProc("MaskEdit_CutToClipboard").Call(obj)
}

func MaskEdit_PasteFromClipboard(obj uintptr) {
	getLazyProc("MaskEdit_PasteFromClipboard").Call(obj)
}

func MaskEdit_Undo(obj uintptr) {
	getLazyProc("MaskEdit_Undo").Call(obj)
}

func MaskEdit_SelectAll(obj uintptr) {
	getLazyProc("MaskEdit_SelectAll").Call(obj)
}

func MaskEdit_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func MaskEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func MaskEdit_DisableAlign(obj uintptr) {
	getLazyProc("MaskEdit_DisableAlign").Call(obj)
}

func MaskEdit_EnableAlign(obj uintptr) {
	getLazyProc("MaskEdit_EnableAlign").Call(obj)
}

func MaskEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func MaskEdit_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("MaskEdit_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func MaskEdit_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("MaskEdit_InsertControl").Call(obj, AControl)
}

func MaskEdit_Invalidate(obj uintptr) {
	getLazyProc("MaskEdit_Invalidate").Call(obj)
}

func MaskEdit_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("MaskEdit_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func MaskEdit_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("MaskEdit_RemoveControl").Call(obj, AControl)
}

func MaskEdit_Realign(obj uintptr) {
	getLazyProc("MaskEdit_Realign").Call(obj)
}

func MaskEdit_Repaint(obj uintptr) {
	getLazyProc("MaskEdit_Repaint").Call(obj)
}

func MaskEdit_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("MaskEdit_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func MaskEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("MaskEdit_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func MaskEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("MaskEdit_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func MaskEdit_SetFocus(obj uintptr) {
	getLazyProc("MaskEdit_SetFocus").Call(obj)
}

func MaskEdit_Update(obj uintptr) {
	getLazyProc("MaskEdit_Update").Call(obj)
}

func MaskEdit_BringToFront(obj uintptr) {
	getLazyProc("MaskEdit_BringToFront").Call(obj)
}

func MaskEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("MaskEdit_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MaskEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("MaskEdit_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MaskEdit_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_Hide(obj uintptr) {
	getLazyProc("MaskEdit_Hide").Call(obj)
}

func MaskEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("MaskEdit_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func MaskEdit_Refresh(obj uintptr) {
	getLazyProc("MaskEdit_Refresh").Call(obj)
}

func MaskEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("MaskEdit_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MaskEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("MaskEdit_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MaskEdit_SendToBack(obj uintptr) {
	getLazyProc("MaskEdit_SendToBack").Call(obj)
}

func MaskEdit_Show(obj uintptr) {
	getLazyProc("MaskEdit_Show").Call(obj)
}

func MaskEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("MaskEdit_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func MaskEdit_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("MaskEdit_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func MaskEdit_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func MaskEdit_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_Assign(obj uintptr, Source uintptr) {
	getLazyProc("MaskEdit_Assign").Call(obj, Source)
}

func MaskEdit_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("MaskEdit_ClassType").Call(obj)
	return TClass(ret)
}

func MaskEdit_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_InstanceSize").Call(obj)
	return int32(ret)
}

func MaskEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("MaskEdit_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func MaskEdit_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetHashCode").Call(obj)
	return int32(ret)
}

func MaskEdit_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("MaskEdit_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func MaskEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("MaskEdit_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func MaskEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("MaskEdit_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func MaskEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("MaskEdit_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func MaskEdit_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("MaskEdit_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func MaskEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("MaskEdit_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func MaskEdit_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("MaskEdit_AnchorClient").Call(obj, uintptr(ASpace))
}

func MaskEdit_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("MaskEdit_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func MaskEdit_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("MaskEdit_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func MaskEdit_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("MaskEdit_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func MaskEdit_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("MaskEdit_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func MaskEdit_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("MaskEdit_GetAlign").Call(obj)
	return TAlign(ret)
}

func MaskEdit_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("MaskEdit_SetAlign").Call(obj, uintptr(value))
}

func MaskEdit_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("MaskEdit_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func MaskEdit_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("MaskEdit_SetAlignment").Call(obj, uintptr(value))
}

func MaskEdit_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("MaskEdit_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func MaskEdit_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("MaskEdit_SetAnchors").Call(obj, uintptr(value))
}

func MaskEdit_GetAutoSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetAutoSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetAutoSelect(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetAutoSelect").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("MaskEdit_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func MaskEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("MaskEdit_SetBiDiMode").Call(obj, uintptr(value))
}

func MaskEdit_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("MaskEdit_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func MaskEdit_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("MaskEdit_SetBorderStyle").Call(obj, uintptr(value))
}

func MaskEdit_GetCharCase(obj uintptr) TEditCharCase {
	ret, _, _ := getLazyProc("MaskEdit_GetCharCase").Call(obj)
	return TEditCharCase(ret)
}

func MaskEdit_SetCharCase(obj uintptr, value TEditCharCase) {
	getLazyProc("MaskEdit_SetCharCase").Call(obj, uintptr(value))
}

func MaskEdit_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("MaskEdit_GetColor").Call(obj)
	return TColor(ret)
}

func MaskEdit_SetColor(obj uintptr, value TColor) {
	getLazyProc("MaskEdit_SetColor").Call(obj, uintptr(value))
}

func MaskEdit_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetConstraints").Call(obj)
	return ret
}

func MaskEdit_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetConstraints").Call(obj, value)
}

func MaskEdit_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("MaskEdit_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func MaskEdit_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("MaskEdit_SetDragCursor").Call(obj, uintptr(value))
}

func MaskEdit_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("MaskEdit_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func MaskEdit_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("MaskEdit_SetDragKind").Call(obj, uintptr(value))
}

func MaskEdit_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("MaskEdit_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func MaskEdit_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("MaskEdit_SetDragMode").Call(obj, uintptr(value))
}

func MaskEdit_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetEnabled(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetFont").Call(obj)
	return ret
}

func MaskEdit_SetFont(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetFont").Call(obj, value)
}

func MaskEdit_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetMaxLength").Call(obj)
	return int32(ret)
}

func MaskEdit_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetMaxLength").Call(obj, uintptr(value))
}

func MaskEdit_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetParentColor(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetParentFont(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetPasswordChar(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("MaskEdit_GetPasswordChar").Call(obj)
	return uint16(ret)
}

func MaskEdit_SetPasswordChar(obj uintptr, value uint16) {
	getLazyProc("MaskEdit_SetPasswordChar").Call(obj, uintptr(value))
}

func MaskEdit_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetPopupMenu").Call(obj)
	return ret
}

func MaskEdit_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetPopupMenu").Call(obj, value)
}

func MaskEdit_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetShowHint(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("MaskEdit_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func MaskEdit_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("MaskEdit_SetTabOrder").Call(obj, uintptr(value))
}

func MaskEdit_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetTabStop(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_SetText(obj uintptr, value string) {
	getLazyProc("MaskEdit_SetText").Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetTextHint(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_GetTextHint").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_SetTextHint(obj uintptr, value string) {
	getLazyProc("MaskEdit_SetTextHint").Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetVisible(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetVisible").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("MaskEdit_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func MaskEdit_GetIsMasked(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetIsMasked").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_GetEditText(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_GetEditText").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_SetEditText(obj uintptr, value string) {
	getLazyProc("MaskEdit_SetEditText").Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetCanUndo(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetCanUndo").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetModified(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetModified").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetSelLength").Call(obj)
	return int32(ret)
}

func MaskEdit_SetSelLength(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetSelLength").Call(obj, uintptr(value))
}

func MaskEdit_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetSelStart").Call(obj)
	return int32(ret)
}

func MaskEdit_SetSelStart(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetSelStart").Call(obj, uintptr(value))
}

func MaskEdit_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_SetSelText(obj uintptr, value string) {
	getLazyProc("MaskEdit_SetSelText").Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetDockClientCount").Call(obj)
	return int32(ret)
}

func MaskEdit_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetDockSite(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func MaskEdit_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetBrush").Call(obj)
	return ret
}

func MaskEdit_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetControlCount").Call(obj)
	return int32(ret)
}

func MaskEdit_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("MaskEdit_GetHandle").Call(obj)
	return HWND(ret)
}

func MaskEdit_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("MaskEdit_GetParentWindow").Call(obj)
	return HWND(ret)
}

func MaskEdit_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("MaskEdit_SetParentWindow").Call(obj, uintptr(value))
}

func MaskEdit_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("MaskEdit_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetAction").Call(obj)
	return ret
}

func MaskEdit_SetAction(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetAction").Call(obj, value)
}

func MaskEdit_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("MaskEdit_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MaskEdit_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("MaskEdit_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MaskEdit_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetClientHeight").Call(obj)
	return int32(ret)
}

func MaskEdit_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetClientHeight").Call(obj, uintptr(value))
}

func MaskEdit_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("MaskEdit_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MaskEdit_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("MaskEdit_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func MaskEdit_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetClientWidth").Call(obj)
	return int32(ret)
}

func MaskEdit_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetClientWidth").Call(obj, uintptr(value))
}

func MaskEdit_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("MaskEdit_GetControlState").Call(obj)
	return TControlState(ret)
}

func MaskEdit_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("MaskEdit_SetControlState").Call(obj, uintptr(value))
}

func MaskEdit_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("MaskEdit_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func MaskEdit_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("MaskEdit_SetControlStyle").Call(obj, uintptr(value))
}

func MaskEdit_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("MaskEdit_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func MaskEdit_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetParent").Call(obj)
	return ret
}

func MaskEdit_SetParent(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetParent").Call(obj, value)
}

func MaskEdit_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetLeft").Call(obj)
	return int32(ret)
}

func MaskEdit_SetLeft(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetLeft").Call(obj, uintptr(value))
}

func MaskEdit_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetTop").Call(obj)
	return int32(ret)
}

func MaskEdit_SetTop(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetTop").Call(obj, uintptr(value))
}

func MaskEdit_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetWidth").Call(obj)
	return int32(ret)
}

func MaskEdit_SetWidth(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetWidth").Call(obj, uintptr(value))
}

func MaskEdit_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetHeight").Call(obj)
	return int32(ret)
}

func MaskEdit_SetHeight(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetHeight").Call(obj, uintptr(value))
}

func MaskEdit_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("MaskEdit_GetCursor").Call(obj)
	return TCursor(ret)
}

func MaskEdit_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("MaskEdit_SetCursor").Call(obj, uintptr(value))
}

func MaskEdit_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_SetHint(obj uintptr, value string) {
	getLazyProc("MaskEdit_SetHint").Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetComponentCount").Call(obj)
	return int32(ret)
}

func MaskEdit_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("MaskEdit_GetComponentIndex").Call(obj)
	return int32(ret)
}

func MaskEdit_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("MaskEdit_SetComponentIndex").Call(obj, uintptr(value))
}

func MaskEdit_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetOwner").Call(obj)
	return ret
}

func MaskEdit_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("MaskEdit_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func MaskEdit_SetName(obj uintptr, value string) {
	getLazyProc("MaskEdit_SetName").Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("MaskEdit_GetTag").Call(obj)
	return int(ret)
}

func MaskEdit_SetTag(obj uintptr, value int) {
	getLazyProc("MaskEdit_SetTag").Call(obj, uintptr(value))
}

func MaskEdit_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetAnchorSideLeft").Call(obj)
	return ret
}

func MaskEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetAnchorSideLeft").Call(obj, value)
}

func MaskEdit_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetAnchorSideTop").Call(obj)
	return ret
}

func MaskEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetAnchorSideTop").Call(obj, value)
}

func MaskEdit_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetAnchorSideRight").Call(obj)
	return ret
}

func MaskEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetAnchorSideRight").Call(obj, value)
}

func MaskEdit_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetAnchorSideBottom").Call(obj)
	return ret
}

func MaskEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetAnchorSideBottom").Call(obj, value)
}

func MaskEdit_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetChildSizing").Call(obj)
	return ret
}

func MaskEdit_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetChildSizing").Call(obj, value)
}

func MaskEdit_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetBorderSpacing").Call(obj)
	return ret
}

func MaskEdit_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("MaskEdit_SetBorderSpacing").Call(obj, value)
}

func MaskEdit_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func MaskEdit_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetControls").Call(obj, uintptr(Index))
	return ret
}

func MaskEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func MaskEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("MaskEdit_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func MaskEdit_StaticClassType() TClass {
	r, _, _ := getLazyProc("MaskEdit_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TShape ---------------------------

func Shape_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_Create").Call(obj)
	return ret
}

func Shape_Free(obj uintptr) {
	getLazyProc("Shape_Free").Call(obj)
}

func Shape_BringToFront(obj uintptr) {
	getLazyProc("Shape_BringToFront").Call(obj)
}

func Shape_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Shape_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Shape_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Shape_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Shape_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Shape_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Shape_Hide(obj uintptr) {
	getLazyProc("Shape_Hide").Call(obj)
}

func Shape_Invalidate(obj uintptr) {
	getLazyProc("Shape_Invalidate").Call(obj)
}

func Shape_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Shape_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Shape_Refresh(obj uintptr) {
	getLazyProc("Shape_Refresh").Call(obj)
}

func Shape_Repaint(obj uintptr) {
	getLazyProc("Shape_Repaint").Call(obj)
}

func Shape_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Shape_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Shape_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Shape_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Shape_SendToBack(obj uintptr) {
	getLazyProc("Shape_SendToBack").Call(obj)
}

func Shape_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Shape_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Shape_Show(obj uintptr) {
	getLazyProc("Shape_Show").Call(obj)
}

func Shape_Update(obj uintptr) {
	getLazyProc("Shape_Update").Call(obj)
}

func Shape_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Shape_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Shape_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetTextLen").Call(obj)
	return int32(ret)
}

func Shape_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Shape_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Shape_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Shape_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Shape_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Shape_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Shape_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Shape_Assign").Call(obj, Source)
}

func Shape_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Shape_ClassType").Call(obj)
	return TClass(ret)
}

func Shape_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Shape_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Shape_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_InstanceSize").Call(obj)
	return int32(ret)
}

func Shape_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Shape_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Shape_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Shape_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetHashCode").Call(obj)
	return int32(ret)
}

func Shape_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Shape_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Shape_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Shape_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Shape_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Shape_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Shape_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Shape_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Shape_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Shape_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Shape_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Shape_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Shape_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Shape_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Shape_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Shape_AnchorClient").Call(obj, uintptr(ASpace))
}

func Shape_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Shape_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Shape_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Shape_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Shape_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Shape_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Shape_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Shape_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Shape_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Shape_GetAlign").Call(obj)
	return TAlign(ret)
}

func Shape_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Shape_SetAlign").Call(obj, uintptr(value))
}

func Shape_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Shape_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Shape_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Shape_SetAnchors").Call(obj, uintptr(value))
}

func Shape_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetBrush").Call(obj)
	return ret
}

func Shape_SetBrush(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetBrush").Call(obj, value)
}

func Shape_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Shape_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Shape_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Shape_SetDragCursor").Call(obj, uintptr(value))
}

func Shape_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Shape_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Shape_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Shape_SetDragKind").Call(obj, uintptr(value))
}

func Shape_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Shape_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Shape_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Shape_SetDragMode").Call(obj, uintptr(value))
}

func Shape_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Shape_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Shape_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Shape_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetConstraints").Call(obj)
	return ret
}

func Shape_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetConstraints").Call(obj, value)
}

func Shape_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Shape_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Shape_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Shape_GetPen(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetPen").Call(obj)
	return ret
}

func Shape_SetPen(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetPen").Call(obj, value)
}

func Shape_GetShape(obj uintptr) TShapeType {
	ret, _, _ := getLazyProc("Shape_GetShape").Call(obj)
	return TShapeType(ret)
}

func Shape_SetShape(obj uintptr, value TShapeType) {
	getLazyProc("Shape_SetShape").Call(obj, uintptr(value))
}

func Shape_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Shape_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Shape_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Shape_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Shape_SetVisible(obj uintptr, value bool) {
	getLazyProc("Shape_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Shape_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Shape_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Shape_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Shape_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Shape_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Shape_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Shape_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Shape_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Shape_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Shape_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetAction").Call(obj)
	return ret
}

func Shape_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetAction").Call(obj, value)
}

func Shape_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Shape_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Shape_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Shape_SetBiDiMode").Call(obj, uintptr(value))
}

func Shape_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Shape_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Shape_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Shape_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Shape_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetClientHeight").Call(obj)
	return int32(ret)
}

func Shape_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Shape_SetClientHeight").Call(obj, uintptr(value))
}

func Shape_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Shape_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Shape_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Shape_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Shape_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetClientWidth").Call(obj)
	return int32(ret)
}

func Shape_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Shape_SetClientWidth").Call(obj, uintptr(value))
}

func Shape_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Shape_GetControlState").Call(obj)
	return TControlState(ret)
}

func Shape_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Shape_SetControlState").Call(obj, uintptr(value))
}

func Shape_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Shape_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Shape_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Shape_SetControlStyle").Call(obj, uintptr(value))
}

func Shape_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Shape_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Shape_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetParent").Call(obj)
	return ret
}

func Shape_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetParent").Call(obj, value)
}

func Shape_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetLeft").Call(obj)
	return int32(ret)
}

func Shape_SetLeft(obj uintptr, value int32) {
	getLazyProc("Shape_SetLeft").Call(obj, uintptr(value))
}

func Shape_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetTop").Call(obj)
	return int32(ret)
}

func Shape_SetTop(obj uintptr, value int32) {
	getLazyProc("Shape_SetTop").Call(obj, uintptr(value))
}

func Shape_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetWidth").Call(obj)
	return int32(ret)
}

func Shape_SetWidth(obj uintptr, value int32) {
	getLazyProc("Shape_SetWidth").Call(obj, uintptr(value))
}

func Shape_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetHeight").Call(obj)
	return int32(ret)
}

func Shape_SetHeight(obj uintptr, value int32) {
	getLazyProc("Shape_SetHeight").Call(obj, uintptr(value))
}

func Shape_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Shape_GetCursor").Call(obj)
	return TCursor(ret)
}

func Shape_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Shape_SetCursor").Call(obj, uintptr(value))
}

func Shape_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Shape_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Shape_SetHint(obj uintptr, value string) {
	getLazyProc("Shape_SetHint").Call(obj, GoStrToDStr(value))
}

func Shape_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetComponentCount").Call(obj)
	return int32(ret)
}

func Shape_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Shape_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Shape_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Shape_SetComponentIndex").Call(obj, uintptr(value))
}

func Shape_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetOwner").Call(obj)
	return ret
}

func Shape_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Shape_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Shape_SetName(obj uintptr, value string) {
	getLazyProc("Shape_SetName").Call(obj, GoStrToDStr(value))
}

func Shape_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Shape_GetTag").Call(obj)
	return int(ret)
}

func Shape_SetTag(obj uintptr, value int) {
	getLazyProc("Shape_SetTag").Call(obj, uintptr(value))
}

func Shape_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetAnchorSideLeft").Call(obj)
	return ret
}

func Shape_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetAnchorSideLeft").Call(obj, value)
}

func Shape_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetAnchorSideTop").Call(obj)
	return ret
}

func Shape_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetAnchorSideTop").Call(obj, value)
}

func Shape_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetAnchorSideRight").Call(obj)
	return ret
}

func Shape_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetAnchorSideRight").Call(obj, value)
}

func Shape_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetAnchorSideBottom").Call(obj)
	return ret
}

func Shape_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetAnchorSideBottom").Call(obj, value)
}

func Shape_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Shape_GetBorderSpacing").Call(obj)
	return ret
}

func Shape_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Shape_SetBorderSpacing").Call(obj, value)
}

func Shape_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Shape_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Shape_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Shape_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Shape_StaticClassType() TClass {
	r, _, _ := getLazyProc("Shape_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TBevel ---------------------------

func Bevel_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_Create").Call(obj)
	return ret
}

func Bevel_Free(obj uintptr) {
	getLazyProc("Bevel_Free").Call(obj)
}

func Bevel_BringToFront(obj uintptr) {
	getLazyProc("Bevel_BringToFront").Call(obj)
}

func Bevel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Bevel_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Bevel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Bevel_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Bevel_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Bevel_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Bevel_Hide(obj uintptr) {
	getLazyProc("Bevel_Hide").Call(obj)
}

func Bevel_Invalidate(obj uintptr) {
	getLazyProc("Bevel_Invalidate").Call(obj)
}

func Bevel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Bevel_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Bevel_Refresh(obj uintptr) {
	getLazyProc("Bevel_Refresh").Call(obj)
}

func Bevel_Repaint(obj uintptr) {
	getLazyProc("Bevel_Repaint").Call(obj)
}

func Bevel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Bevel_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Bevel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Bevel_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Bevel_SendToBack(obj uintptr) {
	getLazyProc("Bevel_SendToBack").Call(obj)
}

func Bevel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Bevel_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Bevel_Show(obj uintptr) {
	getLazyProc("Bevel_Show").Call(obj)
}

func Bevel_Update(obj uintptr) {
	getLazyProc("Bevel_Update").Call(obj)
}

func Bevel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Bevel_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Bevel_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetTextLen").Call(obj)
	return int32(ret)
}

func Bevel_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Bevel_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Bevel_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Bevel_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Bevel_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Bevel_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Bevel_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Bevel_Assign").Call(obj, Source)
}

func Bevel_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Bevel_ClassType").Call(obj)
	return TClass(ret)
}

func Bevel_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Bevel_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Bevel_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_InstanceSize").Call(obj)
	return int32(ret)
}

func Bevel_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Bevel_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Bevel_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Bevel_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetHashCode").Call(obj)
	return int32(ret)
}

func Bevel_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Bevel_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Bevel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Bevel_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Bevel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Bevel_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Bevel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Bevel_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Bevel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Bevel_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Bevel_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Bevel_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Bevel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Bevel_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Bevel_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Bevel_AnchorClient").Call(obj, uintptr(ASpace))
}

func Bevel_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Bevel_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Bevel_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Bevel_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Bevel_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Bevel_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Bevel_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Bevel_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Bevel_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Bevel_GetAlign").Call(obj)
	return TAlign(ret)
}

func Bevel_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Bevel_SetAlign").Call(obj, uintptr(value))
}

func Bevel_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Bevel_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Bevel_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Bevel_SetAnchors").Call(obj, uintptr(value))
}

func Bevel_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetConstraints").Call(obj)
	return ret
}

func Bevel_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetConstraints").Call(obj, value)
}

func Bevel_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Bevel_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Bevel_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Bevel_GetShape(obj uintptr) TBevelShape {
	ret, _, _ := getLazyProc("Bevel_GetShape").Call(obj)
	return TBevelShape(ret)
}

func Bevel_SetShape(obj uintptr, value TBevelShape) {
	getLazyProc("Bevel_SetShape").Call(obj, uintptr(value))
}

func Bevel_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Bevel_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Bevel_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Bevel_GetStyle(obj uintptr) TBevelStyle {
	ret, _, _ := getLazyProc("Bevel_GetStyle").Call(obj)
	return TBevelStyle(ret)
}

func Bevel_SetStyle(obj uintptr, value TBevelStyle) {
	getLazyProc("Bevel_SetStyle").Call(obj, uintptr(value))
}

func Bevel_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Bevel_SetVisible(obj uintptr, value bool) {
	getLazyProc("Bevel_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Bevel_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Bevel_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Bevel_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Bevel_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetAction").Call(obj)
	return ret
}

func Bevel_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetAction").Call(obj, value)
}

func Bevel_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Bevel_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Bevel_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Bevel_SetBiDiMode").Call(obj, uintptr(value))
}

func Bevel_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Bevel_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Bevel_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Bevel_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Bevel_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetClientHeight").Call(obj)
	return int32(ret)
}

func Bevel_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Bevel_SetClientHeight").Call(obj, uintptr(value))
}

func Bevel_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Bevel_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Bevel_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Bevel_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Bevel_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetClientWidth").Call(obj)
	return int32(ret)
}

func Bevel_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Bevel_SetClientWidth").Call(obj, uintptr(value))
}

func Bevel_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Bevel_GetControlState").Call(obj)
	return TControlState(ret)
}

func Bevel_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Bevel_SetControlState").Call(obj, uintptr(value))
}

func Bevel_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Bevel_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Bevel_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Bevel_SetControlStyle").Call(obj, uintptr(value))
}

func Bevel_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Bevel_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Bevel_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetParent").Call(obj)
	return ret
}

func Bevel_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetParent").Call(obj, value)
}

func Bevel_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetLeft").Call(obj)
	return int32(ret)
}

func Bevel_SetLeft(obj uintptr, value int32) {
	getLazyProc("Bevel_SetLeft").Call(obj, uintptr(value))
}

func Bevel_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetTop").Call(obj)
	return int32(ret)
}

func Bevel_SetTop(obj uintptr, value int32) {
	getLazyProc("Bevel_SetTop").Call(obj, uintptr(value))
}

func Bevel_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetWidth").Call(obj)
	return int32(ret)
}

func Bevel_SetWidth(obj uintptr, value int32) {
	getLazyProc("Bevel_SetWidth").Call(obj, uintptr(value))
}

func Bevel_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetHeight").Call(obj)
	return int32(ret)
}

func Bevel_SetHeight(obj uintptr, value int32) {
	getLazyProc("Bevel_SetHeight").Call(obj, uintptr(value))
}

func Bevel_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Bevel_GetCursor").Call(obj)
	return TCursor(ret)
}

func Bevel_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Bevel_SetCursor").Call(obj, uintptr(value))
}

func Bevel_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Bevel_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Bevel_SetHint(obj uintptr, value string) {
	getLazyProc("Bevel_SetHint").Call(obj, GoStrToDStr(value))
}

func Bevel_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetComponentCount").Call(obj)
	return int32(ret)
}

func Bevel_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Bevel_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Bevel_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Bevel_SetComponentIndex").Call(obj, uintptr(value))
}

func Bevel_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetOwner").Call(obj)
	return ret
}

func Bevel_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Bevel_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Bevel_SetName(obj uintptr, value string) {
	getLazyProc("Bevel_SetName").Call(obj, GoStrToDStr(value))
}

func Bevel_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Bevel_GetTag").Call(obj)
	return int(ret)
}

func Bevel_SetTag(obj uintptr, value int) {
	getLazyProc("Bevel_SetTag").Call(obj, uintptr(value))
}

func Bevel_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetAnchorSideLeft").Call(obj)
	return ret
}

func Bevel_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetAnchorSideLeft").Call(obj, value)
}

func Bevel_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetAnchorSideTop").Call(obj)
	return ret
}

func Bevel_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetAnchorSideTop").Call(obj, value)
}

func Bevel_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetAnchorSideRight").Call(obj)
	return ret
}

func Bevel_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetAnchorSideRight").Call(obj, value)
}

func Bevel_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetAnchorSideBottom").Call(obj)
	return ret
}

func Bevel_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetAnchorSideBottom").Call(obj, value)
}

func Bevel_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetBorderSpacing").Call(obj)
	return ret
}

func Bevel_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Bevel_SetBorderSpacing").Call(obj, value)
}

func Bevel_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Bevel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Bevel_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Bevel_StaticClassType() TClass {
	r, _, _ := getLazyProc("Bevel_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TScrollBox ---------------------------

func ScrollBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_Create").Call(obj)
	return ret
}

func ScrollBox_Free(obj uintptr) {
	getLazyProc("ScrollBox_Free").Call(obj)
}

func ScrollBox_ScrollInView(obj uintptr, AControl uintptr) {
	getLazyProc("ScrollBox_ScrollInView").Call(obj, AControl)
}

func ScrollBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ScrollBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ScrollBox_DisableAlign(obj uintptr) {
	getLazyProc("ScrollBox_DisableAlign").Call(obj)
}

func ScrollBox_EnableAlign(obj uintptr) {
	getLazyProc("ScrollBox_EnableAlign").Call(obj)
}

func ScrollBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ScrollBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ScrollBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ScrollBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ScrollBox_InsertControl").Call(obj, AControl)
}

func ScrollBox_Invalidate(obj uintptr) {
	getLazyProc("ScrollBox_Invalidate").Call(obj)
}

func ScrollBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ScrollBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ScrollBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ScrollBox_RemoveControl").Call(obj, AControl)
}

func ScrollBox_Realign(obj uintptr) {
	getLazyProc("ScrollBox_Realign").Call(obj)
}

func ScrollBox_Repaint(obj uintptr) {
	getLazyProc("ScrollBox_Repaint").Call(obj)
}

func ScrollBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ScrollBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ScrollBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ScrollBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ScrollBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ScrollBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ScrollBox_SetFocus(obj uintptr) {
	getLazyProc("ScrollBox_SetFocus").Call(obj)
}

func ScrollBox_Update(obj uintptr) {
	getLazyProc("ScrollBox_Update").Call(obj)
}

func ScrollBox_BringToFront(obj uintptr) {
	getLazyProc("ScrollBox_BringToFront").Call(obj)
}

func ScrollBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ScrollBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ScrollBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_Hide(obj uintptr) {
	getLazyProc("ScrollBox_Hide").Call(obj)
}

func ScrollBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ScrollBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ScrollBox_Refresh(obj uintptr) {
	getLazyProc("ScrollBox_Refresh").Call(obj)
}

func ScrollBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ScrollBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ScrollBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBox_SendToBack(obj uintptr) {
	getLazyProc("ScrollBox_SendToBack").Call(obj)
}

func ScrollBox_Show(obj uintptr) {
	getLazyProc("ScrollBox_Show").Call(obj)
}

func ScrollBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ScrollBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ScrollBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetTextLen").Call(obj)
	return int32(ret)
}

func ScrollBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ScrollBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ScrollBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ScrollBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ScrollBox_Assign").Call(obj, Source)
}

func ScrollBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ScrollBox_ClassType").Call(obj)
	return TClass(ret)
}

func ScrollBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_InstanceSize").Call(obj)
	return int32(ret)
}

func ScrollBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ScrollBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ScrollBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetHashCode").Call(obj)
	return int32(ret)
}

func ScrollBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ScrollBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ScrollBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ScrollBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ScrollBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ScrollBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ScrollBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ScrollBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ScrollBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ScrollBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ScrollBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ScrollBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ScrollBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ScrollBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func ScrollBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ScrollBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ScrollBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ScrollBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ScrollBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ScrollBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ScrollBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ScrollBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ScrollBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ScrollBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func ScrollBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ScrollBox_SetAlign").Call(obj, uintptr(value))
}

func ScrollBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ScrollBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ScrollBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ScrollBox_SetAnchors").Call(obj, uintptr(value))
}

func ScrollBox_GetAutoScroll(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetAutoScroll").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetAutoScroll(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetAutoScroll").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ScrollBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ScrollBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ScrollBox_SetBiDiMode").Call(obj, uintptr(value))
}

func ScrollBox_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("ScrollBox_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func ScrollBox_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("ScrollBox_SetBorderStyle").Call(obj, uintptr(value))
}

func ScrollBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetConstraints").Call(obj)
	return ret
}

func ScrollBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetConstraints").Call(obj, value)
}

func ScrollBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ScrollBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ScrollBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ScrollBox_SetDragCursor").Call(obj, uintptr(value))
}

func ScrollBox_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ScrollBox_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ScrollBox_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ScrollBox_SetDragKind").Call(obj, uintptr(value))
}

func ScrollBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ScrollBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ScrollBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ScrollBox_SetDragMode").Call(obj, uintptr(value))
}

func ScrollBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ScrollBox_GetColor").Call(obj)
	return TColor(ret)
}

func ScrollBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("ScrollBox_SetColor").Call(obj, uintptr(value))
}

func ScrollBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetFont").Call(obj)
	return ret
}

func ScrollBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetFont").Call(obj, value)
}

func ScrollBox_GetParentBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetParentBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetParentBackground(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetParentBackground").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetPopupMenu").Call(obj)
	return ret
}

func ScrollBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetPopupMenu").Call(obj, value)
}

func ScrollBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ScrollBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ScrollBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ScrollBox_SetTabOrder").Call(obj, uintptr(value))
}

func ScrollBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnConstrainedResize(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnConstrainedResize").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseWheel(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseWheel").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_SetOnAlignPosition(obj uintptr, fn interface{}) {
	getLazyProc("ScrollBox_SetOnAlignPosition").Call(obj, addEventToMap(obj, fn))
}

func ScrollBox_GetHorzScrollBar(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetHorzScrollBar").Call(obj)
	return ret
}

func ScrollBox_SetHorzScrollBar(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetHorzScrollBar").Call(obj, value)
}

func ScrollBox_GetVertScrollBar(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetVertScrollBar").Call(obj)
	return ret
}

func ScrollBox_SetVertScrollBar(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetVertScrollBar").Call(obj, value)
}

func ScrollBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ScrollBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ScrollBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetBrush").Call(obj)
	return ret
}

func ScrollBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetControlCount").Call(obj)
	return int32(ret)
}

func ScrollBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ScrollBox_GetHandle").Call(obj)
	return HWND(ret)
}

func ScrollBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ScrollBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ScrollBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ScrollBox_SetParentWindow").Call(obj, uintptr(value))
}

func ScrollBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ScrollBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetAction").Call(obj)
	return ret
}

func ScrollBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetAction").Call(obj, value)
}

func ScrollBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ScrollBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ScrollBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ScrollBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func ScrollBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ScrollBox_SetClientHeight").Call(obj, uintptr(value))
}

func ScrollBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ScrollBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ScrollBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ScrollBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func ScrollBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ScrollBox_SetClientWidth").Call(obj, uintptr(value))
}

func ScrollBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ScrollBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func ScrollBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ScrollBox_SetControlState").Call(obj, uintptr(value))
}

func ScrollBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ScrollBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ScrollBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ScrollBox_SetControlStyle").Call(obj, uintptr(value))
}

func ScrollBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ScrollBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ScrollBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetParent").Call(obj)
	return ret
}

func ScrollBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetParent").Call(obj, value)
}

func ScrollBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetLeft").Call(obj)
	return int32(ret)
}

func ScrollBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("ScrollBox_SetLeft").Call(obj, uintptr(value))
}

func ScrollBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetTop").Call(obj)
	return int32(ret)
}

func ScrollBox_SetTop(obj uintptr, value int32) {
	getLazyProc("ScrollBox_SetTop").Call(obj, uintptr(value))
}

func ScrollBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetWidth").Call(obj)
	return int32(ret)
}

func ScrollBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("ScrollBox_SetWidth").Call(obj, uintptr(value))
}

func ScrollBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetHeight").Call(obj)
	return int32(ret)
}

func ScrollBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("ScrollBox_SetHeight").Call(obj, uintptr(value))
}

func ScrollBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ScrollBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func ScrollBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ScrollBox_SetCursor").Call(obj, uintptr(value))
}

func ScrollBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBox_SetHint(obj uintptr, value string) {
	getLazyProc("ScrollBox_SetHint").Call(obj, GoStrToDStr(value))
}

func ScrollBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func ScrollBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ScrollBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ScrollBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ScrollBox_SetComponentIndex").Call(obj, uintptr(value))
}

func ScrollBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetOwner").Call(obj)
	return ret
}

func ScrollBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ScrollBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ScrollBox_SetName(obj uintptr, value string) {
	getLazyProc("ScrollBox_SetName").Call(obj, GoStrToDStr(value))
}

func ScrollBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ScrollBox_GetTag").Call(obj)
	return int(ret)
}

func ScrollBox_SetTag(obj uintptr, value int) {
	getLazyProc("ScrollBox_SetTag").Call(obj, uintptr(value))
}

func ScrollBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func ScrollBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetAnchorSideLeft").Call(obj, value)
}

func ScrollBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetAnchorSideTop").Call(obj)
	return ret
}

func ScrollBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetAnchorSideTop").Call(obj, value)
}

func ScrollBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetAnchorSideRight").Call(obj)
	return ret
}

func ScrollBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetAnchorSideRight").Call(obj, value)
}

func ScrollBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func ScrollBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetAnchorSideBottom").Call(obj, value)
}

func ScrollBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetChildSizing").Call(obj)
	return ret
}

func ScrollBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetChildSizing").Call(obj, value)
}

func ScrollBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetBorderSpacing").Call(obj)
	return ret
}

func ScrollBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ScrollBox_SetBorderSpacing").Call(obj, value)
}

func ScrollBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ScrollBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ScrollBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ScrollBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ScrollBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ScrollBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("ScrollBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCheckListBox ---------------------------

func CheckListBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_Create").Call(obj)
	return ret
}

func CheckListBox_Free(obj uintptr) {
	getLazyProc("CheckListBox_Free").Call(obj)
}

func CheckListBox_CheckAll(obj uintptr, AState TCheckBoxState, AllowGrayed bool, AllowDisabled bool) {
	getLazyProc("CheckListBox_CheckAll").Call(obj, uintptr(AState), GoBoolToDBool(AllowGrayed), GoBoolToDBool(AllowDisabled))
}

func CheckListBox_AddItem(obj uintptr, Item string, AObject uintptr) {
	getLazyProc("CheckListBox_AddItem").Call(obj, GoStrToDStr(Item), AObject)
}

func CheckListBox_Clear(obj uintptr) {
	getLazyProc("CheckListBox_Clear").Call(obj)
}

func CheckListBox_ClearSelection(obj uintptr) {
	getLazyProc("CheckListBox_ClearSelection").Call(obj)
}

func CheckListBox_DeleteSelected(obj uintptr) {
	getLazyProc("CheckListBox_DeleteSelected").Call(obj)
}

func CheckListBox_ItemAtPos(obj uintptr, Pos TPoint, Existing bool) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ItemAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(Existing))
	return int32(ret)
}

func CheckListBox_ItemRect(obj uintptr, Index int32) TRect {
	var ret TRect
	getLazyProc("CheckListBox_ItemRect").Call(obj, uintptr(Index), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_SelectAll(obj uintptr) {
	getLazyProc("CheckListBox_SelectAll").Call(obj)
}

func CheckListBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func CheckListBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func CheckListBox_DisableAlign(obj uintptr) {
	getLazyProc("CheckListBox_DisableAlign").Call(obj)
}

func CheckListBox_EnableAlign(obj uintptr) {
	getLazyProc("CheckListBox_EnableAlign").Call(obj)
}

func CheckListBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func CheckListBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("CheckListBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func CheckListBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("CheckListBox_InsertControl").Call(obj, AControl)
}

func CheckListBox_Invalidate(obj uintptr) {
	getLazyProc("CheckListBox_Invalidate").Call(obj)
}

func CheckListBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("CheckListBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func CheckListBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("CheckListBox_RemoveControl").Call(obj, AControl)
}

func CheckListBox_Realign(obj uintptr) {
	getLazyProc("CheckListBox_Realign").Call(obj)
}

func CheckListBox_Repaint(obj uintptr) {
	getLazyProc("CheckListBox_Repaint").Call(obj)
}

func CheckListBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("CheckListBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func CheckListBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("CheckListBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func CheckListBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("CheckListBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func CheckListBox_SetFocus(obj uintptr) {
	getLazyProc("CheckListBox_SetFocus").Call(obj)
}

func CheckListBox_Update(obj uintptr) {
	getLazyProc("CheckListBox_Update").Call(obj)
}

func CheckListBox_BringToFront(obj uintptr) {
	getLazyProc("CheckListBox_BringToFront").Call(obj)
}

func CheckListBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CheckListBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckListBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_Hide(obj uintptr) {
	getLazyProc("CheckListBox_Hide").Call(obj)
}

func CheckListBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("CheckListBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func CheckListBox_Refresh(obj uintptr) {
	getLazyProc("CheckListBox_Refresh").Call(obj)
}

func CheckListBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CheckListBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckListBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_SendToBack(obj uintptr) {
	getLazyProc("CheckListBox_SendToBack").Call(obj)
}

func CheckListBox_Show(obj uintptr) {
	getLazyProc("CheckListBox_Show").Call(obj)
}

func CheckListBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("CheckListBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func CheckListBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetTextLen").Call(obj)
	return int32(ret)
}

func CheckListBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("CheckListBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func CheckListBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func CheckListBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckListBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func CheckListBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("CheckListBox_Assign").Call(obj, Source)
}

func CheckListBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("CheckListBox_ClassType").Call(obj)
	return TClass(ret)
}

func CheckListBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckListBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func CheckListBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_InstanceSize").Call(obj)
	return int32(ret)
}

func CheckListBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("CheckListBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func CheckListBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetHashCode").Call(obj)
	return int32(ret)
}

func CheckListBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckListBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func CheckListBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CheckListBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CheckListBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CheckListBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CheckListBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CheckListBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func CheckListBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CheckListBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func CheckListBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("CheckListBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func CheckListBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("CheckListBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func CheckListBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("CheckListBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func CheckListBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckListBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckListBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("CheckListBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func CheckListBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("CheckListBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func CheckListBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("CheckListBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func CheckListBox_SetOnClickCheck(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnClickCheck").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("CheckListBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func CheckListBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("CheckListBox_SetAlign").Call(obj, uintptr(value))
}

func CheckListBox_GetAllowGrayed(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetAllowGrayed").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetAllowGrayed(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetAllowGrayed").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("CheckListBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func CheckListBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("CheckListBox_SetAnchors").Call(obj, uintptr(value))
}

func CheckListBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("CheckListBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func CheckListBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("CheckListBox_SetBiDiMode").Call(obj, uintptr(value))
}

func CheckListBox_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("CheckListBox_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func CheckListBox_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("CheckListBox_SetBorderStyle").Call(obj, uintptr(value))
}

func CheckListBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("CheckListBox_GetColor").Call(obj)
	return TColor(ret)
}

func CheckListBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("CheckListBox_SetColor").Call(obj, uintptr(value))
}

func CheckListBox_GetColumns(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetColumns").Call(obj)
	return int32(ret)
}

func CheckListBox_SetColumns(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetColumns").Call(obj, uintptr(value))
}

func CheckListBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetConstraints").Call(obj)
	return ret
}

func CheckListBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetConstraints").Call(obj, value)
}

func CheckListBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CheckListBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func CheckListBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("CheckListBox_SetDragCursor").Call(obj, uintptr(value))
}

func CheckListBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("CheckListBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func CheckListBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("CheckListBox_SetDragMode").Call(obj, uintptr(value))
}

func CheckListBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetFont").Call(obj)
	return ret
}

func CheckListBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetFont").Call(obj, value)
}

func CheckListBox_GetItemHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetItemHeight").Call(obj)
	return int32(ret)
}

func CheckListBox_SetItemHeight(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetItemHeight").Call(obj, uintptr(value))
}

func CheckListBox_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetItems").Call(obj)
	return ret
}

func CheckListBox_SetItems(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetItems").Call(obj, value)
}

func CheckListBox_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetParentColor(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetPopupMenu").Call(obj)
	return ret
}

func CheckListBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetPopupMenu").Call(obj, value)
}

func CheckListBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetSorted(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetSorted").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetSorted(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetSorted").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetStyle(obj uintptr) TListBoxStyle {
	ret, _, _ := getLazyProc("CheckListBox_GetStyle").Call(obj)
	return TListBoxStyle(ret)
}

func CheckListBox_SetStyle(obj uintptr, value TListBoxStyle) {
	getLazyProc("CheckListBox_SetStyle").Call(obj, uintptr(value))
}

func CheckListBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("CheckListBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func CheckListBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("CheckListBox_SetTabOrder").Call(obj, uintptr(value))
}

func CheckListBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnMeasureItem(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnMeasureItem").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("CheckListBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func CheckListBox_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetCanvas").Call(obj)
	return ret
}

func CheckListBox_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetCount").Call(obj)
	return int32(ret)
}

func CheckListBox_GetTopIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetTopIndex").Call(obj)
	return int32(ret)
}

func CheckListBox_SetTopIndex(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetTopIndex").Call(obj, uintptr(value))
}

func CheckListBox_GetMultiSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetMultiSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetMultiSelect(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetMultiSelect").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetSelCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetSelCount").Call(obj)
	return int32(ret)
}

func CheckListBox_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetItemIndex").Call(obj)
	return int32(ret)
}

func CheckListBox_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetItemIndex").Call(obj, uintptr(value))
}

func CheckListBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func CheckListBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func CheckListBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetBrush").Call(obj)
	return ret
}

func CheckListBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetControlCount").Call(obj)
	return int32(ret)
}

func CheckListBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CheckListBox_GetHandle").Call(obj)
	return HWND(ret)
}

func CheckListBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CheckListBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func CheckListBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("CheckListBox_SetParentWindow").Call(obj, uintptr(value))
}

func CheckListBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("CheckListBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetAction").Call(obj)
	return ret
}

func CheckListBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetAction").Call(obj, value)
}

func CheckListBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CheckListBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("CheckListBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func CheckListBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func CheckListBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetClientHeight").Call(obj, uintptr(value))
}

func CheckListBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckListBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CheckListBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckListBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func CheckListBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetClientWidth").Call(obj, uintptr(value))
}

func CheckListBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("CheckListBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func CheckListBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("CheckListBox_SetControlState").Call(obj, uintptr(value))
}

func CheckListBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("CheckListBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func CheckListBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("CheckListBox_SetControlStyle").Call(obj, uintptr(value))
}

func CheckListBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckListBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetParent").Call(obj)
	return ret
}

func CheckListBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetParent").Call(obj, value)
}

func CheckListBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetLeft").Call(obj)
	return int32(ret)
}

func CheckListBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetLeft").Call(obj, uintptr(value))
}

func CheckListBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetTop").Call(obj)
	return int32(ret)
}

func CheckListBox_SetTop(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetTop").Call(obj, uintptr(value))
}

func CheckListBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetWidth").Call(obj)
	return int32(ret)
}

func CheckListBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetWidth").Call(obj, uintptr(value))
}

func CheckListBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetHeight").Call(obj)
	return int32(ret)
}

func CheckListBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetHeight").Call(obj, uintptr(value))
}

func CheckListBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CheckListBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func CheckListBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("CheckListBox_SetCursor").Call(obj, uintptr(value))
}

func CheckListBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckListBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func CheckListBox_SetHint(obj uintptr, value string) {
	getLazyProc("CheckListBox_SetHint").Call(obj, GoStrToDStr(value))
}

func CheckListBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func CheckListBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckListBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func CheckListBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("CheckListBox_SetComponentIndex").Call(obj, uintptr(value))
}

func CheckListBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetOwner").Call(obj)
	return ret
}

func CheckListBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckListBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func CheckListBox_SetName(obj uintptr, value string) {
	getLazyProc("CheckListBox_SetName").Call(obj, GoStrToDStr(value))
}

func CheckListBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("CheckListBox_GetTag").Call(obj)
	return int(ret)
}

func CheckListBox_SetTag(obj uintptr, value int) {
	getLazyProc("CheckListBox_SetTag").Call(obj, uintptr(value))
}

func CheckListBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func CheckListBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetAnchorSideLeft").Call(obj, value)
}

func CheckListBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetAnchorSideTop").Call(obj)
	return ret
}

func CheckListBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetAnchorSideTop").Call(obj, value)
}

func CheckListBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetAnchorSideRight").Call(obj)
	return ret
}

func CheckListBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetAnchorSideRight").Call(obj, value)
}

func CheckListBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func CheckListBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetAnchorSideBottom").Call(obj, value)
}

func CheckListBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetChildSizing").Call(obj)
	return ret
}

func CheckListBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetChildSizing").Call(obj, value)
}

func CheckListBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetBorderSpacing").Call(obj)
	return ret
}

func CheckListBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("CheckListBox_SetBorderSpacing").Call(obj, value)
}

func CheckListBox_GetChecked(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetChecked").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func CheckListBox_SetChecked(obj uintptr, Index int32, value bool) {
	getLazyProc("CheckListBox_SetChecked").Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetItemEnabled(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetItemEnabled").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func CheckListBox_SetItemEnabled(obj uintptr, Index int32, value bool) {
	getLazyProc("CheckListBox_SetItemEnabled").Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetState(obj uintptr, Index int32) TCheckBoxState {
	ret, _, _ := getLazyProc("CheckListBox_GetState").Call(obj, uintptr(Index))
	return TCheckBoxState(ret)
}

func CheckListBox_SetState(obj uintptr, Index int32, value TCheckBoxState) {
	getLazyProc("CheckListBox_SetState").Call(obj, uintptr(Index), uintptr(value))
}

func CheckListBox_GetHeader(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetHeader").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func CheckListBox_SetHeader(obj uintptr, Index int32, value bool) {
	getLazyProc("CheckListBox_SetHeader").Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetSelected(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("CheckListBox_GetSelected").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func CheckListBox_SetSelected(obj uintptr, Index int32, value bool) {
	getLazyProc("CheckListBox_SetSelected").Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func CheckListBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func CheckListBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func CheckListBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("CheckListBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func CheckListBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("CheckListBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TGauge ---------------------------

func Gauge_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_Create").Call(obj)
	return ret
}

func Gauge_Free(obj uintptr) {
	getLazyProc("Gauge_Free").Call(obj)
}

func Gauge_AddProgress(obj uintptr, Value int32) {
	getLazyProc("Gauge_AddProgress").Call(obj, uintptr(Value))
}

func Gauge_BringToFront(obj uintptr) {
	getLazyProc("Gauge_BringToFront").Call(obj)
}

func Gauge_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Gauge_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Gauge_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Gauge_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Gauge_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_Hide(obj uintptr) {
	getLazyProc("Gauge_Hide").Call(obj)
}

func Gauge_Invalidate(obj uintptr) {
	getLazyProc("Gauge_Invalidate").Call(obj)
}

func Gauge_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Gauge_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Gauge_Refresh(obj uintptr) {
	getLazyProc("Gauge_Refresh").Call(obj)
}

func Gauge_Repaint(obj uintptr) {
	getLazyProc("Gauge_Repaint").Call(obj)
}

func Gauge_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Gauge_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Gauge_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Gauge_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Gauge_SendToBack(obj uintptr) {
	getLazyProc("Gauge_SendToBack").Call(obj)
}

func Gauge_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Gauge_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Gauge_Show(obj uintptr) {
	getLazyProc("Gauge_Show").Call(obj)
}

func Gauge_Update(obj uintptr) {
	getLazyProc("Gauge_Update").Call(obj)
}

func Gauge_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Gauge_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Gauge_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetTextLen").Call(obj)
	return int32(ret)
}

func Gauge_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Gauge_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Gauge_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Gauge_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Gauge_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Gauge_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Gauge_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Gauge_Assign").Call(obj, Source)
}

func Gauge_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Gauge_ClassType").Call(obj)
	return TClass(ret)
}

func Gauge_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Gauge_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Gauge_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_InstanceSize").Call(obj)
	return int32(ret)
}

func Gauge_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Gauge_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Gauge_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Gauge_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetHashCode").Call(obj)
	return int32(ret)
}

func Gauge_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Gauge_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Gauge_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Gauge_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Gauge_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Gauge_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Gauge_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Gauge_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Gauge_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Gauge_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Gauge_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Gauge_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Gauge_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Gauge_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Gauge_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Gauge_AnchorClient").Call(obj, uintptr(ASpace))
}

func Gauge_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Gauge_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Gauge_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Gauge_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Gauge_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Gauge_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Gauge_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Gauge_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Gauge_GetPercentDone(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetPercentDone").Call(obj)
	return int32(ret)
}

func Gauge_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Gauge_GetAlign").Call(obj)
	return TAlign(ret)
}

func Gauge_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Gauge_SetAlign").Call(obj, uintptr(value))
}

func Gauge_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Gauge_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Gauge_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Gauge_SetAnchors").Call(obj, uintptr(value))
}

func Gauge_GetBackColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Gauge_GetBackColor").Call(obj)
	return TColor(ret)
}

func Gauge_SetBackColor(obj uintptr, value TColor) {
	getLazyProc("Gauge_SetBackColor").Call(obj, uintptr(value))
}

func Gauge_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("Gauge_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func Gauge_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("Gauge_SetBorderStyle").Call(obj, uintptr(value))
}

func Gauge_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Gauge_GetColor").Call(obj)
	return TColor(ret)
}

func Gauge_SetColor(obj uintptr, value TColor) {
	getLazyProc("Gauge_SetColor").Call(obj, uintptr(value))
}

func Gauge_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetConstraints").Call(obj)
	return ret
}

func Gauge_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetConstraints").Call(obj, value)
}

func Gauge_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Gauge_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Gauge_GetForeColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Gauge_GetForeColor").Call(obj)
	return TColor(ret)
}

func Gauge_SetForeColor(obj uintptr, value TColor) {
	getLazyProc("Gauge_SetForeColor").Call(obj, uintptr(value))
}

func Gauge_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetFont").Call(obj)
	return ret
}

func Gauge_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetFont").Call(obj, value)
}

func Gauge_GetKind(obj uintptr) TGaugeKind {
	ret, _, _ := getLazyProc("Gauge_GetKind").Call(obj)
	return TGaugeKind(ret)
}

func Gauge_SetKind(obj uintptr, value TGaugeKind) {
	getLazyProc("Gauge_SetKind").Call(obj, uintptr(value))
}

func Gauge_GetMinValue(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetMinValue").Call(obj)
	return int32(ret)
}

func Gauge_SetMinValue(obj uintptr, value int32) {
	getLazyProc("Gauge_SetMinValue").Call(obj, uintptr(value))
}

func Gauge_GetMaxValue(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetMaxValue").Call(obj)
	return int32(ret)
}

func Gauge_SetMaxValue(obj uintptr, value int32) {
	getLazyProc("Gauge_SetMaxValue").Call(obj, uintptr(value))
}

func Gauge_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_SetParentColor(obj uintptr, value bool) {
	getLazyProc("Gauge_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func Gauge_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Gauge_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Gauge_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Gauge_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Gauge_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetPopupMenu").Call(obj)
	return ret
}

func Gauge_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetPopupMenu").Call(obj, value)
}

func Gauge_GetProgress(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetProgress").Call(obj)
	return int32(ret)
}

func Gauge_SetProgress(obj uintptr, value int32) {
	getLazyProc("Gauge_SetProgress").Call(obj, uintptr(value))
}

func Gauge_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Gauge_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Gauge_GetShowText(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetShowText").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_SetShowText(obj uintptr, value bool) {
	getLazyProc("Gauge_SetShowText").Call(obj, GoBoolToDBool(value))
}

func Gauge_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_SetVisible(obj uintptr, value bool) {
	getLazyProc("Gauge_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Gauge_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetAction").Call(obj)
	return ret
}

func Gauge_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetAction").Call(obj, value)
}

func Gauge_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Gauge_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Gauge_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Gauge_SetBiDiMode").Call(obj, uintptr(value))
}

func Gauge_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Gauge_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Gauge_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Gauge_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Gauge_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetClientHeight").Call(obj)
	return int32(ret)
}

func Gauge_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Gauge_SetClientHeight").Call(obj, uintptr(value))
}

func Gauge_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Gauge_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Gauge_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Gauge_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Gauge_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetClientWidth").Call(obj)
	return int32(ret)
}

func Gauge_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Gauge_SetClientWidth").Call(obj, uintptr(value))
}

func Gauge_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Gauge_GetControlState").Call(obj)
	return TControlState(ret)
}

func Gauge_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Gauge_SetControlState").Call(obj, uintptr(value))
}

func Gauge_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Gauge_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Gauge_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Gauge_SetControlStyle").Call(obj, uintptr(value))
}

func Gauge_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Gauge_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Gauge_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetParent").Call(obj)
	return ret
}

func Gauge_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetParent").Call(obj, value)
}

func Gauge_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetLeft").Call(obj)
	return int32(ret)
}

func Gauge_SetLeft(obj uintptr, value int32) {
	getLazyProc("Gauge_SetLeft").Call(obj, uintptr(value))
}

func Gauge_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetTop").Call(obj)
	return int32(ret)
}

func Gauge_SetTop(obj uintptr, value int32) {
	getLazyProc("Gauge_SetTop").Call(obj, uintptr(value))
}

func Gauge_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetWidth").Call(obj)
	return int32(ret)
}

func Gauge_SetWidth(obj uintptr, value int32) {
	getLazyProc("Gauge_SetWidth").Call(obj, uintptr(value))
}

func Gauge_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetHeight").Call(obj)
	return int32(ret)
}

func Gauge_SetHeight(obj uintptr, value int32) {
	getLazyProc("Gauge_SetHeight").Call(obj, uintptr(value))
}

func Gauge_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Gauge_GetCursor").Call(obj)
	return TCursor(ret)
}

func Gauge_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Gauge_SetCursor").Call(obj, uintptr(value))
}

func Gauge_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Gauge_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Gauge_SetHint(obj uintptr, value string) {
	getLazyProc("Gauge_SetHint").Call(obj, GoStrToDStr(value))
}

func Gauge_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetComponentCount").Call(obj)
	return int32(ret)
}

func Gauge_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Gauge_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Gauge_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Gauge_SetComponentIndex").Call(obj, uintptr(value))
}

func Gauge_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetOwner").Call(obj)
	return ret
}

func Gauge_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Gauge_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Gauge_SetName(obj uintptr, value string) {
	getLazyProc("Gauge_SetName").Call(obj, GoStrToDStr(value))
}

func Gauge_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Gauge_GetTag").Call(obj)
	return int(ret)
}

func Gauge_SetTag(obj uintptr, value int) {
	getLazyProc("Gauge_SetTag").Call(obj, uintptr(value))
}

func Gauge_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetAnchorSideLeft").Call(obj)
	return ret
}

func Gauge_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetAnchorSideLeft").Call(obj, value)
}

func Gauge_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetAnchorSideTop").Call(obj)
	return ret
}

func Gauge_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetAnchorSideTop").Call(obj, value)
}

func Gauge_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetAnchorSideRight").Call(obj)
	return ret
}

func Gauge_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetAnchorSideRight").Call(obj, value)
}

func Gauge_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetAnchorSideBottom").Call(obj)
	return ret
}

func Gauge_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetAnchorSideBottom").Call(obj, value)
}

func Gauge_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetBorderSpacing").Call(obj)
	return ret
}

func Gauge_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Gauge_SetBorderSpacing").Call(obj, value)
}

func Gauge_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Gauge_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Gauge_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Gauge_StaticClassType() TClass {
	r, _, _ := getLazyProc("Gauge_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TImageButton ---------------------------

func ImageButton_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_Create").Call(obj)
	return ret
}

func ImageButton_Free(obj uintptr) {
	getLazyProc("ImageButton_Free").Call(obj)
}

func ImageButton_Click(obj uintptr) {
	getLazyProc("ImageButton_Click").Call(obj)
}

func ImageButton_BringToFront(obj uintptr) {
	getLazyProc("ImageButton_BringToFront").Call(obj)
}

func ImageButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ImageButton_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ImageButton_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageButton_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_Hide(obj uintptr) {
	getLazyProc("ImageButton_Hide").Call(obj)
}

func ImageButton_Invalidate(obj uintptr) {
	getLazyProc("ImageButton_Invalidate").Call(obj)
}

func ImageButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ImageButton_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ImageButton_Refresh(obj uintptr) {
	getLazyProc("ImageButton_Refresh").Call(obj)
}

func ImageButton_Repaint(obj uintptr) {
	getLazyProc("ImageButton_Repaint").Call(obj)
}

func ImageButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ImageButton_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ImageButton_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageButton_SendToBack(obj uintptr) {
	getLazyProc("ImageButton_SendToBack").Call(obj)
}

func ImageButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ImageButton_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ImageButton_Show(obj uintptr) {
	getLazyProc("ImageButton_Show").Call(obj)
}

func ImageButton_Update(obj uintptr) {
	getLazyProc("ImageButton_Update").Call(obj)
}

func ImageButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ImageButton_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ImageButton_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetTextLen").Call(obj)
	return int32(ret)
}

func ImageButton_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ImageButton_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ImageButton_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ImageButton_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ImageButton_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageButton_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ImageButton_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ImageButton_Assign").Call(obj, Source)
}

func ImageButton_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ImageButton_ClassType").Call(obj)
	return TClass(ret)
}

func ImageButton_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageButton_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ImageButton_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_InstanceSize").Call(obj)
	return int32(ret)
}

func ImageButton_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ImageButton_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ImageButton_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ImageButton_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetHashCode").Call(obj)
	return int32(ret)
}

func ImageButton_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageButton_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ImageButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ImageButton_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ImageButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ImageButton_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ImageButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ImageButton_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ImageButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ImageButton_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ImageButton_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ImageButton_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ImageButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ImageButton_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ImageButton_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ImageButton_AnchorClient").Call(obj, uintptr(ASpace))
}

func ImageButton_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ImageButton_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ImageButton_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ImageButton_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ImageButton_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ImageButton_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ImageButton_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ImageButton_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ImageButton_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetAction").Call(obj)
	return ret
}

func ImageButton_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetAction").Call(obj, value)
}

func ImageButton_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ImageButton_GetAlign").Call(obj)
	return TAlign(ret)
}

func ImageButton_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ImageButton_SetAlign").Call(obj, uintptr(value))
}

func ImageButton_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ImageButton_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ImageButton_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ImageButton_SetAnchors").Call(obj, uintptr(value))
}

func ImageButton_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("ImageButton_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetConstraints").Call(obj)
	return ret
}

func ImageButton_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetConstraints").Call(obj, value)
}

func ImageButton_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageButton_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func ImageButton_SetCaption(obj uintptr, value string) {
	getLazyProc("ImageButton_SetCaption").Call(obj, GoStrToDStr(value))
}

func ImageButton_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ImageButton_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ImageButton_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ImageButton_SetDragCursor").Call(obj, uintptr(value))
}

func ImageButton_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ImageButton_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ImageButton_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ImageButton_SetDragKind").Call(obj, uintptr(value))
}

func ImageButton_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ImageButton_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ImageButton_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ImageButton_SetDragMode").Call(obj, uintptr(value))
}

func ImageButton_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ImageButton_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetFont").Call(obj)
	return ret
}

func ImageButton_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetFont").Call(obj, value)
}

func ImageButton_GetImageCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetImageCount").Call(obj)
	return int32(ret)
}

func ImageButton_SetImageCount(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetImageCount").Call(obj, uintptr(value))
}

func ImageButton_GetOrientation(obj uintptr) TImageOrientation {
	ret, _, _ := getLazyProc("ImageButton_GetOrientation").Call(obj)
	return TImageOrientation(ret)
}

func ImageButton_SetOrientation(obj uintptr, value TImageOrientation) {
	getLazyProc("ImageButton_SetOrientation").Call(obj, uintptr(value))
}

func ImageButton_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("ImageButton_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func ImageButton_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("ImageButton_SetModalResult").Call(obj, uintptr(value))
}

func ImageButton_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ImageButton_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ImageButton_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetPicture(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetPicture").Call(obj)
	return ret
}

func ImageButton_SetPicture(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetPicture").Call(obj, value)
}

func ImageButton_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetPopupMenu").Call(obj)
	return ret
}

func ImageButton_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetPopupMenu").Call(obj, value)
}

func ImageButton_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ImageButton_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetShowCaption(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetShowCaption").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_SetShowCaption(obj uintptr, value bool) {
	getLazyProc("ImageButton_SetShowCaption").Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_SetVisible(obj uintptr, value bool) {
	getLazyProc("ImageButton_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ImageButton_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ImageButton_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ImageButton_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ImageButton_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ImageButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ImageButton_SetBiDiMode").Call(obj, uintptr(value))
}

func ImageButton_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ImageButton_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageButton_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ImageButton_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ImageButton_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetClientHeight").Call(obj)
	return int32(ret)
}

func ImageButton_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetClientHeight").Call(obj, uintptr(value))
}

func ImageButton_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ImageButton_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageButton_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ImageButton_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ImageButton_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetClientWidth").Call(obj)
	return int32(ret)
}

func ImageButton_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetClientWidth").Call(obj, uintptr(value))
}

func ImageButton_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ImageButton_GetControlState").Call(obj)
	return TControlState(ret)
}

func ImageButton_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ImageButton_SetControlState").Call(obj, uintptr(value))
}

func ImageButton_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ImageButton_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ImageButton_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ImageButton_SetControlStyle").Call(obj, uintptr(value))
}

func ImageButton_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ImageButton_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ImageButton_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetParent").Call(obj)
	return ret
}

func ImageButton_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetParent").Call(obj, value)
}

func ImageButton_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetLeft").Call(obj)
	return int32(ret)
}

func ImageButton_SetLeft(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetLeft").Call(obj, uintptr(value))
}

func ImageButton_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetTop").Call(obj)
	return int32(ret)
}

func ImageButton_SetTop(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetTop").Call(obj, uintptr(value))
}

func ImageButton_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetWidth").Call(obj)
	return int32(ret)
}

func ImageButton_SetWidth(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetWidth").Call(obj, uintptr(value))
}

func ImageButton_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetHeight").Call(obj)
	return int32(ret)
}

func ImageButton_SetHeight(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetHeight").Call(obj, uintptr(value))
}

func ImageButton_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ImageButton_GetCursor").Call(obj)
	return TCursor(ret)
}

func ImageButton_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ImageButton_SetCursor").Call(obj, uintptr(value))
}

func ImageButton_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageButton_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ImageButton_SetHint(obj uintptr, value string) {
	getLazyProc("ImageButton_SetHint").Call(obj, GoStrToDStr(value))
}

func ImageButton_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetComponentCount").Call(obj)
	return int32(ret)
}

func ImageButton_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ImageButton_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ImageButton_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ImageButton_SetComponentIndex").Call(obj, uintptr(value))
}

func ImageButton_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetOwner").Call(obj)
	return ret
}

func ImageButton_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ImageButton_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ImageButton_SetName(obj uintptr, value string) {
	getLazyProc("ImageButton_SetName").Call(obj, GoStrToDStr(value))
}

func ImageButton_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ImageButton_GetTag").Call(obj)
	return int(ret)
}

func ImageButton_SetTag(obj uintptr, value int) {
	getLazyProc("ImageButton_SetTag").Call(obj, uintptr(value))
}

func ImageButton_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetAnchorSideLeft").Call(obj)
	return ret
}

func ImageButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetAnchorSideLeft").Call(obj, value)
}

func ImageButton_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetAnchorSideTop").Call(obj)
	return ret
}

func ImageButton_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetAnchorSideTop").Call(obj, value)
}

func ImageButton_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetAnchorSideRight").Call(obj)
	return ret
}

func ImageButton_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetAnchorSideRight").Call(obj, value)
}

func ImageButton_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetAnchorSideBottom").Call(obj)
	return ret
}

func ImageButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetAnchorSideBottom").Call(obj, value)
}

func ImageButton_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetBorderSpacing").Call(obj)
	return ret
}

func ImageButton_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ImageButton_SetBorderSpacing").Call(obj, value)
}

func ImageButton_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ImageButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ImageButton_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ImageButton_StaticClassType() TClass {
	r, _, _ := getLazyProc("ImageButton_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TFindDialog ---------------------------

func FindDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FindDialog_Create").Call(obj)
	return ret
}

func FindDialog_Free(obj uintptr) {
	getLazyProc("FindDialog_Free").Call(obj)
}

func FindDialog_CloseDialog(obj uintptr) {
	getLazyProc("FindDialog_CloseDialog").Call(obj)
}

func FindDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("FindDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func FindDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("FindDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func FindDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("FindDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func FindDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("FindDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func FindDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("FindDialog_Assign").Call(obj, Source)
}

func FindDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("FindDialog_ClassType").Call(obj)
	return TClass(ret)
}

func FindDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("FindDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func FindDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FindDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func FindDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("FindDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func FindDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("FindDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func FindDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FindDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func FindDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("FindDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func FindDialog_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FindDialog_GetLeft").Call(obj)
	return int32(ret)
}

func FindDialog_SetLeft(obj uintptr, value int32) {
	getLazyProc("FindDialog_SetLeft").Call(obj, uintptr(value))
}

func FindDialog_GetPosition(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("FindDialog_GetPosition").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FindDialog_SetPosition(obj uintptr, value TPoint) {
	getLazyProc("FindDialog_SetPosition").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func FindDialog_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FindDialog_GetTop").Call(obj)
	return int32(ret)
}

func FindDialog_SetTop(obj uintptr, value int32) {
	getLazyProc("FindDialog_SetTop").Call(obj, uintptr(value))
}

func FindDialog_GetFindText(obj uintptr) string {
	ret, _, _ := getLazyProc("FindDialog_GetFindText").Call(obj)
	return DStrToGoStr(ret)
}

func FindDialog_SetFindText(obj uintptr, value string) {
	getLazyProc("FindDialog_SetFindText").Call(obj, GoStrToDStr(value))
}

func FindDialog_GetOptions(obj uintptr) TFindOptions {
	ret, _, _ := getLazyProc("FindDialog_GetOptions").Call(obj)
	return TFindOptions(ret)
}

func FindDialog_SetOptions(obj uintptr, value TFindOptions) {
	getLazyProc("FindDialog_SetOptions").Call(obj, uintptr(value))
}

func FindDialog_SetOnFind(obj uintptr, fn interface{}) {
	getLazyProc("FindDialog_SetOnFind").Call(obj, addEventToMap(obj, fn))
}

func FindDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("FindDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func FindDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("FindDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func FindDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("FindDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func FindDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FindDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func FindDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FindDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func FindDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("FindDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func FindDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FindDialog_GetOwner").Call(obj)
	return ret
}

func FindDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("FindDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func FindDialog_SetName(obj uintptr, value string) {
	getLazyProc("FindDialog_SetName").Call(obj, GoStrToDStr(value))
}

func FindDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("FindDialog_GetTag").Call(obj)
	return int(ret)
}

func FindDialog_SetTag(obj uintptr, value int) {
	getLazyProc("FindDialog_SetTag").Call(obj, uintptr(value))
}

func FindDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("FindDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func FindDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("FindDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TReplaceDialog ---------------------------

func ReplaceDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ReplaceDialog_Create").Call(obj)
	return ret
}

func ReplaceDialog_Free(obj uintptr) {
	getLazyProc("ReplaceDialog_Free").Call(obj)
}

func ReplaceDialog_CloseDialog(obj uintptr) {
	getLazyProc("ReplaceDialog_CloseDialog").Call(obj)
}

func ReplaceDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("ReplaceDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func ReplaceDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ReplaceDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ReplaceDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ReplaceDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ReplaceDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ReplaceDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ReplaceDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ReplaceDialog_Assign").Call(obj, Source)
}

func ReplaceDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ReplaceDialog_ClassType").Call(obj)
	return TClass(ret)
}

func ReplaceDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ReplaceDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ReplaceDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ReplaceDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func ReplaceDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ReplaceDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ReplaceDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ReplaceDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ReplaceDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ReplaceDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func ReplaceDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ReplaceDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ReplaceDialog_GetReplaceText(obj uintptr) string {
	ret, _, _ := getLazyProc("ReplaceDialog_GetReplaceText").Call(obj)
	return DStrToGoStr(ret)
}

func ReplaceDialog_SetReplaceText(obj uintptr, value string) {
	getLazyProc("ReplaceDialog_SetReplaceText").Call(obj, GoStrToDStr(value))
}

func ReplaceDialog_SetOnReplace(obj uintptr, fn interface{}) {
	getLazyProc("ReplaceDialog_SetOnReplace").Call(obj, addEventToMap(obj, fn))
}

func ReplaceDialog_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ReplaceDialog_GetLeft").Call(obj)
	return int32(ret)
}

func ReplaceDialog_SetLeft(obj uintptr, value int32) {
	getLazyProc("ReplaceDialog_SetLeft").Call(obj, uintptr(value))
}

func ReplaceDialog_GetPosition(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ReplaceDialog_GetPosition").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ReplaceDialog_SetPosition(obj uintptr, value TPoint) {
	getLazyProc("ReplaceDialog_SetPosition").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ReplaceDialog_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ReplaceDialog_GetTop").Call(obj)
	return int32(ret)
}

func ReplaceDialog_SetTop(obj uintptr, value int32) {
	getLazyProc("ReplaceDialog_SetTop").Call(obj, uintptr(value))
}

func ReplaceDialog_GetFindText(obj uintptr) string {
	ret, _, _ := getLazyProc("ReplaceDialog_GetFindText").Call(obj)
	return DStrToGoStr(ret)
}

func ReplaceDialog_SetFindText(obj uintptr, value string) {
	getLazyProc("ReplaceDialog_SetFindText").Call(obj, GoStrToDStr(value))
}

func ReplaceDialog_GetOptions(obj uintptr) TFindOptions {
	ret, _, _ := getLazyProc("ReplaceDialog_GetOptions").Call(obj)
	return TFindOptions(ret)
}

func ReplaceDialog_SetOptions(obj uintptr, value TFindOptions) {
	getLazyProc("ReplaceDialog_SetOptions").Call(obj, uintptr(value))
}

func ReplaceDialog_SetOnFind(obj uintptr, fn interface{}) {
	getLazyProc("ReplaceDialog_SetOnFind").Call(obj, addEventToMap(obj, fn))
}

func ReplaceDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ReplaceDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func ReplaceDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("ReplaceDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func ReplaceDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("ReplaceDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func ReplaceDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ReplaceDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func ReplaceDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ReplaceDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ReplaceDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ReplaceDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func ReplaceDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ReplaceDialog_GetOwner").Call(obj)
	return ret
}

func ReplaceDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ReplaceDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ReplaceDialog_SetName(obj uintptr, value string) {
	getLazyProc("ReplaceDialog_SetName").Call(obj, GoStrToDStr(value))
}

func ReplaceDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ReplaceDialog_GetTag").Call(obj)
	return int(ret)
}

func ReplaceDialog_SetTag(obj uintptr, value int) {
	getLazyProc("ReplaceDialog_SetTag").Call(obj, uintptr(value))
}

func ReplaceDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ReplaceDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ReplaceDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("ReplaceDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPrinterSetupDialog ---------------------------

func PrinterSetupDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PrinterSetupDialog_Create").Call(obj)
	return ret
}

func PrinterSetupDialog_Free(obj uintptr) {
	getLazyProc("PrinterSetupDialog_Free").Call(obj)
}

func PrinterSetupDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("PrinterSetupDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func PrinterSetupDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("PrinterSetupDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func PrinterSetupDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func PrinterSetupDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("PrinterSetupDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func PrinterSetupDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("PrinterSetupDialog_Assign").Call(obj, Source)
}

func PrinterSetupDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("PrinterSetupDialog_ClassType").Call(obj)
	return TClass(ret)
}

func PrinterSetupDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("PrinterSetupDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func PrinterSetupDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrinterSetupDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func PrinterSetupDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("PrinterSetupDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func PrinterSetupDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("PrinterSetupDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func PrinterSetupDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func PrinterSetupDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("PrinterSetupDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func PrinterSetupDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func PrinterSetupDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("PrinterSetupDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func PrinterSetupDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("PrinterSetupDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func PrinterSetupDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func PrinterSetupDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func PrinterSetupDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("PrinterSetupDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func PrinterSetupDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetOwner").Call(obj)
	return ret
}

func PrinterSetupDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func PrinterSetupDialog_SetName(obj uintptr, value string) {
	getLazyProc("PrinterSetupDialog_SetName").Call(obj, GoStrToDStr(value))
}

func PrinterSetupDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetTag").Call(obj)
	return int(ret)
}

func PrinterSetupDialog_SetTag(obj uintptr, value int) {
	getLazyProc("PrinterSetupDialog_SetTag").Call(obj, uintptr(value))
}

func PrinterSetupDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("PrinterSetupDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func PrinterSetupDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("PrinterSetupDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPageSetupDialog ---------------------------

func PageSetupDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageSetupDialog_Create").Call(obj)
	return ret
}

func PageSetupDialog_Free(obj uintptr) {
	getLazyProc("PageSetupDialog_Free").Call(obj)
}

func PageSetupDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageSetupDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func PageSetupDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("PageSetupDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func PageSetupDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("PageSetupDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func PageSetupDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("PageSetupDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func PageSetupDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("PageSetupDialog_Assign").Call(obj, Source)
}

func PageSetupDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("PageSetupDialog_ClassType").Call(obj)
	return TClass(ret)
}

func PageSetupDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("PageSetupDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func PageSetupDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func PageSetupDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("PageSetupDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func PageSetupDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("PageSetupDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func PageSetupDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func PageSetupDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("PageSetupDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func PageSetupDialog_GetMarginLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetMarginLeft").Call(obj)
	return int32(ret)
}

func PageSetupDialog_SetMarginLeft(obj uintptr, value int32) {
	getLazyProc("PageSetupDialog_SetMarginLeft").Call(obj, uintptr(value))
}

func PageSetupDialog_GetMarginTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetMarginTop").Call(obj)
	return int32(ret)
}

func PageSetupDialog_SetMarginTop(obj uintptr, value int32) {
	getLazyProc("PageSetupDialog_SetMarginTop").Call(obj, uintptr(value))
}

func PageSetupDialog_GetMarginRight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetMarginRight").Call(obj)
	return int32(ret)
}

func PageSetupDialog_SetMarginRight(obj uintptr, value int32) {
	getLazyProc("PageSetupDialog_SetMarginRight").Call(obj, uintptr(value))
}

func PageSetupDialog_GetMarginBottom(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetMarginBottom").Call(obj)
	return int32(ret)
}

func PageSetupDialog_SetMarginBottom(obj uintptr, value int32) {
	getLazyProc("PageSetupDialog_SetMarginBottom").Call(obj, uintptr(value))
}

func PageSetupDialog_GetOptions(obj uintptr) TPageSetupDialogOptions {
	ret, _, _ := getLazyProc("PageSetupDialog_GetOptions").Call(obj)
	return TPageSetupDialogOptions(ret)
}

func PageSetupDialog_SetOptions(obj uintptr, value TPageSetupDialogOptions) {
	getLazyProc("PageSetupDialog_SetOptions").Call(obj, uintptr(value))
}

func PageSetupDialog_GetPageWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetPageWidth").Call(obj)
	return int32(ret)
}

func PageSetupDialog_SetPageWidth(obj uintptr, value int32) {
	getLazyProc("PageSetupDialog_SetPageWidth").Call(obj, uintptr(value))
}

func PageSetupDialog_GetPageHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetPageHeight").Call(obj)
	return int32(ret)
}

func PageSetupDialog_SetPageHeight(obj uintptr, value int32) {
	getLazyProc("PageSetupDialog_SetPageHeight").Call(obj, uintptr(value))
}

func PageSetupDialog_GetUnits(obj uintptr) TPageMeasureUnits {
	ret, _, _ := getLazyProc("PageSetupDialog_GetUnits").Call(obj)
	return TPageMeasureUnits(ret)
}

func PageSetupDialog_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("PageSetupDialog_GetHandle").Call(obj)
	return HWND(ret)
}

func PageSetupDialog_SetOnClose(obj uintptr, fn interface{}) {
	getLazyProc("PageSetupDialog_SetOnClose").Call(obj, addEventToMap(obj, fn))
}

func PageSetupDialog_SetOnShow(obj uintptr, fn interface{}) {
	getLazyProc("PageSetupDialog_SetOnShow").Call(obj, addEventToMap(obj, fn))
}

func PageSetupDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func PageSetupDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("PageSetupDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func PageSetupDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("PageSetupDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func PageSetupDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("PageSetupDialog_GetOwner").Call(obj)
	return ret
}

func PageSetupDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("PageSetupDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func PageSetupDialog_SetName(obj uintptr, value string) {
	getLazyProc("PageSetupDialog_SetName").Call(obj, GoStrToDStr(value))
}

func PageSetupDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("PageSetupDialog_GetTag").Call(obj)
	return int(ret)
}

func PageSetupDialog_SetTag(obj uintptr, value int) {
	getLazyProc("PageSetupDialog_SetTag").Call(obj, uintptr(value))
}

func PageSetupDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("PageSetupDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func PageSetupDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("PageSetupDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TDragObject ---------------------------

func DragObject_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DragObject_Create").Call(obj)
	return ret
}

func DragObject_Free(obj uintptr) {
	getLazyProc("DragObject_Free").Call(obj)
}

func DragObject_Assign(obj uintptr, Source uintptr) {
	getLazyProc("DragObject_Assign").Call(obj, Source)
}

func DragObject_HideDragImage(obj uintptr) {
	getLazyProc("DragObject_HideDragImage").Call(obj)
}

func DragObject_ShowDragImage(obj uintptr) {
	getLazyProc("DragObject_ShowDragImage").Call(obj)
}

func DragObject_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("DragObject_ClassType").Call(obj)
	return TClass(ret)
}

func DragObject_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("DragObject_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func DragObject_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DragObject_InstanceSize").Call(obj)
	return int32(ret)
}

func DragObject_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("DragObject_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func DragObject_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("DragObject_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func DragObject_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DragObject_GetHashCode").Call(obj)
	return int32(ret)
}

func DragObject_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("DragObject_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func DragObject_GetAlwaysShowDragImages(obj uintptr) bool {
	ret, _, _ := getLazyProc("DragObject_GetAlwaysShowDragImages").Call(obj)
	return DBoolToGoBool(ret)
}

func DragObject_SetAlwaysShowDragImages(obj uintptr, value bool) {
	getLazyProc("DragObject_SetAlwaysShowDragImages").Call(obj, GoBoolToDBool(value))
}

func DragObject_GetDragPos(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("DragObject_GetDragPos").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DragObject_SetDragPos(obj uintptr, value TPoint) {
	getLazyProc("DragObject_SetDragPos").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragObject_GetDragTarget(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DragObject_GetDragTarget").Call(obj)
	return ret
}

func DragObject_SetDragTarget(obj uintptr, value uintptr) {
	getLazyProc("DragObject_SetDragTarget").Call(obj, value)
}

func DragObject_GetDragTargetPos(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("DragObject_GetDragTargetPos").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DragObject_SetDragTargetPos(obj uintptr, value TPoint) {
	getLazyProc("DragObject_SetDragTargetPos").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragObject_GetDropped(obj uintptr) bool {
	ret, _, _ := getLazyProc("DragObject_GetDropped").Call(obj)
	return DBoolToGoBool(ret)
}

func DragObject_StaticClassType() TClass {
	r, _, _ := getLazyProc("DragObject_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TDragDockObject ---------------------------

func DragDockObject_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DragDockObject_Create").Call(obj)
	return ret
}

func DragDockObject_Free(obj uintptr) {
	getLazyProc("DragDockObject_Free").Call(obj)
}

func DragDockObject_Assign(obj uintptr, Source uintptr) {
	getLazyProc("DragDockObject_Assign").Call(obj, Source)
}

func DragDockObject_HideDragImage(obj uintptr) {
	getLazyProc("DragDockObject_HideDragImage").Call(obj)
}

func DragDockObject_ShowDragImage(obj uintptr) {
	getLazyProc("DragDockObject_ShowDragImage").Call(obj)
}

func DragDockObject_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("DragDockObject_ClassType").Call(obj)
	return TClass(ret)
}

func DragDockObject_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("DragDockObject_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func DragDockObject_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DragDockObject_InstanceSize").Call(obj)
	return int32(ret)
}

func DragDockObject_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("DragDockObject_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func DragDockObject_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("DragDockObject_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func DragDockObject_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DragDockObject_GetHashCode").Call(obj)
	return int32(ret)
}

func DragDockObject_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("DragDockObject_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func DragDockObject_GetDockRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("DragDockObject_GetDockRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DragDockObject_SetDockRect(obj uintptr, value TRect) {
	getLazyProc("DragDockObject_SetDockRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetDropAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("DragDockObject_GetDropAlign").Call(obj)
	return TAlign(ret)
}

func DragDockObject_GetDropOnControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DragDockObject_GetDropOnControl").Call(obj)
	return ret
}

func DragDockObject_GetEraseDockRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("DragDockObject_GetEraseDockRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DragDockObject_SetEraseDockRect(obj uintptr, value TRect) {
	getLazyProc("DragDockObject_SetEraseDockRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("DragDockObject_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func DragDockObject_SetFloating(obj uintptr, value bool) {
	getLazyProc("DragDockObject_SetFloating").Call(obj, GoBoolToDBool(value))
}

func DragDockObject_GetControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DragDockObject_GetControl").Call(obj)
	return ret
}

func DragDockObject_SetControl(obj uintptr, value uintptr) {
	getLazyProc("DragDockObject_SetControl").Call(obj, value)
}

func DragDockObject_GetAlwaysShowDragImages(obj uintptr) bool {
	ret, _, _ := getLazyProc("DragDockObject_GetAlwaysShowDragImages").Call(obj)
	return DBoolToGoBool(ret)
}

func DragDockObject_SetAlwaysShowDragImages(obj uintptr, value bool) {
	getLazyProc("DragDockObject_SetAlwaysShowDragImages").Call(obj, GoBoolToDBool(value))
}

func DragDockObject_GetDragPos(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("DragDockObject_GetDragPos").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DragDockObject_SetDragPos(obj uintptr, value TPoint) {
	getLazyProc("DragDockObject_SetDragPos").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetDragTarget(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DragDockObject_GetDragTarget").Call(obj)
	return ret
}

func DragDockObject_SetDragTarget(obj uintptr, value uintptr) {
	getLazyProc("DragDockObject_SetDragTarget").Call(obj, value)
}

func DragDockObject_GetDragTargetPos(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("DragDockObject_GetDragTargetPos").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DragDockObject_SetDragTargetPos(obj uintptr, value TPoint) {
	getLazyProc("DragDockObject_SetDragTargetPos").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetDropped(obj uintptr) bool {
	ret, _, _ := getLazyProc("DragDockObject_GetDropped").Call(obj)
	return DBoolToGoBool(ret)
}

func DragDockObject_StaticClassType() TClass {
	r, _, _ := getLazyProc("DragDockObject_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TStringGrid ---------------------------

func StringGrid_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_Create").Call(obj)
	return ret
}

func StringGrid_Free(obj uintptr) {
	getLazyProc("StringGrid_Free").Call(obj)
}

func StringGrid_DeleteColRow(obj uintptr, IsColumn bool, index int32) {
	getLazyProc("StringGrid_DeleteColRow").Call(obj, GoBoolToDBool(IsColumn), uintptr(index))
}

func StringGrid_DeleteCol(obj uintptr, Index int32) {
	getLazyProc("StringGrid_DeleteCol").Call(obj, uintptr(Index))
}

func StringGrid_DeleteRow(obj uintptr, Index int32) {
	getLazyProc("StringGrid_DeleteRow").Call(obj, uintptr(Index))
}

func StringGrid_ExchangeColRow(obj uintptr, IsColumn bool, index int32, WithIndex int32) {
	getLazyProc("StringGrid_ExchangeColRow").Call(obj, GoBoolToDBool(IsColumn), uintptr(index), uintptr(WithIndex))
}

func StringGrid_InsertColRow(obj uintptr, IsColumn bool, index int32) {
	getLazyProc("StringGrid_InsertColRow").Call(obj, GoBoolToDBool(IsColumn), uintptr(index))
}

func StringGrid_MoveColRow(obj uintptr, IsColumn bool, FromIndex int32, ToIndex int32) {
	getLazyProc("StringGrid_MoveColRow").Call(obj, GoBoolToDBool(IsColumn), uintptr(FromIndex), uintptr(ToIndex))
}

func StringGrid_SortColRow(obj uintptr, IsColumn bool, Index int32, FromIndex int32, ToIndex int32) {
	getLazyProc("StringGrid_SortColRow").Call(obj, GoBoolToDBool(IsColumn), uintptr(Index), uintptr(FromIndex), uintptr(ToIndex))
}

func StringGrid_EditorByStyle(obj uintptr, Style TColumnButtonStyle) uintptr {
	ret, _, _ := getLazyProc("StringGrid_EditorByStyle").Call(obj, uintptr(Style))
	return ret
}

func StringGrid_EditorKeyDown(obj uintptr, Sender uintptr, Key *uint16, Shift TShiftState) {
	getLazyProc("StringGrid_EditorKeyDown").Call(obj, Sender, uintptr(unsafe.Pointer(Key)), uintptr(Shift))
}

func StringGrid_EditorKeyPress(obj uintptr, Sender uintptr, Key *uint16) {
	getLazyProc("StringGrid_EditorKeyPress").Call(obj, Sender, uintptr(unsafe.Pointer(Key)))
}

func StringGrid_EditorKeyUp(obj uintptr, Sender uintptr, key *uint16, shift TShiftState) {
	getLazyProc("StringGrid_EditorKeyUp").Call(obj, Sender, uintptr(unsafe.Pointer(key)), uintptr(shift))
}

func StringGrid_EditorTextChanged(obj uintptr, aCol int32, aRow int32, aText string) {
	getLazyProc("StringGrid_EditorTextChanged").Call(obj, uintptr(aCol), uintptr(aRow), GoStrToDStr(aText))
}

func StringGrid_EditingDone(obj uintptr) {
	getLazyProc("StringGrid_EditingDone").Call(obj)
}

func StringGrid_AutoAdjustColumns(obj uintptr) {
	getLazyProc("StringGrid_AutoAdjustColumns").Call(obj)
}

func StringGrid_CellRect(obj uintptr, ACol int32, ARow int32) TRect {
	var ret TRect
	getLazyProc("StringGrid_CellRect").Call(obj, uintptr(ACol), uintptr(ARow), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_CellToGridZone(obj uintptr, aCol int32, aRow int32) TGridZone {
	ret, _, _ := getLazyProc("StringGrid_CellToGridZone").Call(obj, uintptr(aCol), uintptr(aRow))
	return TGridZone(ret)
}

func StringGrid_CheckPosition(obj uintptr) {
	getLazyProc("StringGrid_CheckPosition").Call(obj)
}

func StringGrid_ClearCols(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_ClearCols").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_ClearRows(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_ClearRows").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_Clear(obj uintptr) {
	getLazyProc("StringGrid_Clear").Call(obj)
}

func StringGrid_ClearSelections(obj uintptr) {
	getLazyProc("StringGrid_ClearSelections").Call(obj)
}

func StringGrid_HasMultiSelection(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_HasMultiSelection").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_InvalidateCell(obj uintptr, aCol int32, aRow int32) {
	getLazyProc("StringGrid_InvalidateCell").Call(obj, uintptr(aCol), uintptr(aRow))
}

func StringGrid_InvalidateCol(obj uintptr, ACol int32) {
	getLazyProc("StringGrid_InvalidateCol").Call(obj, uintptr(ACol))
}

func StringGrid_InvalidateRange(obj uintptr, aRange TRect) {
	getLazyProc("StringGrid_InvalidateRange").Call(obj, uintptr(unsafe.Pointer(&aRange)))
}

func StringGrid_InvalidateRow(obj uintptr, ARow int32) {
	getLazyProc("StringGrid_InvalidateRow").Call(obj, uintptr(ARow))
}

func StringGrid_IsCellVisible(obj uintptr, aCol int32, aRow int32) bool {
	ret, _, _ := getLazyProc("StringGrid_IsCellVisible").Call(obj, uintptr(aCol), uintptr(aRow))
	return DBoolToGoBool(ret)
}

func StringGrid_IsFixedCellVisible(obj uintptr, aCol int32, aRow int32) bool {
	ret, _, _ := getLazyProc("StringGrid_IsFixedCellVisible").Call(obj, uintptr(aCol), uintptr(aRow))
	return DBoolToGoBool(ret)
}

func StringGrid_MouseCoord(obj uintptr, X int32, Y int32) TGridCoord {
	var ret TGridCoord
	getLazyProc("StringGrid_MouseCoord").Call(obj, uintptr(X), uintptr(Y), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_MouseToCell(obj uintptr, Mouse TPoint) TPoint {
	var ret TPoint
	getLazyProc("StringGrid_MouseToCell").Call(obj, uintptr(unsafe.Pointer(&Mouse)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_MouseToLogcell(obj uintptr, Mouse TPoint) TPoint {
	var ret TPoint
	getLazyProc("StringGrid_MouseToLogcell").Call(obj, uintptr(unsafe.Pointer(&Mouse)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_MouseToGridZone(obj uintptr, X int32, Y int32) TGridZone {
	ret, _, _ := getLazyProc("StringGrid_MouseToGridZone").Call(obj, uintptr(X), uintptr(Y))
	return TGridZone(ret)
}

func StringGrid_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func StringGrid_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("StringGrid_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func StringGrid_DisableAlign(obj uintptr) {
	getLazyProc("StringGrid_DisableAlign").Call(obj)
}

func StringGrid_EnableAlign(obj uintptr) {
	getLazyProc("StringGrid_EnableAlign").Call(obj)
}

func StringGrid_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("StringGrid_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func StringGrid_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("StringGrid_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func StringGrid_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("StringGrid_InsertControl").Call(obj, AControl)
}

func StringGrid_Invalidate(obj uintptr) {
	getLazyProc("StringGrid_Invalidate").Call(obj)
}

func StringGrid_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("StringGrid_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func StringGrid_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("StringGrid_RemoveControl").Call(obj, AControl)
}

func StringGrid_Realign(obj uintptr) {
	getLazyProc("StringGrid_Realign").Call(obj)
}

func StringGrid_Repaint(obj uintptr) {
	getLazyProc("StringGrid_Repaint").Call(obj)
}

func StringGrid_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("StringGrid_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func StringGrid_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("StringGrid_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func StringGrid_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("StringGrid_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func StringGrid_SetFocus(obj uintptr) {
	getLazyProc("StringGrid_SetFocus").Call(obj)
}

func StringGrid_Update(obj uintptr) {
	getLazyProc("StringGrid_Update").Call(obj)
}

func StringGrid_BringToFront(obj uintptr) {
	getLazyProc("StringGrid_BringToFront").Call(obj)
}

func StringGrid_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("StringGrid_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("StringGrid_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_Hide(obj uintptr) {
	getLazyProc("StringGrid_Hide").Call(obj)
}

func StringGrid_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("StringGrid_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func StringGrid_Refresh(obj uintptr) {
	getLazyProc("StringGrid_Refresh").Call(obj)
}

func StringGrid_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("StringGrid_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("StringGrid_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_SendToBack(obj uintptr) {
	getLazyProc("StringGrid_SendToBack").Call(obj)
}

func StringGrid_Show(obj uintptr) {
	getLazyProc("StringGrid_Show").Call(obj)
}

func StringGrid_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("StringGrid_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func StringGrid_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetTextLen").Call(obj)
	return int32(ret)
}

func StringGrid_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("StringGrid_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func StringGrid_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("StringGrid_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func StringGrid_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("StringGrid_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func StringGrid_Assign(obj uintptr, Source uintptr) {
	getLazyProc("StringGrid_Assign").Call(obj, Source)
}

func StringGrid_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("StringGrid_ClassType").Call(obj)
	return TClass(ret)
}

func StringGrid_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("StringGrid_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func StringGrid_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_InstanceSize").Call(obj)
	return int32(ret)
}

func StringGrid_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("StringGrid_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func StringGrid_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func StringGrid_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetHashCode").Call(obj)
	return int32(ret)
}

func StringGrid_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("StringGrid_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func StringGrid_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("StringGrid_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func StringGrid_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("StringGrid_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func StringGrid_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("StringGrid_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func StringGrid_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("StringGrid_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func StringGrid_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("StringGrid_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func StringGrid_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("StringGrid_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func StringGrid_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("StringGrid_AnchorClient").Call(obj, uintptr(ASpace))
}

func StringGrid_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func StringGrid_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("StringGrid_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func StringGrid_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("StringGrid_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func StringGrid_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("StringGrid_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func StringGrid_GetSelectedColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetSelectedColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetSelectedColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetSelectedColor").Call(obj, uintptr(value))
}

func StringGrid_GetSelectedColumn(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetSelectedColumn").Call(obj)
	return ret
}

func StringGrid_GetStrictSort(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetStrictSort").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetStrictSort(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetStrictSort").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetFixedHotColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetFixedHotColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetFixedHotColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetFixedHotColor").Call(obj, uintptr(value))
}

func StringGrid_GetFastEditing(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetFastEditing").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetFastEditing(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetFastEditing").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetFixedGridLineColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetFixedGridLineColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetFixedGridLineColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetFixedGridLineColor").Call(obj, uintptr(value))
}

func StringGrid_GetFocusColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetFocusColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetFocusColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetFocusColor").Call(obj, uintptr(value))
}

func StringGrid_GetFocusRectVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetFocusRectVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetFocusRectVisible(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetFocusRectVisible").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetGridLineColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetGridLineColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetGridLineColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetGridLineColor").Call(obj, uintptr(value))
}

func StringGrid_GetGridLineStyle(obj uintptr) TPenStyle {
	ret, _, _ := getLazyProc("StringGrid_GetGridLineStyle").Call(obj)
	return TPenStyle(ret)
}

func StringGrid_SetGridLineStyle(obj uintptr, value TPenStyle) {
	getLazyProc("StringGrid_SetGridLineStyle").Call(obj, uintptr(value))
}

func StringGrid_GetEditor(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetEditor").Call(obj)
	return ret
}

func StringGrid_SetEditor(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetEditor").Call(obj, value)
}

func StringGrid_GetEditorBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("StringGrid_GetEditorBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func StringGrid_SetEditorBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("StringGrid_SetEditorBorderStyle").Call(obj, uintptr(value))
}

func StringGrid_GetEditorMode(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetEditorMode").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetEditorMode(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetEditorMode").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetSortOrder(obj uintptr) TSortOrder {
	ret, _, _ := getLazyProc("StringGrid_GetSortOrder").Call(obj)
	return TSortOrder(ret)
}

func StringGrid_SetSortOrder(obj uintptr, value TSortOrder) {
	getLazyProc("StringGrid_SetSortOrder").Call(obj, uintptr(value))
}

func StringGrid_GetSortColumn(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetSortColumn").Call(obj)
	return int32(ret)
}

func StringGrid_SetOnAfterSelection(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnAfterSelection").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnBeforeSelection(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnBeforeSelection").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnButtonClick(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnButtonClick").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnCheckboxToggled(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnCheckboxToggled").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnColRowDeleted(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnColRowDeleted").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnColRowExchanged(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnColRowExchanged").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnColRowInserted(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnColRowInserted").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnColRowMoved(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnColRowMoved").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnCompareCells(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnCompareCells").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnEditingDone(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnEditingDone").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnGetCellHint(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnGetCellHint").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnGetCheckboxState(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnGetCheckboxState").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnSetCheckboxState(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnSetCheckboxState").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnHeaderClick(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnHeaderClick").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnHeaderSized(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnHeaderSized").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnHeaderSizing(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnHeaderSizing").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnPickListSelect(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnPickListSelect").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnSelection(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnSelection").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnSelectEditor(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnSelectEditor").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnUserCheckboxBitmap(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnUserCheckboxBitmap").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnValidateEntry(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnValidateEntry").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnPrepareCanvas(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnPrepareCanvas").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_GetAlternateColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetAlternateColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetAlternateColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetAlternateColor").Call(obj, uintptr(value))
}

func StringGrid_GetAutoAdvance(obj uintptr) TAutoAdvance {
	ret, _, _ := getLazyProc("StringGrid_GetAutoAdvance").Call(obj)
	return TAutoAdvance(ret)
}

func StringGrid_SetAutoAdvance(obj uintptr, value TAutoAdvance) {
	getLazyProc("StringGrid_SetAutoAdvance").Call(obj, uintptr(value))
}

func StringGrid_GetAutoEdit(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetAutoEdit").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetAutoEdit(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetAutoEdit").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetAutoFillColumns(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetAutoFillColumns").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetAutoFillColumns(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetAutoFillColumns").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetCellHintPriority(obj uintptr) TCellHintPriority {
	ret, _, _ := getLazyProc("StringGrid_GetCellHintPriority").Call(obj)
	return TCellHintPriority(ret)
}

func StringGrid_SetCellHintPriority(obj uintptr, value TCellHintPriority) {
	getLazyProc("StringGrid_SetCellHintPriority").Call(obj, uintptr(value))
}

func StringGrid_GetColumnClickSorts(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetColumnClickSorts").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetColumnClickSorts(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetColumnClickSorts").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetColumns(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetColumns").Call(obj)
	return ret
}

func StringGrid_SetColumns(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetColumns").Call(obj, value)
}

func StringGrid_GetExtendedSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetExtendedSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetExtendedSelect(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetExtendedSelect").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetFlat(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetFlat").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetFlat(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetFlat").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetHeaderHotZones(obj uintptr) TGridZoneSet {
	ret, _, _ := getLazyProc("StringGrid_GetHeaderHotZones").Call(obj)
	return TGridZoneSet(ret)
}

func StringGrid_SetHeaderHotZones(obj uintptr, value TGridZoneSet) {
	getLazyProc("StringGrid_SetHeaderHotZones").Call(obj, uintptr(value))
}

func StringGrid_GetHeaderPushZones(obj uintptr) TGridZoneSet {
	ret, _, _ := getLazyProc("StringGrid_GetHeaderPushZones").Call(obj)
	return TGridZoneSet(ret)
}

func StringGrid_SetHeaderPushZones(obj uintptr, value TGridZoneSet) {
	getLazyProc("StringGrid_SetHeaderPushZones").Call(obj, uintptr(value))
}

func StringGrid_GetImageIndexSortAsc(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetImageIndexSortAsc").Call(obj)
	return int32(ret)
}

func StringGrid_SetImageIndexSortAsc(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetImageIndexSortAsc").Call(obj, uintptr(value))
}

func StringGrid_GetImageIndexSortDesc(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetImageIndexSortDesc").Call(obj)
	return int32(ret)
}

func StringGrid_SetImageIndexSortDesc(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetImageIndexSortDesc").Call(obj, uintptr(value))
}

func StringGrid_GetMouseWheelOption(obj uintptr) TMouseWheelOption {
	ret, _, _ := getLazyProc("StringGrid_GetMouseWheelOption").Call(obj)
	return TMouseWheelOption(ret)
}

func StringGrid_SetMouseWheelOption(obj uintptr, value TMouseWheelOption) {
	getLazyProc("StringGrid_SetMouseWheelOption").Call(obj, uintptr(value))
}

func StringGrid_GetOptions2(obj uintptr) TGridOptions2 {
	ret, _, _ := getLazyProc("StringGrid_GetOptions2").Call(obj)
	return TGridOptions2(ret)
}

func StringGrid_SetOptions2(obj uintptr, value TGridOptions2) {
	getLazyProc("StringGrid_SetOptions2").Call(obj, uintptr(value))
}

func StringGrid_GetRangeSelectMode(obj uintptr) TRangeSelectMode {
	ret, _, _ := getLazyProc("StringGrid_GetRangeSelectMode").Call(obj)
	return TRangeSelectMode(ret)
}

func StringGrid_SetRangeSelectMode(obj uintptr, value TRangeSelectMode) {
	getLazyProc("StringGrid_SetRangeSelectMode").Call(obj, uintptr(value))
}

func StringGrid_GetTabAdvance(obj uintptr) TAutoAdvance {
	ret, _, _ := getLazyProc("StringGrid_GetTabAdvance").Call(obj)
	return TAutoAdvance(ret)
}

func StringGrid_SetTabAdvance(obj uintptr, value TAutoAdvance) {
	getLazyProc("StringGrid_SetTabAdvance").Call(obj, uintptr(value))
}

func StringGrid_GetTitleFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetTitleFont").Call(obj)
	return ret
}

func StringGrid_SetTitleFont(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetTitleFont").Call(obj, value)
}

func StringGrid_GetTitleImageList(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetTitleImageList").Call(obj)
	return ret
}

func StringGrid_SetTitleImageList(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetTitleImageList").Call(obj, value)
}

func StringGrid_GetTitleStyle(obj uintptr) TTitleStyle {
	ret, _, _ := getLazyProc("StringGrid_GetTitleStyle").Call(obj)
	return TTitleStyle(ret)
}

func StringGrid_SetTitleStyle(obj uintptr, value TTitleStyle) {
	getLazyProc("StringGrid_SetTitleStyle").Call(obj, uintptr(value))
}

func StringGrid_GetUseXORFeatures(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetUseXORFeatures").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetUseXORFeatures(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetUseXORFeatures").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("StringGrid_GetAlign").Call(obj)
	return TAlign(ret)
}

func StringGrid_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("StringGrid_SetAlign").Call(obj, uintptr(value))
}

func StringGrid_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("StringGrid_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func StringGrid_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("StringGrid_SetAnchors").Call(obj, uintptr(value))
}

func StringGrid_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("StringGrid_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func StringGrid_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("StringGrid_SetBiDiMode").Call(obj, uintptr(value))
}

func StringGrid_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("StringGrid_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func StringGrid_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("StringGrid_SetBorderStyle").Call(obj, uintptr(value))
}

func StringGrid_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetColor").Call(obj, uintptr(value))
}

func StringGrid_GetColCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetColCount").Call(obj)
	return int32(ret)
}

func StringGrid_SetColCount(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetColCount").Call(obj, uintptr(value))
}

func StringGrid_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetConstraints").Call(obj)
	return ret
}

func StringGrid_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetConstraints").Call(obj, value)
}

func StringGrid_GetDefaultColWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetDefaultColWidth").Call(obj)
	return int32(ret)
}

func StringGrid_SetDefaultColWidth(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetDefaultColWidth").Call(obj, uintptr(value))
}

func StringGrid_GetDefaultRowHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetDefaultRowHeight").Call(obj)
	return int32(ret)
}

func StringGrid_SetDefaultRowHeight(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetDefaultRowHeight").Call(obj, uintptr(value))
}

func StringGrid_GetDefaultDrawing(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetDefaultDrawing").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetDefaultDrawing(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetDefaultDrawing").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("StringGrid_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func StringGrid_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("StringGrid_SetDragCursor").Call(obj, uintptr(value))
}

func StringGrid_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("StringGrid_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func StringGrid_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("StringGrid_SetDragKind").Call(obj, uintptr(value))
}

func StringGrid_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("StringGrid_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func StringGrid_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("StringGrid_SetDragMode").Call(obj, uintptr(value))
}

func StringGrid_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetEnabled(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetFixedColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("StringGrid_GetFixedColor").Call(obj)
	return TColor(ret)
}

func StringGrid_SetFixedColor(obj uintptr, value TColor) {
	getLazyProc("StringGrid_SetFixedColor").Call(obj, uintptr(value))
}

func StringGrid_GetFixedCols(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetFixedCols").Call(obj)
	return int32(ret)
}

func StringGrid_SetFixedCols(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetFixedCols").Call(obj, uintptr(value))
}

func StringGrid_GetRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetRowCount").Call(obj)
	return int32(ret)
}

func StringGrid_SetRowCount(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetRowCount").Call(obj, uintptr(value))
}

func StringGrid_GetFixedRows(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetFixedRows").Call(obj)
	return int32(ret)
}

func StringGrid_SetFixedRows(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetFixedRows").Call(obj, uintptr(value))
}

func StringGrid_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetFont").Call(obj)
	return ret
}

func StringGrid_SetFont(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetFont").Call(obj, value)
}

func StringGrid_GetGridLineWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetGridLineWidth").Call(obj)
	return int32(ret)
}

func StringGrid_SetGridLineWidth(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetGridLineWidth").Call(obj, uintptr(value))
}

func StringGrid_GetOptions(obj uintptr) TGridOptions {
	ret, _, _ := getLazyProc("StringGrid_GetOptions").Call(obj)
	return TGridOptions(ret)
}

func StringGrid_SetOptions(obj uintptr, value TGridOptions) {
	getLazyProc("StringGrid_SetOptions").Call(obj, uintptr(value))
}

func StringGrid_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetParentColor(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetParentFont(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetPopupMenu").Call(obj)
	return ret
}

func StringGrid_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetPopupMenu").Call(obj, value)
}

func StringGrid_GetScrollBars(obj uintptr) TScrollStyle {
	ret, _, _ := getLazyProc("StringGrid_GetScrollBars").Call(obj)
	return TScrollStyle(ret)
}

func StringGrid_SetScrollBars(obj uintptr, value TScrollStyle) {
	getLazyProc("StringGrid_SetScrollBars").Call(obj, uintptr(value))
}

func StringGrid_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetShowHint(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("StringGrid_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func StringGrid_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("StringGrid_SetTabOrder").Call(obj, uintptr(value))
}

func StringGrid_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetVisible(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetVisible").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetVisibleColCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetVisibleColCount").Call(obj)
	return int32(ret)
}

func StringGrid_GetVisibleRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetVisibleRowCount").Call(obj)
	return int32(ret)
}

func StringGrid_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnDrawCell(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnDrawCell").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnGetEditMask(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnGetEditMask").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnGetEditText(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnGetEditText").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnSelectCell(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnSelectCell").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnSetEditText(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnSetEditText").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_SetOnTopLeftChanged(obj uintptr, fn interface{}) {
	getLazyProc("StringGrid_SetOnTopLeftChanged").Call(obj, addEventToMap(obj, fn))
}

func StringGrid_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetCanvas").Call(obj)
	return ret
}

func StringGrid_GetCol(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetCol").Call(obj)
	return int32(ret)
}

func StringGrid_SetCol(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetCol").Call(obj, uintptr(value))
}

func StringGrid_GetGridHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetGridHeight").Call(obj)
	return int32(ret)
}

func StringGrid_GetGridWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetGridWidth").Call(obj)
	return int32(ret)
}

func StringGrid_GetLeftCol(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetLeftCol").Call(obj)
	return int32(ret)
}

func StringGrid_SetLeftCol(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetLeftCol").Call(obj, uintptr(value))
}

func StringGrid_GetSelection(obj uintptr) TGridRect {
	var ret TGridRect
	getLazyProc("StringGrid_GetSelection").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_SetSelection(obj uintptr, value TGridRect) {
	getLazyProc("StringGrid_SetSelection").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StringGrid_GetRow(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetRow").Call(obj)
	return int32(ret)
}

func StringGrid_SetRow(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetRow").Call(obj, uintptr(value))
}

func StringGrid_GetTopRow(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetTopRow").Call(obj)
	return int32(ret)
}

func StringGrid_SetTopRow(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetTopRow").Call(obj, uintptr(value))
}

func StringGrid_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetTabStop(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetDockClientCount").Call(obj)
	return int32(ret)
}

func StringGrid_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetDockSite(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func StringGrid_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetBrush").Call(obj)
	return ret
}

func StringGrid_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetControlCount").Call(obj)
	return int32(ret)
}

func StringGrid_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("StringGrid_GetHandle").Call(obj)
	return HWND(ret)
}

func StringGrid_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("StringGrid_GetParentWindow").Call(obj)
	return HWND(ret)
}

func StringGrid_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("StringGrid_SetParentWindow").Call(obj, uintptr(value))
}

func StringGrid_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("StringGrid_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetAction").Call(obj)
	return ret
}

func StringGrid_SetAction(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetAction").Call(obj, value)
}

func StringGrid_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("StringGrid_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("StringGrid_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StringGrid_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetClientHeight").Call(obj)
	return int32(ret)
}

func StringGrid_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetClientHeight").Call(obj, uintptr(value))
}

func StringGrid_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("StringGrid_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("StringGrid_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func StringGrid_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetClientWidth").Call(obj)
	return int32(ret)
}

func StringGrid_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetClientWidth").Call(obj, uintptr(value))
}

func StringGrid_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("StringGrid_GetControlState").Call(obj)
	return TControlState(ret)
}

func StringGrid_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("StringGrid_SetControlState").Call(obj, uintptr(value))
}

func StringGrid_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("StringGrid_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func StringGrid_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("StringGrid_SetControlStyle").Call(obj, uintptr(value))
}

func StringGrid_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("StringGrid_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func StringGrid_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetParent").Call(obj)
	return ret
}

func StringGrid_SetParent(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetParent").Call(obj, value)
}

func StringGrid_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetLeft").Call(obj)
	return int32(ret)
}

func StringGrid_SetLeft(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetLeft").Call(obj, uintptr(value))
}

func StringGrid_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetTop").Call(obj)
	return int32(ret)
}

func StringGrid_SetTop(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetTop").Call(obj, uintptr(value))
}

func StringGrid_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetWidth").Call(obj)
	return int32(ret)
}

func StringGrid_SetWidth(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetWidth").Call(obj, uintptr(value))
}

func StringGrid_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetHeight").Call(obj)
	return int32(ret)
}

func StringGrid_SetHeight(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetHeight").Call(obj, uintptr(value))
}

func StringGrid_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("StringGrid_GetCursor").Call(obj)
	return TCursor(ret)
}

func StringGrid_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("StringGrid_SetCursor").Call(obj, uintptr(value))
}

func StringGrid_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("StringGrid_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func StringGrid_SetHint(obj uintptr, value string) {
	getLazyProc("StringGrid_SetHint").Call(obj, GoStrToDStr(value))
}

func StringGrid_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetComponentCount").Call(obj)
	return int32(ret)
}

func StringGrid_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetComponentIndex").Call(obj)
	return int32(ret)
}

func StringGrid_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("StringGrid_SetComponentIndex").Call(obj, uintptr(value))
}

func StringGrid_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetOwner").Call(obj)
	return ret
}

func StringGrid_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("StringGrid_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func StringGrid_SetName(obj uintptr, value string) {
	getLazyProc("StringGrid_SetName").Call(obj, GoStrToDStr(value))
}

func StringGrid_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("StringGrid_GetTag").Call(obj)
	return int(ret)
}

func StringGrid_SetTag(obj uintptr, value int) {
	getLazyProc("StringGrid_SetTag").Call(obj, uintptr(value))
}

func StringGrid_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetAnchorSideLeft").Call(obj)
	return ret
}

func StringGrid_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetAnchorSideLeft").Call(obj, value)
}

func StringGrid_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetAnchorSideTop").Call(obj)
	return ret
}

func StringGrid_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetAnchorSideTop").Call(obj, value)
}

func StringGrid_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetAnchorSideRight").Call(obj)
	return ret
}

func StringGrid_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetAnchorSideRight").Call(obj, value)
}

func StringGrid_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetAnchorSideBottom").Call(obj)
	return ret
}

func StringGrid_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetAnchorSideBottom").Call(obj, value)
}

func StringGrid_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetChildSizing").Call(obj)
	return ret
}

func StringGrid_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetChildSizing").Call(obj, value)
}

func StringGrid_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetBorderSpacing").Call(obj)
	return ret
}

func StringGrid_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("StringGrid_SetBorderSpacing").Call(obj, value)
}

func StringGrid_GetIsCellSelected(obj uintptr, aCol int32, aRow int32) bool {
	ret, _, _ := getLazyProc("StringGrid_GetIsCellSelected").Call(obj, uintptr(aCol), uintptr(aRow))
	return DBoolToGoBool(ret)
}

func StringGrid_GetCells(obj uintptr, ACol int32, ARow int32) string {
	ret, _, _ := getLazyProc("StringGrid_GetCells").Call(obj, uintptr(ACol), uintptr(ARow))
	return DStrToGoStr(ret)
}

func StringGrid_SetCells(obj uintptr, ACol int32, ARow int32, value string) {
	getLazyProc("StringGrid_SetCells").Call(obj, uintptr(ACol), uintptr(ARow), GoStrToDStr(value))
}

func StringGrid_GetCols(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetCols").Call(obj, uintptr(Index))
	return ret
}

func StringGrid_SetCols(obj uintptr, Index int32, value uintptr) {
	getLazyProc("StringGrid_SetCols").Call(obj, uintptr(Index), value)
}

func StringGrid_GetObjects(obj uintptr, ACol int32, ARow int32) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetObjects").Call(obj, uintptr(ACol), uintptr(ARow))
	return ret
}

func StringGrid_SetObjects(obj uintptr, ACol int32, ARow int32, value uintptr) {
	getLazyProc("StringGrid_SetObjects").Call(obj, uintptr(ACol), uintptr(ARow), value)
}

func StringGrid_GetRows(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetRows").Call(obj, uintptr(Index))
	return ret
}

func StringGrid_SetRows(obj uintptr, Index int32, value uintptr) {
	getLazyProc("StringGrid_SetRows").Call(obj, uintptr(Index), value)
}

func StringGrid_GetColWidths(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetColWidths").Call(obj, uintptr(Index))
	return int32(ret)
}

func StringGrid_SetColWidths(obj uintptr, Index int32, value int32) {
	getLazyProc("StringGrid_SetColWidths").Call(obj, uintptr(Index), uintptr(value))
}

func StringGrid_GetRowHeights(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("StringGrid_GetRowHeights").Call(obj, uintptr(Index))
	return int32(ret)
}

func StringGrid_SetRowHeights(obj uintptr, Index int32, value int32) {
	getLazyProc("StringGrid_SetRowHeights").Call(obj, uintptr(Index), uintptr(value))
}

func StringGrid_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func StringGrid_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetControls").Call(obj, uintptr(Index))
	return ret
}

func StringGrid_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func StringGrid_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("StringGrid_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func StringGrid_StaticClassType() TClass {
	r, _, _ := getLazyProc("StringGrid_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TDrawGrid ---------------------------

func DrawGrid_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_Create").Call(obj)
	return ret
}

func DrawGrid_Free(obj uintptr) {
	getLazyProc("DrawGrid_Free").Call(obj)
}

func DrawGrid_CellRect(obj uintptr, ACol int32, ARow int32) TRect {
	var ret TRect
	getLazyProc("DrawGrid_CellRect").Call(obj, uintptr(ACol), uintptr(ARow), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_MouseToCell(obj uintptr, X int32, Y int32, ACol *int32, ARow *int32) {
	getLazyProc("DrawGrid_MouseToCell").Call(obj, uintptr(X), uintptr(Y), uintptr(unsafe.Pointer(ACol)), uintptr(unsafe.Pointer(ARow)))
}

func DrawGrid_MouseCoord(obj uintptr, X int32, Y int32) TGridCoord {
	var ret TGridCoord
	getLazyProc("DrawGrid_MouseCoord").Call(obj, uintptr(X), uintptr(Y), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func DrawGrid_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func DrawGrid_DisableAlign(obj uintptr) {
	getLazyProc("DrawGrid_DisableAlign").Call(obj)
}

func DrawGrid_EnableAlign(obj uintptr) {
	getLazyProc("DrawGrid_EnableAlign").Call(obj)
}

func DrawGrid_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func DrawGrid_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("DrawGrid_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func DrawGrid_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("DrawGrid_InsertControl").Call(obj, AControl)
}

func DrawGrid_Invalidate(obj uintptr) {
	getLazyProc("DrawGrid_Invalidate").Call(obj)
}

func DrawGrid_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("DrawGrid_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func DrawGrid_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("DrawGrid_RemoveControl").Call(obj, AControl)
}

func DrawGrid_Realign(obj uintptr) {
	getLazyProc("DrawGrid_Realign").Call(obj)
}

func DrawGrid_Repaint(obj uintptr) {
	getLazyProc("DrawGrid_Repaint").Call(obj)
}

func DrawGrid_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("DrawGrid_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func DrawGrid_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("DrawGrid_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func DrawGrid_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("DrawGrid_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func DrawGrid_SetFocus(obj uintptr) {
	getLazyProc("DrawGrid_SetFocus").Call(obj)
}

func DrawGrid_Update(obj uintptr) {
	getLazyProc("DrawGrid_Update").Call(obj)
}

func DrawGrid_BringToFront(obj uintptr) {
	getLazyProc("DrawGrid_BringToFront").Call(obj)
}

func DrawGrid_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("DrawGrid_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("DrawGrid_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_Hide(obj uintptr) {
	getLazyProc("DrawGrid_Hide").Call(obj)
}

func DrawGrid_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("DrawGrid_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func DrawGrid_Refresh(obj uintptr) {
	getLazyProc("DrawGrid_Refresh").Call(obj)
}

func DrawGrid_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("DrawGrid_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("DrawGrid_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_SendToBack(obj uintptr) {
	getLazyProc("DrawGrid_SendToBack").Call(obj)
}

func DrawGrid_Show(obj uintptr) {
	getLazyProc("DrawGrid_Show").Call(obj)
}

func DrawGrid_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("DrawGrid_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func DrawGrid_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetTextLen").Call(obj)
	return int32(ret)
}

func DrawGrid_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("DrawGrid_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func DrawGrid_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func DrawGrid_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("DrawGrid_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func DrawGrid_Assign(obj uintptr, Source uintptr) {
	getLazyProc("DrawGrid_Assign").Call(obj, Source)
}

func DrawGrid_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("DrawGrid_ClassType").Call(obj)
	return TClass(ret)
}

func DrawGrid_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("DrawGrid_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func DrawGrid_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_InstanceSize").Call(obj)
	return int32(ret)
}

func DrawGrid_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("DrawGrid_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func DrawGrid_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetHashCode").Call(obj)
	return int32(ret)
}

func DrawGrid_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("DrawGrid_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func DrawGrid_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("DrawGrid_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func DrawGrid_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("DrawGrid_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func DrawGrid_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("DrawGrid_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func DrawGrid_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("DrawGrid_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func DrawGrid_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("DrawGrid_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func DrawGrid_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("DrawGrid_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func DrawGrid_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("DrawGrid_AnchorClient").Call(obj, uintptr(ASpace))
}

func DrawGrid_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func DrawGrid_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("DrawGrid_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func DrawGrid_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("DrawGrid_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func DrawGrid_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("DrawGrid_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func DrawGrid_SetOnColRowMoved(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnColRowMoved").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnPrepareCanvas(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnPrepareCanvas").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("DrawGrid_GetAlign").Call(obj)
	return TAlign(ret)
}

func DrawGrid_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("DrawGrid_SetAlign").Call(obj, uintptr(value))
}

func DrawGrid_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("DrawGrid_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func DrawGrid_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("DrawGrid_SetAnchors").Call(obj, uintptr(value))
}

func DrawGrid_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("DrawGrid_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func DrawGrid_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("DrawGrid_SetBiDiMode").Call(obj, uintptr(value))
}

func DrawGrid_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("DrawGrid_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func DrawGrid_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("DrawGrid_SetBorderStyle").Call(obj, uintptr(value))
}

func DrawGrid_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("DrawGrid_GetColor").Call(obj)
	return TColor(ret)
}

func DrawGrid_SetColor(obj uintptr, value TColor) {
	getLazyProc("DrawGrid_SetColor").Call(obj, uintptr(value))
}

func DrawGrid_GetColCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetColCount").Call(obj)
	return int32(ret)
}

func DrawGrid_SetColCount(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetColCount").Call(obj, uintptr(value))
}

func DrawGrid_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetConstraints").Call(obj)
	return ret
}

func DrawGrid_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetConstraints").Call(obj, value)
}

func DrawGrid_GetDefaultColWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetDefaultColWidth").Call(obj)
	return int32(ret)
}

func DrawGrid_SetDefaultColWidth(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetDefaultColWidth").Call(obj, uintptr(value))
}

func DrawGrid_GetDefaultRowHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetDefaultRowHeight").Call(obj)
	return int32(ret)
}

func DrawGrid_SetDefaultRowHeight(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetDefaultRowHeight").Call(obj, uintptr(value))
}

func DrawGrid_GetDefaultDrawing(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetDefaultDrawing").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetDefaultDrawing(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetDefaultDrawing").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("DrawGrid_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func DrawGrid_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("DrawGrid_SetDragCursor").Call(obj, uintptr(value))
}

func DrawGrid_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("DrawGrid_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func DrawGrid_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("DrawGrid_SetDragKind").Call(obj, uintptr(value))
}

func DrawGrid_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("DrawGrid_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func DrawGrid_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("DrawGrid_SetDragMode").Call(obj, uintptr(value))
}

func DrawGrid_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetEnabled(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetFixedColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("DrawGrid_GetFixedColor").Call(obj)
	return TColor(ret)
}

func DrawGrid_SetFixedColor(obj uintptr, value TColor) {
	getLazyProc("DrawGrid_SetFixedColor").Call(obj, uintptr(value))
}

func DrawGrid_GetFixedCols(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetFixedCols").Call(obj)
	return int32(ret)
}

func DrawGrid_SetFixedCols(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetFixedCols").Call(obj, uintptr(value))
}

func DrawGrid_GetRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetRowCount").Call(obj)
	return int32(ret)
}

func DrawGrid_SetRowCount(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetRowCount").Call(obj, uintptr(value))
}

func DrawGrid_GetFixedRows(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetFixedRows").Call(obj)
	return int32(ret)
}

func DrawGrid_SetFixedRows(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetFixedRows").Call(obj, uintptr(value))
}

func DrawGrid_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetFont").Call(obj)
	return ret
}

func DrawGrid_SetFont(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetFont").Call(obj, value)
}

func DrawGrid_GetGridLineWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetGridLineWidth").Call(obj)
	return int32(ret)
}

func DrawGrid_SetGridLineWidth(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetGridLineWidth").Call(obj, uintptr(value))
}

func DrawGrid_GetOptions(obj uintptr) TGridOptions {
	ret, _, _ := getLazyProc("DrawGrid_GetOptions").Call(obj)
	return TGridOptions(ret)
}

func DrawGrid_SetOptions(obj uintptr, value TGridOptions) {
	getLazyProc("DrawGrid_SetOptions").Call(obj, uintptr(value))
}

func DrawGrid_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetParentColor(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetParentFont(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetPopupMenu").Call(obj)
	return ret
}

func DrawGrid_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetPopupMenu").Call(obj, value)
}

func DrawGrid_GetScrollBars(obj uintptr) TScrollStyle {
	ret, _, _ := getLazyProc("DrawGrid_GetScrollBars").Call(obj)
	return TScrollStyle(ret)
}

func DrawGrid_SetScrollBars(obj uintptr, value TScrollStyle) {
	getLazyProc("DrawGrid_SetScrollBars").Call(obj, uintptr(value))
}

func DrawGrid_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetShowHint(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("DrawGrid_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func DrawGrid_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("DrawGrid_SetTabOrder").Call(obj, uintptr(value))
}

func DrawGrid_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetVisible(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetVisible").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetVisibleColCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetVisibleColCount").Call(obj)
	return int32(ret)
}

func DrawGrid_GetVisibleRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetVisibleRowCount").Call(obj)
	return int32(ret)
}

func DrawGrid_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnDrawCell(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnDrawCell").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnGetEditMask(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnGetEditMask").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnGetEditText(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnGetEditText").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnSelectCell(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnSelectCell").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnSetEditText(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnSetEditText").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_SetOnTopLeftChanged(obj uintptr, fn interface{}) {
	getLazyProc("DrawGrid_SetOnTopLeftChanged").Call(obj, addEventToMap(obj, fn))
}

func DrawGrid_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetCanvas").Call(obj)
	return ret
}

func DrawGrid_GetCol(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetCol").Call(obj)
	return int32(ret)
}

func DrawGrid_SetCol(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetCol").Call(obj, uintptr(value))
}

func DrawGrid_GetEditorMode(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetEditorMode").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetEditorMode(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetEditorMode").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetGridHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetGridHeight").Call(obj)
	return int32(ret)
}

func DrawGrid_GetGridWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetGridWidth").Call(obj)
	return int32(ret)
}

func DrawGrid_GetLeftCol(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetLeftCol").Call(obj)
	return int32(ret)
}

func DrawGrid_SetLeftCol(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetLeftCol").Call(obj, uintptr(value))
}

func DrawGrid_GetSelection(obj uintptr) TGridRect {
	var ret TGridRect
	getLazyProc("DrawGrid_GetSelection").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_SetSelection(obj uintptr, value TGridRect) {
	getLazyProc("DrawGrid_SetSelection").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DrawGrid_GetRow(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetRow").Call(obj)
	return int32(ret)
}

func DrawGrid_SetRow(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetRow").Call(obj, uintptr(value))
}

func DrawGrid_GetTopRow(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetTopRow").Call(obj)
	return int32(ret)
}

func DrawGrid_SetTopRow(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetTopRow").Call(obj, uintptr(value))
}

func DrawGrid_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetTabStop(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetDockClientCount").Call(obj)
	return int32(ret)
}

func DrawGrid_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetDockSite(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func DrawGrid_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetBrush").Call(obj)
	return ret
}

func DrawGrid_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetControlCount").Call(obj)
	return int32(ret)
}

func DrawGrid_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("DrawGrid_GetHandle").Call(obj)
	return HWND(ret)
}

func DrawGrid_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("DrawGrid_GetParentWindow").Call(obj)
	return HWND(ret)
}

func DrawGrid_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("DrawGrid_SetParentWindow").Call(obj, uintptr(value))
}

func DrawGrid_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("DrawGrid_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetAction").Call(obj)
	return ret
}

func DrawGrid_SetAction(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetAction").Call(obj, value)
}

func DrawGrid_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("DrawGrid_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("DrawGrid_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DrawGrid_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetClientHeight").Call(obj)
	return int32(ret)
}

func DrawGrid_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetClientHeight").Call(obj, uintptr(value))
}

func DrawGrid_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("DrawGrid_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("DrawGrid_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func DrawGrid_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetClientWidth").Call(obj)
	return int32(ret)
}

func DrawGrid_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetClientWidth").Call(obj, uintptr(value))
}

func DrawGrid_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("DrawGrid_GetControlState").Call(obj)
	return TControlState(ret)
}

func DrawGrid_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("DrawGrid_SetControlState").Call(obj, uintptr(value))
}

func DrawGrid_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("DrawGrid_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func DrawGrid_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("DrawGrid_SetControlStyle").Call(obj, uintptr(value))
}

func DrawGrid_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("DrawGrid_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func DrawGrid_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetParent").Call(obj)
	return ret
}

func DrawGrid_SetParent(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetParent").Call(obj, value)
}

func DrawGrid_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetLeft").Call(obj)
	return int32(ret)
}

func DrawGrid_SetLeft(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetLeft").Call(obj, uintptr(value))
}

func DrawGrid_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetTop").Call(obj)
	return int32(ret)
}

func DrawGrid_SetTop(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetTop").Call(obj, uintptr(value))
}

func DrawGrid_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetWidth").Call(obj)
	return int32(ret)
}

func DrawGrid_SetWidth(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetWidth").Call(obj, uintptr(value))
}

func DrawGrid_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetHeight").Call(obj)
	return int32(ret)
}

func DrawGrid_SetHeight(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetHeight").Call(obj, uintptr(value))
}

func DrawGrid_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("DrawGrid_GetCursor").Call(obj)
	return TCursor(ret)
}

func DrawGrid_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("DrawGrid_SetCursor").Call(obj, uintptr(value))
}

func DrawGrid_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("DrawGrid_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func DrawGrid_SetHint(obj uintptr, value string) {
	getLazyProc("DrawGrid_SetHint").Call(obj, GoStrToDStr(value))
}

func DrawGrid_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetComponentCount").Call(obj)
	return int32(ret)
}

func DrawGrid_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetComponentIndex").Call(obj)
	return int32(ret)
}

func DrawGrid_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("DrawGrid_SetComponentIndex").Call(obj, uintptr(value))
}

func DrawGrid_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetOwner").Call(obj)
	return ret
}

func DrawGrid_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("DrawGrid_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func DrawGrid_SetName(obj uintptr, value string) {
	getLazyProc("DrawGrid_SetName").Call(obj, GoStrToDStr(value))
}

func DrawGrid_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("DrawGrid_GetTag").Call(obj)
	return int(ret)
}

func DrawGrid_SetTag(obj uintptr, value int) {
	getLazyProc("DrawGrid_SetTag").Call(obj, uintptr(value))
}

func DrawGrid_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetAnchorSideLeft").Call(obj)
	return ret
}

func DrawGrid_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetAnchorSideLeft").Call(obj, value)
}

func DrawGrid_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetAnchorSideTop").Call(obj)
	return ret
}

func DrawGrid_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetAnchorSideTop").Call(obj, value)
}

func DrawGrid_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetAnchorSideRight").Call(obj)
	return ret
}

func DrawGrid_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetAnchorSideRight").Call(obj, value)
}

func DrawGrid_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetAnchorSideBottom").Call(obj)
	return ret
}

func DrawGrid_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetAnchorSideBottom").Call(obj, value)
}

func DrawGrid_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetChildSizing").Call(obj)
	return ret
}

func DrawGrid_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetChildSizing").Call(obj, value)
}

func DrawGrid_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetBorderSpacing").Call(obj)
	return ret
}

func DrawGrid_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("DrawGrid_SetBorderSpacing").Call(obj, value)
}

func DrawGrid_GetColWidths(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetColWidths").Call(obj, uintptr(Index))
	return int32(ret)
}

func DrawGrid_SetColWidths(obj uintptr, Index int32, value int32) {
	getLazyProc("DrawGrid_SetColWidths").Call(obj, uintptr(Index), uintptr(value))
}

func DrawGrid_GetRowHeights(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("DrawGrid_GetRowHeights").Call(obj, uintptr(Index))
	return int32(ret)
}

func DrawGrid_SetRowHeights(obj uintptr, Index int32, value int32) {
	getLazyProc("DrawGrid_SetRowHeights").Call(obj, uintptr(Index), uintptr(value))
}

func DrawGrid_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func DrawGrid_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetControls").Call(obj, uintptr(Index))
	return ret
}

func DrawGrid_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func DrawGrid_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("DrawGrid_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func DrawGrid_StaticClassType() TClass {
	r, _, _ := getLazyProc("DrawGrid_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TValueListEditor ---------------------------

func ValueListEditor_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_Create").Call(obj)
	return ret
}

func ValueListEditor_Free(obj uintptr) {
	getLazyProc("ValueListEditor_Free").Call(obj)
}

func ValueListEditor_DeleteRow(obj uintptr, ARow int32) {
	getLazyProc("ValueListEditor_DeleteRow").Call(obj, uintptr(ARow))
}

func ValueListEditor_Refresh(obj uintptr) {
	getLazyProc("ValueListEditor_Refresh").Call(obj)
}

func ValueListEditor_CellRect(obj uintptr, ACol int32, ARow int32) TRect {
	var ret TRect
	getLazyProc("ValueListEditor_CellRect").Call(obj, uintptr(ACol), uintptr(ARow), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_MouseToCell(obj uintptr, X int32, Y int32, ACol *int32, ARow *int32) {
	getLazyProc("ValueListEditor_MouseToCell").Call(obj, uintptr(X), uintptr(Y), uintptr(unsafe.Pointer(ACol)), uintptr(unsafe.Pointer(ARow)))
}

func ValueListEditor_MouseCoord(obj uintptr, X int32, Y int32) TGridCoord {
	var ret TGridCoord
	getLazyProc("ValueListEditor_MouseCoord").Call(obj, uintptr(X), uintptr(Y), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ValueListEditor_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ValueListEditor_DisableAlign(obj uintptr) {
	getLazyProc("ValueListEditor_DisableAlign").Call(obj)
}

func ValueListEditor_EnableAlign(obj uintptr) {
	getLazyProc("ValueListEditor_EnableAlign").Call(obj)
}

func ValueListEditor_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ValueListEditor_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ValueListEditor_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ValueListEditor_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ValueListEditor_InsertControl").Call(obj, AControl)
}

func ValueListEditor_Invalidate(obj uintptr) {
	getLazyProc("ValueListEditor_Invalidate").Call(obj)
}

func ValueListEditor_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ValueListEditor_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ValueListEditor_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ValueListEditor_RemoveControl").Call(obj, AControl)
}

func ValueListEditor_Realign(obj uintptr) {
	getLazyProc("ValueListEditor_Realign").Call(obj)
}

func ValueListEditor_Repaint(obj uintptr) {
	getLazyProc("ValueListEditor_Repaint").Call(obj)
}

func ValueListEditor_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ValueListEditor_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ValueListEditor_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ValueListEditor_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ValueListEditor_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ValueListEditor_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ValueListEditor_SetFocus(obj uintptr) {
	getLazyProc("ValueListEditor_SetFocus").Call(obj)
}

func ValueListEditor_Update(obj uintptr) {
	getLazyProc("ValueListEditor_Update").Call(obj)
}

func ValueListEditor_BringToFront(obj uintptr) {
	getLazyProc("ValueListEditor_BringToFront").Call(obj)
}

func ValueListEditor_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ValueListEditor_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ValueListEditor_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_Hide(obj uintptr) {
	getLazyProc("ValueListEditor_Hide").Call(obj)
}

func ValueListEditor_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ValueListEditor_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ValueListEditor_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ValueListEditor_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ValueListEditor_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_SendToBack(obj uintptr) {
	getLazyProc("ValueListEditor_SendToBack").Call(obj)
}

func ValueListEditor_Show(obj uintptr) {
	getLazyProc("ValueListEditor_Show").Call(obj)
}

func ValueListEditor_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ValueListEditor_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ValueListEditor_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetTextLen").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ValueListEditor_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ValueListEditor_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ValueListEditor_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ValueListEditor_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ValueListEditor_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ValueListEditor_Assign").Call(obj, Source)
}

func ValueListEditor_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ValueListEditor_ClassType").Call(obj)
	return TClass(ret)
}

func ValueListEditor_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ValueListEditor_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ValueListEditor_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_InstanceSize").Call(obj)
	return int32(ret)
}

func ValueListEditor_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ValueListEditor_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ValueListEditor_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetHashCode").Call(obj)
	return int32(ret)
}

func ValueListEditor_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ValueListEditor_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ValueListEditor_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ValueListEditor_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ValueListEditor_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ValueListEditor_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ValueListEditor_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ValueListEditor_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ValueListEditor_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ValueListEditor_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ValueListEditor_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ValueListEditor_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ValueListEditor_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ValueListEditor_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ValueListEditor_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ValueListEditor_AnchorClient").Call(obj, uintptr(ASpace))
}

func ValueListEditor_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ValueListEditor_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ValueListEditor_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ValueListEditor_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ValueListEditor_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ValueListEditor_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ValueListEditor_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ValueListEditor_GetColCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetColCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetColCount(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetColCount").Call(obj, uintptr(value))
}

func ValueListEditor_GetRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetRowCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetVisibleColCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetVisibleColCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetVisibleRowCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetVisibleRowCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ValueListEditor_GetAlign").Call(obj)
	return TAlign(ret)
}

func ValueListEditor_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ValueListEditor_SetAlign").Call(obj, uintptr(value))
}

func ValueListEditor_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ValueListEditor_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ValueListEditor_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ValueListEditor_SetAnchors").Call(obj, uintptr(value))
}

func ValueListEditor_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ValueListEditor_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ValueListEditor_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ValueListEditor_SetBiDiMode").Call(obj, uintptr(value))
}

func ValueListEditor_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("ValueListEditor_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func ValueListEditor_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("ValueListEditor_SetBorderStyle").Call(obj, uintptr(value))
}

func ValueListEditor_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ValueListEditor_GetColor").Call(obj)
	return TColor(ret)
}

func ValueListEditor_SetColor(obj uintptr, value TColor) {
	getLazyProc("ValueListEditor_SetColor").Call(obj, uintptr(value))
}

func ValueListEditor_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetConstraints").Call(obj)
	return ret
}

func ValueListEditor_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetConstraints").Call(obj, value)
}

func ValueListEditor_GetDefaultColWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetDefaultColWidth").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetDefaultColWidth(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetDefaultColWidth").Call(obj, uintptr(value))
}

func ValueListEditor_GetDefaultDrawing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetDefaultDrawing").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetDefaultDrawing(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetDefaultDrawing").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetDefaultRowHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetDefaultRowHeight").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetDefaultRowHeight(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetDefaultRowHeight").Call(obj, uintptr(value))
}

func ValueListEditor_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ValueListEditor_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ValueListEditor_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ValueListEditor_SetDragCursor").Call(obj, uintptr(value))
}

func ValueListEditor_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ValueListEditor_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ValueListEditor_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ValueListEditor_SetDragKind").Call(obj, uintptr(value))
}

func ValueListEditor_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ValueListEditor_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ValueListEditor_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ValueListEditor_SetDragMode").Call(obj, uintptr(value))
}

func ValueListEditor_GetDropDownRows(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetDropDownRows").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetDropDownRows(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetDropDownRows").Call(obj, uintptr(value))
}

func ValueListEditor_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetFixedColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ValueListEditor_GetFixedColor").Call(obj)
	return TColor(ret)
}

func ValueListEditor_SetFixedColor(obj uintptr, value TColor) {
	getLazyProc("ValueListEditor_SetFixedColor").Call(obj, uintptr(value))
}

func ValueListEditor_GetFixedCols(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetFixedCols").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetFixedCols(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetFixedCols").Call(obj, uintptr(value))
}

func ValueListEditor_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetFont").Call(obj)
	return ret
}

func ValueListEditor_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetFont").Call(obj, value)
}

func ValueListEditor_GetGridLineWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetGridLineWidth").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetGridLineWidth(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetGridLineWidth").Call(obj, uintptr(value))
}

func ValueListEditor_GetOptions(obj uintptr) TGridOptions {
	ret, _, _ := getLazyProc("ValueListEditor_GetOptions").Call(obj)
	return TGridOptions(ret)
}

func ValueListEditor_SetOptions(obj uintptr, value TGridOptions) {
	getLazyProc("ValueListEditor_SetOptions").Call(obj, uintptr(value))
}

func ValueListEditor_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetPopupMenu").Call(obj)
	return ret
}

func ValueListEditor_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetPopupMenu").Call(obj, value)
}

func ValueListEditor_GetScrollBars(obj uintptr) TScrollStyle {
	ret, _, _ := getLazyProc("ValueListEditor_GetScrollBars").Call(obj)
	return TScrollStyle(ret)
}

func ValueListEditor_SetScrollBars(obj uintptr, value TScrollStyle) {
	getLazyProc("ValueListEditor_SetScrollBars").Call(obj, uintptr(value))
}

func ValueListEditor_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetStrings(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetStrings").Call(obj)
	return ret
}

func ValueListEditor_SetStrings(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetStrings").Call(obj, value)
}

func ValueListEditor_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ValueListEditor_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ValueListEditor_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ValueListEditor_SetTabOrder").Call(obj, uintptr(value))
}

func ValueListEditor_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetVisible(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnDrawCell(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnDrawCell").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnGetEditMask(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnGetEditMask").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnGetEditText(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnGetEditText").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnSelectCell(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnSelectCell").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnSetEditText(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnSetEditText").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_SetOnTopLeftChanged(obj uintptr, fn interface{}) {
	getLazyProc("ValueListEditor_SetOnTopLeftChanged").Call(obj, addEventToMap(obj, fn))
}

func ValueListEditor_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetCanvas").Call(obj)
	return ret
}

func ValueListEditor_GetCol(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetCol").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetCol(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetCol").Call(obj, uintptr(value))
}

func ValueListEditor_GetEditorMode(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetEditorMode").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetEditorMode(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetEditorMode").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetGridHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetGridHeight").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetGridWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetGridWidth").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetLeftCol(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetLeftCol").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetLeftCol(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetLeftCol").Call(obj, uintptr(value))
}

func ValueListEditor_GetSelection(obj uintptr) TGridRect {
	var ret TGridRect
	getLazyProc("ValueListEditor_GetSelection").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_SetSelection(obj uintptr, value TGridRect) {
	getLazyProc("ValueListEditor_SetSelection").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ValueListEditor_GetRow(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetRow").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetRow(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetRow").Call(obj, uintptr(value))
}

func ValueListEditor_GetTopRow(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetTopRow").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetTopRow(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetTopRow").Call(obj, uintptr(value))
}

func ValueListEditor_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetBrush").Call(obj)
	return ret
}

func ValueListEditor_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetControlCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ValueListEditor_GetHandle").Call(obj)
	return HWND(ret)
}

func ValueListEditor_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ValueListEditor_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ValueListEditor_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ValueListEditor_SetParentWindow").Call(obj, uintptr(value))
}

func ValueListEditor_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ValueListEditor_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetAction").Call(obj)
	return ret
}

func ValueListEditor_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetAction").Call(obj, value)
}

func ValueListEditor_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ValueListEditor_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ValueListEditor_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ValueListEditor_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetClientHeight").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetClientHeight").Call(obj, uintptr(value))
}

func ValueListEditor_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ValueListEditor_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ValueListEditor_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ValueListEditor_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetClientWidth").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetClientWidth").Call(obj, uintptr(value))
}

func ValueListEditor_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ValueListEditor_GetControlState").Call(obj)
	return TControlState(ret)
}

func ValueListEditor_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ValueListEditor_SetControlState").Call(obj, uintptr(value))
}

func ValueListEditor_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ValueListEditor_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ValueListEditor_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ValueListEditor_SetControlStyle").Call(obj, uintptr(value))
}

func ValueListEditor_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ValueListEditor_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ValueListEditor_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetParent").Call(obj)
	return ret
}

func ValueListEditor_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetParent").Call(obj, value)
}

func ValueListEditor_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetLeft").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetLeft(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetLeft").Call(obj, uintptr(value))
}

func ValueListEditor_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetTop").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetTop(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetTop").Call(obj, uintptr(value))
}

func ValueListEditor_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetWidth").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetWidth(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetWidth").Call(obj, uintptr(value))
}

func ValueListEditor_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetHeight").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetHeight(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetHeight").Call(obj, uintptr(value))
}

func ValueListEditor_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ValueListEditor_GetCursor").Call(obj)
	return TCursor(ret)
}

func ValueListEditor_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ValueListEditor_SetCursor").Call(obj, uintptr(value))
}

func ValueListEditor_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ValueListEditor_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ValueListEditor_SetHint(obj uintptr, value string) {
	getLazyProc("ValueListEditor_SetHint").Call(obj, GoStrToDStr(value))
}

func ValueListEditor_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetComponentCount").Call(obj)
	return int32(ret)
}

func ValueListEditor_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ValueListEditor_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ValueListEditor_SetComponentIndex").Call(obj, uintptr(value))
}

func ValueListEditor_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetOwner").Call(obj)
	return ret
}

func ValueListEditor_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ValueListEditor_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ValueListEditor_SetName(obj uintptr, value string) {
	getLazyProc("ValueListEditor_SetName").Call(obj, GoStrToDStr(value))
}

func ValueListEditor_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ValueListEditor_GetTag").Call(obj)
	return int(ret)
}

func ValueListEditor_SetTag(obj uintptr, value int) {
	getLazyProc("ValueListEditor_SetTag").Call(obj, uintptr(value))
}

func ValueListEditor_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetAnchorSideLeft").Call(obj)
	return ret
}

func ValueListEditor_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetAnchorSideLeft").Call(obj, value)
}

func ValueListEditor_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetAnchorSideTop").Call(obj)
	return ret
}

func ValueListEditor_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetAnchorSideTop").Call(obj, value)
}

func ValueListEditor_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetAnchorSideRight").Call(obj)
	return ret
}

func ValueListEditor_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetAnchorSideRight").Call(obj, value)
}

func ValueListEditor_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetAnchorSideBottom").Call(obj)
	return ret
}

func ValueListEditor_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetAnchorSideBottom").Call(obj, value)
}

func ValueListEditor_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetChildSizing").Call(obj)
	return ret
}

func ValueListEditor_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetChildSizing").Call(obj, value)
}

func ValueListEditor_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetBorderSpacing").Call(obj)
	return ret
}

func ValueListEditor_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ValueListEditor_SetBorderSpacing").Call(obj, value)
}

func ValueListEditor_GetCells(obj uintptr, ACol int32, ARow int32) string {
	ret, _, _ := getLazyProc("ValueListEditor_GetCells").Call(obj, uintptr(ACol), uintptr(ARow))
	return DStrToGoStr(ret)
}

func ValueListEditor_SetCells(obj uintptr, ACol int32, ARow int32, value string) {
	getLazyProc("ValueListEditor_SetCells").Call(obj, uintptr(ACol), uintptr(ARow), GoStrToDStr(value))
}

func ValueListEditor_GetValues(obj uintptr, Key string) string {
	ret, _, _ := getLazyProc("ValueListEditor_GetValues").Call(obj, GoStrToDStr(Key))
	return DStrToGoStr(ret)
}

func ValueListEditor_SetValues(obj uintptr, Key string, value string) {
	getLazyProc("ValueListEditor_SetValues").Call(obj, GoStrToDStr(Key), GoStrToDStr(value))
}

func ValueListEditor_GetColWidths(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetColWidths").Call(obj, uintptr(Index))
	return int32(ret)
}

func ValueListEditor_SetColWidths(obj uintptr, Index int32, value int32) {
	getLazyProc("ValueListEditor_SetColWidths").Call(obj, uintptr(Index), uintptr(value))
}

func ValueListEditor_GetRowHeights(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("ValueListEditor_GetRowHeights").Call(obj, uintptr(Index))
	return int32(ret)
}

func ValueListEditor_SetRowHeights(obj uintptr, Index int32, value int32) {
	getLazyProc("ValueListEditor_SetRowHeights").Call(obj, uintptr(Index), uintptr(value))
}

func ValueListEditor_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ValueListEditor_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ValueListEditor_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ValueListEditor_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ValueListEditor_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ValueListEditor_StaticClassType() TClass {
	r, _, _ := getLazyProc("ValueListEditor_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- THeaderControl ---------------------------

func HeaderControl_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_Create").Call(obj)
	return ret
}

func HeaderControl_Free(obj uintptr) {
	getLazyProc("HeaderControl_Free").Call(obj)
}

func HeaderControl_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("HeaderControl_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func HeaderControl_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func HeaderControl_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func HeaderControl_DisableAlign(obj uintptr) {
	getLazyProc("HeaderControl_DisableAlign").Call(obj)
}

func HeaderControl_EnableAlign(obj uintptr) {
	getLazyProc("HeaderControl_EnableAlign").Call(obj)
}

func HeaderControl_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func HeaderControl_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("HeaderControl_InsertControl").Call(obj, AControl)
}

func HeaderControl_Invalidate(obj uintptr) {
	getLazyProc("HeaderControl_Invalidate").Call(obj)
}

func HeaderControl_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("HeaderControl_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func HeaderControl_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("HeaderControl_RemoveControl").Call(obj, AControl)
}

func HeaderControl_Realign(obj uintptr) {
	getLazyProc("HeaderControl_Realign").Call(obj)
}

func HeaderControl_Repaint(obj uintptr) {
	getLazyProc("HeaderControl_Repaint").Call(obj)
}

func HeaderControl_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("HeaderControl_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func HeaderControl_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("HeaderControl_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func HeaderControl_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("HeaderControl_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func HeaderControl_SetFocus(obj uintptr) {
	getLazyProc("HeaderControl_SetFocus").Call(obj)
}

func HeaderControl_Update(obj uintptr) {
	getLazyProc("HeaderControl_Update").Call(obj)
}

func HeaderControl_BringToFront(obj uintptr) {
	getLazyProc("HeaderControl_BringToFront").Call(obj)
}

func HeaderControl_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("HeaderControl_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func HeaderControl_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("HeaderControl_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func HeaderControl_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_Hide(obj uintptr) {
	getLazyProc("HeaderControl_Hide").Call(obj)
}

func HeaderControl_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("HeaderControl_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func HeaderControl_Refresh(obj uintptr) {
	getLazyProc("HeaderControl_Refresh").Call(obj)
}

func HeaderControl_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("HeaderControl_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func HeaderControl_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("HeaderControl_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func HeaderControl_SendToBack(obj uintptr) {
	getLazyProc("HeaderControl_SendToBack").Call(obj)
}

func HeaderControl_Show(obj uintptr) {
	getLazyProc("HeaderControl_Show").Call(obj)
}

func HeaderControl_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("HeaderControl_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func HeaderControl_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetTextLen").Call(obj)
	return int32(ret)
}

func HeaderControl_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("HeaderControl_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func HeaderControl_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func HeaderControl_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderControl_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderControl_Assign(obj uintptr, Source uintptr) {
	getLazyProc("HeaderControl_Assign").Call(obj, Source)
}

func HeaderControl_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("HeaderControl_ClassType").Call(obj)
	return TClass(ret)
}

func HeaderControl_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderControl_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderControl_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_InstanceSize").Call(obj)
	return int32(ret)
}

func HeaderControl_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("HeaderControl_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func HeaderControl_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetHashCode").Call(obj)
	return int32(ret)
}

func HeaderControl_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderControl_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderControl_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("HeaderControl_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func HeaderControl_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("HeaderControl_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func HeaderControl_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("HeaderControl_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func HeaderControl_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("HeaderControl_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func HeaderControl_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("HeaderControl_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func HeaderControl_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("HeaderControl_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func HeaderControl_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("HeaderControl_AnchorClient").Call(obj, uintptr(ASpace))
}

func HeaderControl_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("HeaderControl_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func HeaderControl_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("HeaderControl_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func HeaderControl_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("HeaderControl_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func HeaderControl_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("HeaderControl_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func HeaderControl_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("HeaderControl_GetAlign").Call(obj)
	return TAlign(ret)
}

func HeaderControl_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("HeaderControl_SetAlign").Call(obj, uintptr(value))
}

func HeaderControl_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("HeaderControl_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func HeaderControl_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("HeaderControl_SetAnchors").Call(obj, uintptr(value))
}

func HeaderControl_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetBorderWidth").Call(obj)
	return int32(ret)
}

func HeaderControl_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetBorderWidth").Call(obj, uintptr(value))
}

func HeaderControl_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("HeaderControl_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func HeaderControl_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("HeaderControl_SetDragCursor").Call(obj, uintptr(value))
}

func HeaderControl_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("HeaderControl_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func HeaderControl_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("HeaderControl_SetDragKind").Call(obj, uintptr(value))
}

func HeaderControl_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("HeaderControl_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func HeaderControl_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("HeaderControl_SetDragMode").Call(obj, uintptr(value))
}

func HeaderControl_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetEnabled(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetFont").Call(obj)
	return ret
}

func HeaderControl_SetFont(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetFont").Call(obj, value)
}

func HeaderControl_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetImages").Call(obj)
	return ret
}

func HeaderControl_SetImages(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetImages").Call(obj, value)
}

func HeaderControl_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetConstraints").Call(obj)
	return ret
}

func HeaderControl_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetConstraints").Call(obj, value)
}

func HeaderControl_GetSections(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetSections").Call(obj)
	return ret
}

func HeaderControl_SetSections(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetSections").Call(obj, value)
}

func HeaderControl_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetShowHint(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetParentFont(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetPopupMenu").Call(obj)
	return ret
}

func HeaderControl_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetPopupMenu").Call(obj, value)
}

func HeaderControl_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetVisible(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetVisible").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnSectionClick(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnSectionClick").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnSectionResize(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnSectionResize").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnSectionTrack(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnSectionTrack").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnSectionDrag(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnSectionDrag").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_SetOnSectionEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("HeaderControl_SetOnSectionEndDrag").Call(obj, addEventToMap(obj, fn))
}

func HeaderControl_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetCanvas").Call(obj)
	return ret
}

func HeaderControl_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetDockClientCount").Call(obj)
	return int32(ret)
}

func HeaderControl_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetDockSite(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func HeaderControl_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetBrush").Call(obj)
	return ret
}

func HeaderControl_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetControlCount").Call(obj)
	return int32(ret)
}

func HeaderControl_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("HeaderControl_GetHandle").Call(obj)
	return HWND(ret)
}

func HeaderControl_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("HeaderControl_GetParentWindow").Call(obj)
	return HWND(ret)
}

func HeaderControl_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("HeaderControl_SetParentWindow").Call(obj, uintptr(value))
}

func HeaderControl_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("HeaderControl_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func HeaderControl_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("HeaderControl_SetTabOrder").Call(obj, uintptr(value))
}

func HeaderControl_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetTabStop(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("HeaderControl_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetAction").Call(obj)
	return ret
}

func HeaderControl_SetAction(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetAction").Call(obj, value)
}

func HeaderControl_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("HeaderControl_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func HeaderControl_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("HeaderControl_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func HeaderControl_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetClientHeight").Call(obj)
	return int32(ret)
}

func HeaderControl_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetClientHeight").Call(obj, uintptr(value))
}

func HeaderControl_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("HeaderControl_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func HeaderControl_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("HeaderControl_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func HeaderControl_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetClientWidth").Call(obj)
	return int32(ret)
}

func HeaderControl_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetClientWidth").Call(obj, uintptr(value))
}

func HeaderControl_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("HeaderControl_GetControlState").Call(obj)
	return TControlState(ret)
}

func HeaderControl_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("HeaderControl_SetControlState").Call(obj, uintptr(value))
}

func HeaderControl_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("HeaderControl_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func HeaderControl_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("HeaderControl_SetControlStyle").Call(obj, uintptr(value))
}

func HeaderControl_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderControl_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func HeaderControl_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetParent").Call(obj)
	return ret
}

func HeaderControl_SetParent(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetParent").Call(obj, value)
}

func HeaderControl_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetLeft").Call(obj)
	return int32(ret)
}

func HeaderControl_SetLeft(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetLeft").Call(obj, uintptr(value))
}

func HeaderControl_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetTop").Call(obj)
	return int32(ret)
}

func HeaderControl_SetTop(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetTop").Call(obj, uintptr(value))
}

func HeaderControl_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetWidth").Call(obj)
	return int32(ret)
}

func HeaderControl_SetWidth(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetWidth").Call(obj, uintptr(value))
}

func HeaderControl_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetHeight").Call(obj)
	return int32(ret)
}

func HeaderControl_SetHeight(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetHeight").Call(obj, uintptr(value))
}

func HeaderControl_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("HeaderControl_GetCursor").Call(obj)
	return TCursor(ret)
}

func HeaderControl_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("HeaderControl_SetCursor").Call(obj, uintptr(value))
}

func HeaderControl_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderControl_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderControl_SetHint(obj uintptr, value string) {
	getLazyProc("HeaderControl_SetHint").Call(obj, GoStrToDStr(value))
}

func HeaderControl_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetComponentCount").Call(obj)
	return int32(ret)
}

func HeaderControl_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderControl_GetComponentIndex").Call(obj)
	return int32(ret)
}

func HeaderControl_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("HeaderControl_SetComponentIndex").Call(obj, uintptr(value))
}

func HeaderControl_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetOwner").Call(obj)
	return ret
}

func HeaderControl_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderControl_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderControl_SetName(obj uintptr, value string) {
	getLazyProc("HeaderControl_SetName").Call(obj, GoStrToDStr(value))
}

func HeaderControl_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("HeaderControl_GetTag").Call(obj)
	return int(ret)
}

func HeaderControl_SetTag(obj uintptr, value int) {
	getLazyProc("HeaderControl_SetTag").Call(obj, uintptr(value))
}

func HeaderControl_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetAnchorSideLeft").Call(obj)
	return ret
}

func HeaderControl_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetAnchorSideLeft").Call(obj, value)
}

func HeaderControl_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetAnchorSideTop").Call(obj)
	return ret
}

func HeaderControl_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetAnchorSideTop").Call(obj, value)
}

func HeaderControl_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetAnchorSideRight").Call(obj)
	return ret
}

func HeaderControl_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetAnchorSideRight").Call(obj, value)
}

func HeaderControl_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetAnchorSideBottom").Call(obj)
	return ret
}

func HeaderControl_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetAnchorSideBottom").Call(obj, value)
}

func HeaderControl_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetChildSizing").Call(obj)
	return ret
}

func HeaderControl_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetChildSizing").Call(obj, value)
}

func HeaderControl_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetBorderSpacing").Call(obj)
	return ret
}

func HeaderControl_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("HeaderControl_SetBorderSpacing").Call(obj, value)
}

func HeaderControl_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func HeaderControl_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetControls").Call(obj, uintptr(Index))
	return ret
}

func HeaderControl_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func HeaderControl_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("HeaderControl_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func HeaderControl_StaticClassType() TClass {
	r, _, _ := getLazyProc("HeaderControl_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- THeaderSection ---------------------------

func HeaderSection_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderSection_Create").Call(obj)
	return ret
}

func HeaderSection_Free(obj uintptr) {
	getLazyProc("HeaderSection_Free").Call(obj)
}

func HeaderSection_Assign(obj uintptr, Source uintptr) {
	getLazyProc("HeaderSection_Assign").Call(obj, Source)
}

func HeaderSection_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSection_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSection_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("HeaderSection_ClassType").Call(obj)
	return TClass(ret)
}

func HeaderSection_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSection_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSection_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_InstanceSize").Call(obj)
	return int32(ret)
}

func HeaderSection_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("HeaderSection_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func HeaderSection_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderSection_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func HeaderSection_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetHashCode").Call(obj)
	return int32(ret)
}

func HeaderSection_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSection_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSection_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetLeft").Call(obj)
	return int32(ret)
}

func HeaderSection_GetRight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetRight").Call(obj)
	return int32(ret)
}

func HeaderSection_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("HeaderSection_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func HeaderSection_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("HeaderSection_SetAlignment").Call(obj, uintptr(value))
}

func HeaderSection_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetImageIndex").Call(obj)
	return int32(ret)
}

func HeaderSection_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("HeaderSection_SetImageIndex").Call(obj, uintptr(value))
}

func HeaderSection_GetMaxWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetMaxWidth").Call(obj)
	return int32(ret)
}

func HeaderSection_SetMaxWidth(obj uintptr, value int32) {
	getLazyProc("HeaderSection_SetMaxWidth").Call(obj, uintptr(value))
}

func HeaderSection_GetMinWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetMinWidth").Call(obj)
	return int32(ret)
}

func HeaderSection_SetMinWidth(obj uintptr, value int32) {
	getLazyProc("HeaderSection_SetMinWidth").Call(obj, uintptr(value))
}

func HeaderSection_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSection_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSection_SetText(obj uintptr, value string) {
	getLazyProc("HeaderSection_SetText").Call(obj, GoStrToDStr(value))
}

func HeaderSection_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetWidth").Call(obj)
	return int32(ret)
}

func HeaderSection_SetWidth(obj uintptr, value int32) {
	getLazyProc("HeaderSection_SetWidth").Call(obj, uintptr(value))
}

func HeaderSection_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderSection_GetCollection").Call(obj)
	return ret
}

func HeaderSection_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("HeaderSection_SetCollection").Call(obj, value)
}

func HeaderSection_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSection_GetIndex").Call(obj)
	return int32(ret)
}

func HeaderSection_SetIndex(obj uintptr, value int32) {
	getLazyProc("HeaderSection_SetIndex").Call(obj, uintptr(value))
}

func HeaderSection_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSection_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSection_SetDisplayName(obj uintptr, value string) {
	getLazyProc("HeaderSection_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func HeaderSection_StaticClassType() TClass {
	r, _, _ := getLazyProc("HeaderSection_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- THeaderSections ---------------------------

func HeaderSections_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderSections_Create").Call(obj)
	return ret
}

func HeaderSections_Free(obj uintptr) {
	getLazyProc("HeaderSections_Free").Call(obj)
}

func HeaderSections_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderSections_Add").Call(obj)
	return ret
}

func HeaderSections_AddItem(obj uintptr, Item uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("HeaderSections_AddItem").Call(obj, Item, uintptr(Index))
	return ret
}

func HeaderSections_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("HeaderSections_Insert").Call(obj, uintptr(Index))
	return ret
}

func HeaderSections_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("HeaderSections_Owner").Call(obj)
	return ret
}

func HeaderSections_Assign(obj uintptr, Source uintptr) {
	getLazyProc("HeaderSections_Assign").Call(obj, Source)
}

func HeaderSections_BeginUpdate(obj uintptr) {
	getLazyProc("HeaderSections_BeginUpdate").Call(obj)
}

func HeaderSections_Clear(obj uintptr) {
	getLazyProc("HeaderSections_Clear").Call(obj)
}

func HeaderSections_Delete(obj uintptr, Index int32) {
	getLazyProc("HeaderSections_Delete").Call(obj, uintptr(Index))
}

func HeaderSections_EndUpdate(obj uintptr) {
	getLazyProc("HeaderSections_EndUpdate").Call(obj)
}

func HeaderSections_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("HeaderSections_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func HeaderSections_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSections_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSections_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("HeaderSections_ClassType").Call(obj)
	return TClass(ret)
}

func HeaderSections_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSections_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSections_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSections_InstanceSize").Call(obj)
	return int32(ret)
}

func HeaderSections_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("HeaderSections_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func HeaderSections_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("HeaderSections_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func HeaderSections_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSections_GetHashCode").Call(obj)
	return int32(ret)
}

func HeaderSections_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("HeaderSections_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func HeaderSections_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("HeaderSections_GetCount").Call(obj)
	return int32(ret)
}

func HeaderSections_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("HeaderSections_GetItems").Call(obj, uintptr(Index))
	return ret
}

func HeaderSections_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("HeaderSections_SetItems").Call(obj, uintptr(Index), value)
}

func HeaderSections_StaticClassType() TClass {
	r, _, _ := getLazyProc("HeaderSections_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TLabeledEdit ---------------------------

func LabeledEdit_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_Create").Call(obj)
	return ret
}

func LabeledEdit_Free(obj uintptr) {
	getLazyProc("LabeledEdit_Free").Call(obj)
}

func LabeledEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("LabeledEdit_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func LabeledEdit_Clear(obj uintptr) {
	getLazyProc("LabeledEdit_Clear").Call(obj)
}

func LabeledEdit_ClearSelection(obj uintptr) {
	getLazyProc("LabeledEdit_ClearSelection").Call(obj)
}

func LabeledEdit_CopyToClipboard(obj uintptr) {
	getLazyProc("LabeledEdit_CopyToClipboard").Call(obj)
}

func LabeledEdit_CutToClipboard(obj uintptr) {
	getLazyProc("LabeledEdit_CutToClipboard").Call(obj)
}

func LabeledEdit_PasteFromClipboard(obj uintptr) {
	getLazyProc("LabeledEdit_PasteFromClipboard").Call(obj)
}

func LabeledEdit_Undo(obj uintptr) {
	getLazyProc("LabeledEdit_Undo").Call(obj)
}

func LabeledEdit_SelectAll(obj uintptr) {
	getLazyProc("LabeledEdit_SelectAll").Call(obj)
}

func LabeledEdit_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func LabeledEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func LabeledEdit_DisableAlign(obj uintptr) {
	getLazyProc("LabeledEdit_DisableAlign").Call(obj)
}

func LabeledEdit_EnableAlign(obj uintptr) {
	getLazyProc("LabeledEdit_EnableAlign").Call(obj)
}

func LabeledEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func LabeledEdit_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("LabeledEdit_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func LabeledEdit_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("LabeledEdit_InsertControl").Call(obj, AControl)
}

func LabeledEdit_Invalidate(obj uintptr) {
	getLazyProc("LabeledEdit_Invalidate").Call(obj)
}

func LabeledEdit_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("LabeledEdit_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func LabeledEdit_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("LabeledEdit_RemoveControl").Call(obj, AControl)
}

func LabeledEdit_Realign(obj uintptr) {
	getLazyProc("LabeledEdit_Realign").Call(obj)
}

func LabeledEdit_Repaint(obj uintptr) {
	getLazyProc("LabeledEdit_Repaint").Call(obj)
}

func LabeledEdit_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("LabeledEdit_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func LabeledEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("LabeledEdit_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func LabeledEdit_SetFocus(obj uintptr) {
	getLazyProc("LabeledEdit_SetFocus").Call(obj)
}

func LabeledEdit_Update(obj uintptr) {
	getLazyProc("LabeledEdit_Update").Call(obj)
}

func LabeledEdit_BringToFront(obj uintptr) {
	getLazyProc("LabeledEdit_BringToFront").Call(obj)
}

func LabeledEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("LabeledEdit_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LabeledEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("LabeledEdit_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LabeledEdit_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_Hide(obj uintptr) {
	getLazyProc("LabeledEdit_Hide").Call(obj)
}

func LabeledEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("LabeledEdit_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func LabeledEdit_Refresh(obj uintptr) {
	getLazyProc("LabeledEdit_Refresh").Call(obj)
}

func LabeledEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("LabeledEdit_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LabeledEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("LabeledEdit_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LabeledEdit_SendToBack(obj uintptr) {
	getLazyProc("LabeledEdit_SendToBack").Call(obj)
}

func LabeledEdit_Show(obj uintptr) {
	getLazyProc("LabeledEdit_Show").Call(obj)
}

func LabeledEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("LabeledEdit_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func LabeledEdit_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetTextLen").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("LabeledEdit_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func LabeledEdit_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func LabeledEdit_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_Assign(obj uintptr, Source uintptr) {
	getLazyProc("LabeledEdit_Assign").Call(obj, Source)
}

func LabeledEdit_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("LabeledEdit_ClassType").Call(obj)
	return TClass(ret)
}

func LabeledEdit_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_InstanceSize").Call(obj)
	return int32(ret)
}

func LabeledEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("LabeledEdit_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func LabeledEdit_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetHashCode").Call(obj)
	return int32(ret)
}

func LabeledEdit_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("LabeledEdit_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func LabeledEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("LabeledEdit_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func LabeledEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("LabeledEdit_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func LabeledEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("LabeledEdit_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func LabeledEdit_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("LabeledEdit_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func LabeledEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("LabeledEdit_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func LabeledEdit_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("LabeledEdit_AnchorClient").Call(obj, uintptr(ASpace))
}

func LabeledEdit_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func LabeledEdit_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("LabeledEdit_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func LabeledEdit_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("LabeledEdit_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func LabeledEdit_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("LabeledEdit_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func LabeledEdit_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("LabeledEdit_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func LabeledEdit_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("LabeledEdit_SetAlignment").Call(obj, uintptr(value))
}

func LabeledEdit_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("LabeledEdit_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func LabeledEdit_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("LabeledEdit_SetAnchors").Call(obj, uintptr(value))
}

func LabeledEdit_GetAutoSelect(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetAutoSelect").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetAutoSelect(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetAutoSelect").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("LabeledEdit_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func LabeledEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("LabeledEdit_SetBiDiMode").Call(obj, uintptr(value))
}

func LabeledEdit_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("LabeledEdit_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func LabeledEdit_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("LabeledEdit_SetBorderStyle").Call(obj, uintptr(value))
}

func LabeledEdit_GetCharCase(obj uintptr) TEditCharCase {
	ret, _, _ := getLazyProc("LabeledEdit_GetCharCase").Call(obj)
	return TEditCharCase(ret)
}

func LabeledEdit_SetCharCase(obj uintptr, value TEditCharCase) {
	getLazyProc("LabeledEdit_SetCharCase").Call(obj, uintptr(value))
}

func LabeledEdit_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("LabeledEdit_GetColor").Call(obj)
	return TColor(ret)
}

func LabeledEdit_SetColor(obj uintptr, value TColor) {
	getLazyProc("LabeledEdit_SetColor").Call(obj, uintptr(value))
}

func LabeledEdit_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetConstraints").Call(obj)
	return ret
}

func LabeledEdit_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetConstraints").Call(obj, value)
}

func LabeledEdit_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("LabeledEdit_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func LabeledEdit_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("LabeledEdit_SetDragCursor").Call(obj, uintptr(value))
}

func LabeledEdit_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("LabeledEdit_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func LabeledEdit_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("LabeledEdit_SetDragMode").Call(obj, uintptr(value))
}

func LabeledEdit_GetEditLabel(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetEditLabel").Call(obj)
	return ret
}

func LabeledEdit_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetEnabled(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetFont").Call(obj)
	return ret
}

func LabeledEdit_SetFont(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetFont").Call(obj, value)
}

func LabeledEdit_GetHideSelection(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetHideSelection").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetHideSelection(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetHideSelection").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetLabelPosition(obj uintptr) TLabelPosition {
	ret, _, _ := getLazyProc("LabeledEdit_GetLabelPosition").Call(obj)
	return TLabelPosition(ret)
}

func LabeledEdit_SetLabelPosition(obj uintptr, value TLabelPosition) {
	getLazyProc("LabeledEdit_SetLabelPosition").Call(obj, uintptr(value))
}

func LabeledEdit_GetLabelSpacing(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetLabelSpacing").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetLabelSpacing(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetLabelSpacing").Call(obj, uintptr(value))
}

func LabeledEdit_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetMaxLength").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetMaxLength").Call(obj, uintptr(value))
}

func LabeledEdit_GetNumbersOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetNumbersOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetNumbersOnly(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetNumbersOnly").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentColor(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentFont(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetPasswordChar(obj uintptr) uint16 {
	ret, _, _ := getLazyProc("LabeledEdit_GetPasswordChar").Call(obj)
	return uint16(ret)
}

func LabeledEdit_SetPasswordChar(obj uintptr, value uint16) {
	getLazyProc("LabeledEdit_SetPasswordChar").Call(obj, uintptr(value))
}

func LabeledEdit_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetPopupMenu").Call(obj)
	return ret
}

func LabeledEdit_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetPopupMenu").Call(obj, value)
}

func LabeledEdit_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetShowHint(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("LabeledEdit_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func LabeledEdit_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("LabeledEdit_SetTabOrder").Call(obj, uintptr(value))
}

func LabeledEdit_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetTabStop(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_SetText(obj uintptr, value string) {
	getLazyProc("LabeledEdit_SetText").Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetTextHint(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_GetTextHint").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_SetTextHint(obj uintptr, value string) {
	getLazyProc("LabeledEdit_SetTextHint").Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetVisible(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetVisible").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("LabeledEdit_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func LabeledEdit_GetCanUndo(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetCanUndo").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_GetModified(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetModified").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetModified(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetModified").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetSelLength").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetSelLength(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetSelLength").Call(obj, uintptr(value))
}

func LabeledEdit_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetSelStart").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetSelStart(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetSelStart").Call(obj, uintptr(value))
}

func LabeledEdit_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_SetSelText(obj uintptr, value string) {
	getLazyProc("LabeledEdit_SetSelText").Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetDockClientCount").Call(obj)
	return int32(ret)
}

func LabeledEdit_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetDockSite(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func LabeledEdit_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetBrush").Call(obj)
	return ret
}

func LabeledEdit_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetControlCount").Call(obj)
	return int32(ret)
}

func LabeledEdit_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("LabeledEdit_GetHandle").Call(obj)
	return HWND(ret)
}

func LabeledEdit_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("LabeledEdit_GetParentWindow").Call(obj)
	return HWND(ret)
}

func LabeledEdit_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("LabeledEdit_SetParentWindow").Call(obj, uintptr(value))
}

func LabeledEdit_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("LabeledEdit_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetAction").Call(obj)
	return ret
}

func LabeledEdit_SetAction(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetAction").Call(obj, value)
}

func LabeledEdit_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("LabeledEdit_GetAlign").Call(obj)
	return TAlign(ret)
}

func LabeledEdit_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("LabeledEdit_SetAlign").Call(obj, uintptr(value))
}

func LabeledEdit_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("LabeledEdit_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LabeledEdit_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("LabeledEdit_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func LabeledEdit_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetClientHeight").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetClientHeight").Call(obj, uintptr(value))
}

func LabeledEdit_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("LabeledEdit_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LabeledEdit_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("LabeledEdit_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func LabeledEdit_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetClientWidth").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetClientWidth").Call(obj, uintptr(value))
}

func LabeledEdit_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("LabeledEdit_GetControlState").Call(obj)
	return TControlState(ret)
}

func LabeledEdit_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("LabeledEdit_SetControlState").Call(obj, uintptr(value))
}

func LabeledEdit_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("LabeledEdit_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func LabeledEdit_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("LabeledEdit_SetControlStyle").Call(obj, uintptr(value))
}

func LabeledEdit_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("LabeledEdit_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func LabeledEdit_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetParent").Call(obj)
	return ret
}

func LabeledEdit_SetParent(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetParent").Call(obj, value)
}

func LabeledEdit_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetLeft").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetLeft(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetLeft").Call(obj, uintptr(value))
}

func LabeledEdit_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetTop").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetTop(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetTop").Call(obj, uintptr(value))
}

func LabeledEdit_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetWidth").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetWidth(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetWidth").Call(obj, uintptr(value))
}

func LabeledEdit_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetHeight").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetHeight(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetHeight").Call(obj, uintptr(value))
}

func LabeledEdit_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("LabeledEdit_GetCursor").Call(obj)
	return TCursor(ret)
}

func LabeledEdit_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("LabeledEdit_SetCursor").Call(obj, uintptr(value))
}

func LabeledEdit_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_SetHint(obj uintptr, value string) {
	getLazyProc("LabeledEdit_SetHint").Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetComponentCount").Call(obj)
	return int32(ret)
}

func LabeledEdit_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("LabeledEdit_GetComponentIndex").Call(obj)
	return int32(ret)
}

func LabeledEdit_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("LabeledEdit_SetComponentIndex").Call(obj, uintptr(value))
}

func LabeledEdit_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetOwner").Call(obj)
	return ret
}

func LabeledEdit_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("LabeledEdit_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func LabeledEdit_SetName(obj uintptr, value string) {
	getLazyProc("LabeledEdit_SetName").Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("LabeledEdit_GetTag").Call(obj)
	return int(ret)
}

func LabeledEdit_SetTag(obj uintptr, value int) {
	getLazyProc("LabeledEdit_SetTag").Call(obj, uintptr(value))
}

func LabeledEdit_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetAnchorSideLeft").Call(obj)
	return ret
}

func LabeledEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetAnchorSideLeft").Call(obj, value)
}

func LabeledEdit_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetAnchorSideTop").Call(obj)
	return ret
}

func LabeledEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetAnchorSideTop").Call(obj, value)
}

func LabeledEdit_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetAnchorSideRight").Call(obj)
	return ret
}

func LabeledEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetAnchorSideRight").Call(obj, value)
}

func LabeledEdit_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetAnchorSideBottom").Call(obj)
	return ret
}

func LabeledEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetAnchorSideBottom").Call(obj, value)
}

func LabeledEdit_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetChildSizing").Call(obj)
	return ret
}

func LabeledEdit_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetChildSizing").Call(obj, value)
}

func LabeledEdit_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetBorderSpacing").Call(obj)
	return ret
}

func LabeledEdit_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("LabeledEdit_SetBorderSpacing").Call(obj, value)
}

func LabeledEdit_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func LabeledEdit_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetControls").Call(obj, uintptr(Index))
	return ret
}

func LabeledEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func LabeledEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("LabeledEdit_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func LabeledEdit_StaticClassType() TClass {
	r, _, _ := getLazyProc("LabeledEdit_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TBoundLabel ---------------------------

func BoundLabel_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_Create").Call(obj)
	return ret
}

func BoundLabel_Free(obj uintptr) {
	getLazyProc("BoundLabel_Free").Call(obj)
}

func BoundLabel_BringToFront(obj uintptr) {
	getLazyProc("BoundLabel_BringToFront").Call(obj)
}

func BoundLabel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("BoundLabel_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BoundLabel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("BoundLabel_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BoundLabel_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_Hide(obj uintptr) {
	getLazyProc("BoundLabel_Hide").Call(obj)
}

func BoundLabel_Invalidate(obj uintptr) {
	getLazyProc("BoundLabel_Invalidate").Call(obj)
}

func BoundLabel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("BoundLabel_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func BoundLabel_Refresh(obj uintptr) {
	getLazyProc("BoundLabel_Refresh").Call(obj)
}

func BoundLabel_Repaint(obj uintptr) {
	getLazyProc("BoundLabel_Repaint").Call(obj)
}

func BoundLabel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("BoundLabel_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BoundLabel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("BoundLabel_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BoundLabel_SendToBack(obj uintptr) {
	getLazyProc("BoundLabel_SendToBack").Call(obj)
}

func BoundLabel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("BoundLabel_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func BoundLabel_Show(obj uintptr) {
	getLazyProc("BoundLabel_Show").Call(obj)
}

func BoundLabel_Update(obj uintptr) {
	getLazyProc("BoundLabel_Update").Call(obj)
}

func BoundLabel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("BoundLabel_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func BoundLabel_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetTextLen").Call(obj)
	return int32(ret)
}

func BoundLabel_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("BoundLabel_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func BoundLabel_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func BoundLabel_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("BoundLabel_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func BoundLabel_Assign(obj uintptr, Source uintptr) {
	getLazyProc("BoundLabel_Assign").Call(obj, Source)
}

func BoundLabel_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("BoundLabel_ClassType").Call(obj)
	return TClass(ret)
}

func BoundLabel_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("BoundLabel_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func BoundLabel_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_InstanceSize").Call(obj)
	return int32(ret)
}

func BoundLabel_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("BoundLabel_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func BoundLabel_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetHashCode").Call(obj)
	return int32(ret)
}

func BoundLabel_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("BoundLabel_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func BoundLabel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("BoundLabel_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func BoundLabel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("BoundLabel_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func BoundLabel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("BoundLabel_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func BoundLabel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("BoundLabel_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func BoundLabel_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("BoundLabel_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func BoundLabel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("BoundLabel_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func BoundLabel_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("BoundLabel_AnchorClient").Call(obj, uintptr(ASpace))
}

func BoundLabel_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("BoundLabel_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func BoundLabel_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("BoundLabel_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func BoundLabel_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("BoundLabel_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func BoundLabel_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("BoundLabel_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func BoundLabel_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("BoundLabel_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func BoundLabel_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("BoundLabel_SetBiDiMode").Call(obj, uintptr(value))
}

func BoundLabel_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("BoundLabel_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func BoundLabel_SetCaption(obj uintptr, value string) {
	getLazyProc("BoundLabel_SetCaption").Call(obj, GoStrToDStr(value))
}

func BoundLabel_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("BoundLabel_GetColor").Call(obj)
	return TColor(ret)
}

func BoundLabel_SetColor(obj uintptr, value TColor) {
	getLazyProc("BoundLabel_SetColor").Call(obj, uintptr(value))
}

func BoundLabel_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("BoundLabel_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func BoundLabel_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("BoundLabel_SetDragCursor").Call(obj, uintptr(value))
}

func BoundLabel_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("BoundLabel_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func BoundLabel_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("BoundLabel_SetDragMode").Call(obj, uintptr(value))
}

func BoundLabel_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetFont").Call(obj)
	return ret
}

func BoundLabel_SetFont(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetFont").Call(obj, value)
}

func BoundLabel_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetHeight").Call(obj)
	return int32(ret)
}

func BoundLabel_SetHeight(obj uintptr, value int32) {
	getLazyProc("BoundLabel_SetHeight").Call(obj, uintptr(value))
}

func BoundLabel_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetLeft").Call(obj)
	return int32(ret)
}

func BoundLabel_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetParentColor(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetParentFont(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetPopupMenu").Call(obj)
	return ret
}

func BoundLabel_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetPopupMenu").Call(obj, value)
}

func BoundLabel_GetShowAccelChar(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetShowAccelChar").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetShowAccelChar(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetShowAccelChar").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetShowHint(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetTop").Call(obj)
	return int32(ret)
}

func BoundLabel_GetLayout(obj uintptr) TTextLayout {
	ret, _, _ := getLazyProc("BoundLabel_GetLayout").Call(obj)
	return TTextLayout(ret)
}

func BoundLabel_SetLayout(obj uintptr, value TTextLayout) {
	getLazyProc("BoundLabel_SetLayout").Call(obj, uintptr(value))
}

func BoundLabel_GetWordWrap(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetWordWrap").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetWordWrap(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetWordWrap").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetWidth").Call(obj)
	return int32(ret)
}

func BoundLabel_SetWidth(obj uintptr, value int32) {
	getLazyProc("BoundLabel_SetWidth").Call(obj, uintptr(value))
}

func BoundLabel_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("BoundLabel_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func BoundLabel_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetCanvas").Call(obj)
	return ret
}

func BoundLabel_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetEnabled(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetAction").Call(obj)
	return ret
}

func BoundLabel_SetAction(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetAction").Call(obj, value)
}

func BoundLabel_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("BoundLabel_GetAlign").Call(obj)
	return TAlign(ret)
}

func BoundLabel_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("BoundLabel_SetAlign").Call(obj, uintptr(value))
}

func BoundLabel_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("BoundLabel_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func BoundLabel_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("BoundLabel_SetAnchors").Call(obj, uintptr(value))
}

func BoundLabel_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("BoundLabel_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BoundLabel_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("BoundLabel_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func BoundLabel_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetClientHeight").Call(obj)
	return int32(ret)
}

func BoundLabel_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("BoundLabel_SetClientHeight").Call(obj, uintptr(value))
}

func BoundLabel_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("BoundLabel_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BoundLabel_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("BoundLabel_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func BoundLabel_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetClientWidth").Call(obj)
	return int32(ret)
}

func BoundLabel_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("BoundLabel_SetClientWidth").Call(obj, uintptr(value))
}

func BoundLabel_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetConstraints").Call(obj)
	return ret
}

func BoundLabel_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetConstraints").Call(obj, value)
}

func BoundLabel_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("BoundLabel_GetControlState").Call(obj)
	return TControlState(ret)
}

func BoundLabel_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("BoundLabel_SetControlState").Call(obj, uintptr(value))
}

func BoundLabel_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("BoundLabel_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func BoundLabel_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("BoundLabel_SetControlStyle").Call(obj, uintptr(value))
}

func BoundLabel_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("BoundLabel_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func BoundLabel_SetVisible(obj uintptr, value bool) {
	getLazyProc("BoundLabel_SetVisible").Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetParent").Call(obj)
	return ret
}

func BoundLabel_SetParent(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetParent").Call(obj, value)
}

func BoundLabel_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("BoundLabel_GetCursor").Call(obj)
	return TCursor(ret)
}

func BoundLabel_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("BoundLabel_SetCursor").Call(obj, uintptr(value))
}

func BoundLabel_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("BoundLabel_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func BoundLabel_SetHint(obj uintptr, value string) {
	getLazyProc("BoundLabel_SetHint").Call(obj, GoStrToDStr(value))
}

func BoundLabel_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetComponentCount").Call(obj)
	return int32(ret)
}

func BoundLabel_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("BoundLabel_GetComponentIndex").Call(obj)
	return int32(ret)
}

func BoundLabel_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("BoundLabel_SetComponentIndex").Call(obj, uintptr(value))
}

func BoundLabel_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetOwner").Call(obj)
	return ret
}

func BoundLabel_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("BoundLabel_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func BoundLabel_SetName(obj uintptr, value string) {
	getLazyProc("BoundLabel_SetName").Call(obj, GoStrToDStr(value))
}

func BoundLabel_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("BoundLabel_GetTag").Call(obj)
	return int(ret)
}

func BoundLabel_SetTag(obj uintptr, value int) {
	getLazyProc("BoundLabel_SetTag").Call(obj, uintptr(value))
}

func BoundLabel_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetAnchorSideLeft").Call(obj)
	return ret
}

func BoundLabel_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetAnchorSideLeft").Call(obj, value)
}

func BoundLabel_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetAnchorSideTop").Call(obj)
	return ret
}

func BoundLabel_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetAnchorSideTop").Call(obj, value)
}

func BoundLabel_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetAnchorSideRight").Call(obj)
	return ret
}

func BoundLabel_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetAnchorSideRight").Call(obj, value)
}

func BoundLabel_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetAnchorSideBottom").Call(obj)
	return ret
}

func BoundLabel_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetAnchorSideBottom").Call(obj, value)
}

func BoundLabel_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetBorderSpacing").Call(obj)
	return ret
}

func BoundLabel_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("BoundLabel_SetBorderSpacing").Call(obj, value)
}

func BoundLabel_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func BoundLabel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("BoundLabel_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func BoundLabel_StaticClassType() TClass {
	r, _, _ := getLazyProc("BoundLabel_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TFlowPanel ---------------------------

func FlowPanel_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_Create").Call(obj)
	return ret
}

func FlowPanel_Free(obj uintptr) {
	getLazyProc("FlowPanel_Free").Call(obj)
}

func FlowPanel_GetControlIndex(obj uintptr, AControl uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetControlIndex").Call(obj, AControl)
	return int32(ret)
}

func FlowPanel_SetControlIndex(obj uintptr, AControl uintptr, Index int32) {
	getLazyProc("FlowPanel_SetControlIndex").Call(obj, AControl, uintptr(Index))
}

func FlowPanel_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func FlowPanel_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func FlowPanel_DisableAlign(obj uintptr) {
	getLazyProc("FlowPanel_DisableAlign").Call(obj)
}

func FlowPanel_EnableAlign(obj uintptr) {
	getLazyProc("FlowPanel_EnableAlign").Call(obj)
}

func FlowPanel_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func FlowPanel_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("FlowPanel_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func FlowPanel_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("FlowPanel_InsertControl").Call(obj, AControl)
}

func FlowPanel_Invalidate(obj uintptr) {
	getLazyProc("FlowPanel_Invalidate").Call(obj)
}

func FlowPanel_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("FlowPanel_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func FlowPanel_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("FlowPanel_RemoveControl").Call(obj, AControl)
}

func FlowPanel_Realign(obj uintptr) {
	getLazyProc("FlowPanel_Realign").Call(obj)
}

func FlowPanel_Repaint(obj uintptr) {
	getLazyProc("FlowPanel_Repaint").Call(obj)
}

func FlowPanel_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("FlowPanel_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func FlowPanel_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("FlowPanel_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func FlowPanel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("FlowPanel_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func FlowPanel_SetFocus(obj uintptr) {
	getLazyProc("FlowPanel_SetFocus").Call(obj)
}

func FlowPanel_Update(obj uintptr) {
	getLazyProc("FlowPanel_Update").Call(obj)
}

func FlowPanel_BringToFront(obj uintptr) {
	getLazyProc("FlowPanel_BringToFront").Call(obj)
}

func FlowPanel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("FlowPanel_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FlowPanel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("FlowPanel_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FlowPanel_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_Hide(obj uintptr) {
	getLazyProc("FlowPanel_Hide").Call(obj)
}

func FlowPanel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("FlowPanel_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func FlowPanel_Refresh(obj uintptr) {
	getLazyProc("FlowPanel_Refresh").Call(obj)
}

func FlowPanel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("FlowPanel_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FlowPanel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("FlowPanel_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FlowPanel_SendToBack(obj uintptr) {
	getLazyProc("FlowPanel_SendToBack").Call(obj)
}

func FlowPanel_Show(obj uintptr) {
	getLazyProc("FlowPanel_Show").Call(obj)
}

func FlowPanel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("FlowPanel_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func FlowPanel_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetTextLen").Call(obj)
	return int32(ret)
}

func FlowPanel_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("FlowPanel_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func FlowPanel_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func FlowPanel_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("FlowPanel_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func FlowPanel_Assign(obj uintptr, Source uintptr) {
	getLazyProc("FlowPanel_Assign").Call(obj, Source)
}

func FlowPanel_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("FlowPanel_ClassType").Call(obj)
	return TClass(ret)
}

func FlowPanel_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("FlowPanel_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func FlowPanel_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_InstanceSize").Call(obj)
	return int32(ret)
}

func FlowPanel_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("FlowPanel_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func FlowPanel_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetHashCode").Call(obj)
	return int32(ret)
}

func FlowPanel_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("FlowPanel_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func FlowPanel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("FlowPanel_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func FlowPanel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("FlowPanel_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func FlowPanel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("FlowPanel_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func FlowPanel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("FlowPanel_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func FlowPanel_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("FlowPanel_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func FlowPanel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("FlowPanel_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func FlowPanel_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("FlowPanel_AnchorClient").Call(obj, uintptr(ASpace))
}

func FlowPanel_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("FlowPanel_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func FlowPanel_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("FlowPanel_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func FlowPanel_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("FlowPanel_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func FlowPanel_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("FlowPanel_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func FlowPanel_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("FlowPanel_GetAlign").Call(obj)
	return TAlign(ret)
}

func FlowPanel_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("FlowPanel_SetAlign").Call(obj, uintptr(value))
}

func FlowPanel_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("FlowPanel_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func FlowPanel_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("FlowPanel_SetAlignment").Call(obj, uintptr(value))
}

func FlowPanel_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("FlowPanel_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func FlowPanel_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("FlowPanel_SetAnchors").Call(obj, uintptr(value))
}

func FlowPanel_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetAutoWrap(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetAutoWrap").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetAutoWrap(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetAutoWrap").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("FlowPanel_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func FlowPanel_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("FlowPanel_SetBiDiMode").Call(obj, uintptr(value))
}

func FlowPanel_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetBorderWidth").Call(obj)
	return int32(ret)
}

func FlowPanel_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetBorderWidth").Call(obj, uintptr(value))
}

func FlowPanel_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("FlowPanel_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func FlowPanel_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("FlowPanel_SetBorderStyle").Call(obj, uintptr(value))
}

func FlowPanel_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("FlowPanel_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func FlowPanel_SetCaption(obj uintptr, value string) {
	getLazyProc("FlowPanel_SetCaption").Call(obj, GoStrToDStr(value))
}

func FlowPanel_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("FlowPanel_GetColor").Call(obj)
	return TColor(ret)
}

func FlowPanel_SetColor(obj uintptr, value TColor) {
	getLazyProc("FlowPanel_SetColor").Call(obj, uintptr(value))
}

func FlowPanel_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetConstraints").Call(obj)
	return ret
}

func FlowPanel_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetConstraints").Call(obj, value)
}

func FlowPanel_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetDockSite(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("FlowPanel_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func FlowPanel_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("FlowPanel_SetDragCursor").Call(obj, uintptr(value))
}

func FlowPanel_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("FlowPanel_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func FlowPanel_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("FlowPanel_SetDragKind").Call(obj, uintptr(value))
}

func FlowPanel_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("FlowPanel_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func FlowPanel_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("FlowPanel_SetDragMode").Call(obj, uintptr(value))
}

func FlowPanel_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetEnabled(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetFlowStyle(obj uintptr) TFlowStyle {
	ret, _, _ := getLazyProc("FlowPanel_GetFlowStyle").Call(obj)
	return TFlowStyle(ret)
}

func FlowPanel_SetFlowStyle(obj uintptr, value TFlowStyle) {
	getLazyProc("FlowPanel_SetFlowStyle").Call(obj, uintptr(value))
}

func FlowPanel_GetFullRepaint(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetFullRepaint").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetFullRepaint(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetFullRepaint").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetFont").Call(obj)
	return ret
}

func FlowPanel_SetFont(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetFont").Call(obj, value)
}

func FlowPanel_GetParentBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetParentBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetParentBackground(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetParentBackground").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetParentColor(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetParentFont(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetPopupMenu").Call(obj)
	return ret
}

func FlowPanel_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetPopupMenu").Call(obj, value)
}

func FlowPanel_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetShowHint(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("FlowPanel_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func FlowPanel_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("FlowPanel_SetTabOrder").Call(obj, uintptr(value))
}

func FlowPanel_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetTabStop(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_SetVisible(obj uintptr, value bool) {
	getLazyProc("FlowPanel_SetVisible").Call(obj, GoBoolToDBool(value))
}

func FlowPanel_SetOnAlignPosition(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnAlignPosition").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnConstrainedResize(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnConstrainedResize").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("FlowPanel_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func FlowPanel_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetDockClientCount").Call(obj)
	return int32(ret)
}

func FlowPanel_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func FlowPanel_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetBrush").Call(obj)
	return ret
}

func FlowPanel_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetControlCount").Call(obj)
	return int32(ret)
}

func FlowPanel_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("FlowPanel_GetHandle").Call(obj)
	return HWND(ret)
}

func FlowPanel_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("FlowPanel_GetParentWindow").Call(obj)
	return HWND(ret)
}

func FlowPanel_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("FlowPanel_SetParentWindow").Call(obj, uintptr(value))
}

func FlowPanel_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetAction").Call(obj)
	return ret
}

func FlowPanel_SetAction(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetAction").Call(obj, value)
}

func FlowPanel_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("FlowPanel_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FlowPanel_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("FlowPanel_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func FlowPanel_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetClientHeight").Call(obj)
	return int32(ret)
}

func FlowPanel_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetClientHeight").Call(obj, uintptr(value))
}

func FlowPanel_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("FlowPanel_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FlowPanel_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("FlowPanel_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func FlowPanel_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetClientWidth").Call(obj)
	return int32(ret)
}

func FlowPanel_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetClientWidth").Call(obj, uintptr(value))
}

func FlowPanel_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("FlowPanel_GetControlState").Call(obj)
	return TControlState(ret)
}

func FlowPanel_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("FlowPanel_SetControlState").Call(obj, uintptr(value))
}

func FlowPanel_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("FlowPanel_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func FlowPanel_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("FlowPanel_SetControlStyle").Call(obj, uintptr(value))
}

func FlowPanel_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("FlowPanel_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func FlowPanel_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetParent").Call(obj)
	return ret
}

func FlowPanel_SetParent(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetParent").Call(obj, value)
}

func FlowPanel_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetLeft").Call(obj)
	return int32(ret)
}

func FlowPanel_SetLeft(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetLeft").Call(obj, uintptr(value))
}

func FlowPanel_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetTop").Call(obj)
	return int32(ret)
}

func FlowPanel_SetTop(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetTop").Call(obj, uintptr(value))
}

func FlowPanel_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetWidth").Call(obj)
	return int32(ret)
}

func FlowPanel_SetWidth(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetWidth").Call(obj, uintptr(value))
}

func FlowPanel_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetHeight").Call(obj)
	return int32(ret)
}

func FlowPanel_SetHeight(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetHeight").Call(obj, uintptr(value))
}

func FlowPanel_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("FlowPanel_GetCursor").Call(obj)
	return TCursor(ret)
}

func FlowPanel_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("FlowPanel_SetCursor").Call(obj, uintptr(value))
}

func FlowPanel_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("FlowPanel_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func FlowPanel_SetHint(obj uintptr, value string) {
	getLazyProc("FlowPanel_SetHint").Call(obj, GoStrToDStr(value))
}

func FlowPanel_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetComponentCount").Call(obj)
	return int32(ret)
}

func FlowPanel_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("FlowPanel_GetComponentIndex").Call(obj)
	return int32(ret)
}

func FlowPanel_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("FlowPanel_SetComponentIndex").Call(obj, uintptr(value))
}

func FlowPanel_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetOwner").Call(obj)
	return ret
}

func FlowPanel_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("FlowPanel_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func FlowPanel_SetName(obj uintptr, value string) {
	getLazyProc("FlowPanel_SetName").Call(obj, GoStrToDStr(value))
}

func FlowPanel_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("FlowPanel_GetTag").Call(obj)
	return int(ret)
}

func FlowPanel_SetTag(obj uintptr, value int) {
	getLazyProc("FlowPanel_SetTag").Call(obj, uintptr(value))
}

func FlowPanel_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetAnchorSideLeft").Call(obj)
	return ret
}

func FlowPanel_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetAnchorSideLeft").Call(obj, value)
}

func FlowPanel_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetAnchorSideTop").Call(obj)
	return ret
}

func FlowPanel_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetAnchorSideTop").Call(obj, value)
}

func FlowPanel_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetAnchorSideRight").Call(obj)
	return ret
}

func FlowPanel_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetAnchorSideRight").Call(obj, value)
}

func FlowPanel_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetAnchorSideBottom").Call(obj)
	return ret
}

func FlowPanel_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetAnchorSideBottom").Call(obj, value)
}

func FlowPanel_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetChildSizing").Call(obj)
	return ret
}

func FlowPanel_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetChildSizing").Call(obj, value)
}

func FlowPanel_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetBorderSpacing").Call(obj)
	return ret
}

func FlowPanel_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("FlowPanel_SetBorderSpacing").Call(obj, value)
}

func FlowPanel_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func FlowPanel_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetControls").Call(obj, uintptr(Index))
	return ret
}

func FlowPanel_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func FlowPanel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("FlowPanel_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func FlowPanel_StaticClassType() TClass {
	r, _, _ := getLazyProc("FlowPanel_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCoolBar ---------------------------

func CoolBar_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_Create").Call(obj)
	return ret
}

func CoolBar_Free(obj uintptr) {
	getLazyProc("CoolBar_Free").Call(obj)
}

func CoolBar_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("CoolBar_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func CoolBar_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func CoolBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("CoolBar_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func CoolBar_DisableAlign(obj uintptr) {
	getLazyProc("CoolBar_DisableAlign").Call(obj)
}

func CoolBar_EnableAlign(obj uintptr) {
	getLazyProc("CoolBar_EnableAlign").Call(obj)
}

func CoolBar_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("CoolBar_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func CoolBar_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_Invalidate(obj uintptr) {
	getLazyProc("CoolBar_Invalidate").Call(obj)
}

func CoolBar_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("CoolBar_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func CoolBar_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("CoolBar_RemoveControl").Call(obj, AControl)
}

func CoolBar_Realign(obj uintptr) {
	getLazyProc("CoolBar_Realign").Call(obj)
}

func CoolBar_Repaint(obj uintptr) {
	getLazyProc("CoolBar_Repaint").Call(obj)
}

func CoolBar_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("CoolBar_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func CoolBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("CoolBar_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func CoolBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("CoolBar_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func CoolBar_SetFocus(obj uintptr) {
	getLazyProc("CoolBar_SetFocus").Call(obj)
}

func CoolBar_Update(obj uintptr) {
	getLazyProc("CoolBar_Update").Call(obj)
}

func CoolBar_BringToFront(obj uintptr) {
	getLazyProc("CoolBar_BringToFront").Call(obj)
}

func CoolBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CoolBar_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CoolBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CoolBar_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CoolBar_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_Hide(obj uintptr) {
	getLazyProc("CoolBar_Hide").Call(obj)
}

func CoolBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("CoolBar_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func CoolBar_Refresh(obj uintptr) {
	getLazyProc("CoolBar_Refresh").Call(obj)
}

func CoolBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CoolBar_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CoolBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CoolBar_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CoolBar_SendToBack(obj uintptr) {
	getLazyProc("CoolBar_SendToBack").Call(obj)
}

func CoolBar_Show(obj uintptr) {
	getLazyProc("CoolBar_Show").Call(obj)
}

func CoolBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("CoolBar_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func CoolBar_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetTextLen").Call(obj)
	return int32(ret)
}

func CoolBar_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("CoolBar_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func CoolBar_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("CoolBar_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func CoolBar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("CoolBar_Assign").Call(obj, Source)
}

func CoolBar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("CoolBar_ClassType").Call(obj)
	return TClass(ret)
}

func CoolBar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_InstanceSize").Call(obj)
	return int32(ret)
}

func CoolBar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("CoolBar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func CoolBar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func CoolBar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetHashCode").Call(obj)
	return int32(ret)
}

func CoolBar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CoolBar_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CoolBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CoolBar_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CoolBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CoolBar_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func CoolBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CoolBar_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func CoolBar_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("CoolBar_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func CoolBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("CoolBar_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func CoolBar_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("CoolBar_AnchorClient").Call(obj, uintptr(ASpace))
}

func CoolBar_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CoolBar_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CoolBar_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("CoolBar_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func CoolBar_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("CoolBar_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func CoolBar_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("CoolBar_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func CoolBar_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("CoolBar_GetAlign").Call(obj)
	return TAlign(ret)
}

func CoolBar_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("CoolBar_SetAlign").Call(obj, uintptr(value))
}

func CoolBar_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("CoolBar_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func CoolBar_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("CoolBar_SetAnchors").Call(obj, uintptr(value))
}

func CoolBar_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetBandBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("CoolBar_GetBandBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func CoolBar_SetBandBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("CoolBar_SetBandBorderStyle").Call(obj, uintptr(value))
}

func CoolBar_GetBandMaximize(obj uintptr) TCoolBandMaximize {
	ret, _, _ := getLazyProc("CoolBar_GetBandMaximize").Call(obj)
	return TCoolBandMaximize(ret)
}

func CoolBar_SetBandMaximize(obj uintptr, value TCoolBandMaximize) {
	getLazyProc("CoolBar_SetBandMaximize").Call(obj, uintptr(value))
}

func CoolBar_GetBands(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetBands").Call(obj)
	return ret
}

func CoolBar_SetBands(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetBands").Call(obj, value)
}

func CoolBar_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetBorderWidth").Call(obj)
	return int32(ret)
}

func CoolBar_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetBorderWidth").Call(obj, uintptr(value))
}

func CoolBar_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("CoolBar_GetColor").Call(obj)
	return TColor(ret)
}

func CoolBar_SetColor(obj uintptr, value TColor) {
	getLazyProc("CoolBar_SetColor").Call(obj, uintptr(value))
}

func CoolBar_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetConstraints").Call(obj)
	return ret
}

func CoolBar_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetConstraints").Call(obj, value)
}

func CoolBar_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetDockSite(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CoolBar_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func CoolBar_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("CoolBar_SetDragCursor").Call(obj, uintptr(value))
}

func CoolBar_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("CoolBar_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func CoolBar_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("CoolBar_SetDragKind").Call(obj, uintptr(value))
}

func CoolBar_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("CoolBar_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func CoolBar_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("CoolBar_SetDragMode").Call(obj, uintptr(value))
}

func CoolBar_GetEdgeBorders(obj uintptr) TEdgeBorders {
	ret, _, _ := getLazyProc("CoolBar_GetEdgeBorders").Call(obj)
	return TEdgeBorders(ret)
}

func CoolBar_SetEdgeBorders(obj uintptr, value TEdgeBorders) {
	getLazyProc("CoolBar_SetEdgeBorders").Call(obj, uintptr(value))
}

func CoolBar_GetEdgeInner(obj uintptr) TEdgeStyle {
	ret, _, _ := getLazyProc("CoolBar_GetEdgeInner").Call(obj)
	return TEdgeStyle(ret)
}

func CoolBar_SetEdgeInner(obj uintptr, value TEdgeStyle) {
	getLazyProc("CoolBar_SetEdgeInner").Call(obj, uintptr(value))
}

func CoolBar_GetEdgeOuter(obj uintptr) TEdgeStyle {
	ret, _, _ := getLazyProc("CoolBar_GetEdgeOuter").Call(obj)
	return TEdgeStyle(ret)
}

func CoolBar_SetEdgeOuter(obj uintptr, value TEdgeStyle) {
	getLazyProc("CoolBar_SetEdgeOuter").Call(obj, uintptr(value))
}

func CoolBar_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetEnabled(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetFixedSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetFixedSize").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetFixedSize(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetFixedSize").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetFixedOrder(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetFixedOrder").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetFixedOrder(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetFixedOrder").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetFont").Call(obj)
	return ret
}

func CoolBar_SetFont(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetFont").Call(obj, value)
}

func CoolBar_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetImages").Call(obj)
	return ret
}

func CoolBar_SetImages(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetImages").Call(obj, value)
}

func CoolBar_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetParentColor(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetParentFont(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetBitmap(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetBitmap").Call(obj)
	return ret
}

func CoolBar_SetBitmap(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetBitmap").Call(obj, value)
}

func CoolBar_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetPopupMenu").Call(obj)
	return ret
}

func CoolBar_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetPopupMenu").Call(obj, value)
}

func CoolBar_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetShowHint(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetShowText(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetShowText").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetShowText(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetShowText").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetVertical(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetVertical").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetVertical(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetVertical").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetVisible(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func CoolBar_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("CoolBar_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func CoolBar_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetDockClientCount").Call(obj)
	return int32(ret)
}

func CoolBar_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func CoolBar_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetBrush").Call(obj)
	return ret
}

func CoolBar_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetControlCount").Call(obj)
	return int32(ret)
}

func CoolBar_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CoolBar_GetHandle").Call(obj)
	return HWND(ret)
}

func CoolBar_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CoolBar_GetParentWindow").Call(obj)
	return HWND(ret)
}

func CoolBar_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("CoolBar_SetParentWindow").Call(obj, uintptr(value))
}

func CoolBar_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("CoolBar_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func CoolBar_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("CoolBar_SetTabOrder").Call(obj, uintptr(value))
}

func CoolBar_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetTabStop(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("CoolBar_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetAction").Call(obj)
	return ret
}

func CoolBar_SetAction(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetAction").Call(obj, value)
}

func CoolBar_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("CoolBar_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func CoolBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("CoolBar_SetBiDiMode").Call(obj, uintptr(value))
}

func CoolBar_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CoolBar_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CoolBar_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("CoolBar_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func CoolBar_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetClientHeight").Call(obj)
	return int32(ret)
}

func CoolBar_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetClientHeight").Call(obj, uintptr(value))
}

func CoolBar_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("CoolBar_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CoolBar_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CoolBar_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CoolBar_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetClientWidth").Call(obj)
	return int32(ret)
}

func CoolBar_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetClientWidth").Call(obj, uintptr(value))
}

func CoolBar_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("CoolBar_GetControlState").Call(obj)
	return TControlState(ret)
}

func CoolBar_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("CoolBar_SetControlState").Call(obj, uintptr(value))
}

func CoolBar_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("CoolBar_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func CoolBar_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("CoolBar_SetControlStyle").Call(obj, uintptr(value))
}

func CoolBar_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBar_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBar_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetParent").Call(obj)
	return ret
}

func CoolBar_SetParent(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetParent").Call(obj, value)
}

func CoolBar_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetLeft").Call(obj)
	return int32(ret)
}

func CoolBar_SetLeft(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetLeft").Call(obj, uintptr(value))
}

func CoolBar_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetTop").Call(obj)
	return int32(ret)
}

func CoolBar_SetTop(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetTop").Call(obj, uintptr(value))
}

func CoolBar_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetWidth").Call(obj)
	return int32(ret)
}

func CoolBar_SetWidth(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetWidth").Call(obj, uintptr(value))
}

func CoolBar_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetHeight").Call(obj)
	return int32(ret)
}

func CoolBar_SetHeight(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetHeight").Call(obj, uintptr(value))
}

func CoolBar_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CoolBar_GetCursor").Call(obj)
	return TCursor(ret)
}

func CoolBar_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("CoolBar_SetCursor").Call(obj, uintptr(value))
}

func CoolBar_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBar_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBar_SetHint(obj uintptr, value string) {
	getLazyProc("CoolBar_SetHint").Call(obj, GoStrToDStr(value))
}

func CoolBar_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetComponentCount").Call(obj)
	return int32(ret)
}

func CoolBar_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBar_GetComponentIndex").Call(obj)
	return int32(ret)
}

func CoolBar_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("CoolBar_SetComponentIndex").Call(obj, uintptr(value))
}

func CoolBar_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetOwner").Call(obj)
	return ret
}

func CoolBar_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBar_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBar_SetName(obj uintptr, value string) {
	getLazyProc("CoolBar_SetName").Call(obj, GoStrToDStr(value))
}

func CoolBar_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("CoolBar_GetTag").Call(obj)
	return int(ret)
}

func CoolBar_SetTag(obj uintptr, value int) {
	getLazyProc("CoolBar_SetTag").Call(obj, uintptr(value))
}

func CoolBar_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetAnchorSideLeft").Call(obj)
	return ret
}

func CoolBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetAnchorSideLeft").Call(obj, value)
}

func CoolBar_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetAnchorSideTop").Call(obj)
	return ret
}

func CoolBar_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetAnchorSideTop").Call(obj, value)
}

func CoolBar_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetAnchorSideRight").Call(obj)
	return ret
}

func CoolBar_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetAnchorSideRight").Call(obj, value)
}

func CoolBar_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetAnchorSideBottom").Call(obj)
	return ret
}

func CoolBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetAnchorSideBottom").Call(obj, value)
}

func CoolBar_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetChildSizing").Call(obj)
	return ret
}

func CoolBar_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetChildSizing").Call(obj, value)
}

func CoolBar_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetBorderSpacing").Call(obj)
	return ret
}

func CoolBar_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("CoolBar_SetBorderSpacing").Call(obj, value)
}

func CoolBar_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func CoolBar_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetControls").Call(obj, uintptr(Index))
	return ret
}

func CoolBar_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func CoolBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("CoolBar_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func CoolBar_StaticClassType() TClass {
	r, _, _ := getLazyProc("CoolBar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCoolBands ---------------------------

func CoolBands_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBands_Create").Call(obj)
	return ret
}

func CoolBands_Free(obj uintptr) {
	getLazyProc("CoolBands_Free").Call(obj)
}

func CoolBands_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBands_Add").Call(obj)
	return ret
}

func CoolBands_FindBand(obj uintptr, AControl uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBands_FindBand").Call(obj, AControl)
	return ret
}

func CoolBands_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBands_Owner").Call(obj)
	return ret
}

func CoolBands_Assign(obj uintptr, Source uintptr) {
	getLazyProc("CoolBands_Assign").Call(obj, Source)
}

func CoolBands_BeginUpdate(obj uintptr) {
	getLazyProc("CoolBands_BeginUpdate").Call(obj)
}

func CoolBands_Clear(obj uintptr) {
	getLazyProc("CoolBands_Clear").Call(obj)
}

func CoolBands_Delete(obj uintptr, Index int32) {
	getLazyProc("CoolBands_Delete").Call(obj, uintptr(Index))
}

func CoolBands_EndUpdate(obj uintptr) {
	getLazyProc("CoolBands_EndUpdate").Call(obj)
}

func CoolBands_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("CoolBands_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func CoolBands_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBands_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBands_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CoolBands_Insert").Call(obj, uintptr(Index))
	return ret
}

func CoolBands_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("CoolBands_ClassType").Call(obj)
	return TClass(ret)
}

func CoolBands_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBands_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBands_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBands_InstanceSize").Call(obj)
	return int32(ret)
}

func CoolBands_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("CoolBands_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func CoolBands_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBands_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func CoolBands_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBands_GetHashCode").Call(obj)
	return int32(ret)
}

func CoolBands_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBands_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBands_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBands_GetCount").Call(obj)
	return int32(ret)
}

func CoolBands_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CoolBands_GetItems").Call(obj, uintptr(Index))
	return ret
}

func CoolBands_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("CoolBands_SetItems").Call(obj, uintptr(Index), value)
}

func CoolBands_StaticClassType() TClass {
	r, _, _ := getLazyProc("CoolBands_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCoolBand ---------------------------

func CoolBand_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBand_Create").Call(obj)
	return ret
}

func CoolBand_Free(obj uintptr) {
	getLazyProc("CoolBand_Free").Call(obj)
}

func CoolBand_Assign(obj uintptr, Source uintptr) {
	getLazyProc("CoolBand_Assign").Call(obj, Source)
}

func CoolBand_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBand_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBand_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("CoolBand_ClassType").Call(obj)
	return TClass(ret)
}

func CoolBand_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBand_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBand_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_InstanceSize").Call(obj)
	return int32(ret)
}

func CoolBand_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("CoolBand_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func CoolBand_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func CoolBand_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_GetHashCode").Call(obj)
	return int32(ret)
}

func CoolBand_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBand_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBand_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_GetHeight").Call(obj)
	return int32(ret)
}

func CoolBand_GetBitmap(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBand_GetBitmap").Call(obj)
	return ret
}

func CoolBand_SetBitmap(obj uintptr, value uintptr) {
	getLazyProc("CoolBand_SetBitmap").Call(obj, value)
}

func CoolBand_GetBorderStyle(obj uintptr) TBorderStyle {
	ret, _, _ := getLazyProc("CoolBand_GetBorderStyle").Call(obj)
	return TBorderStyle(ret)
}

func CoolBand_SetBorderStyle(obj uintptr, value TBorderStyle) {
	getLazyProc("CoolBand_SetBorderStyle").Call(obj, uintptr(value))
}

func CoolBand_GetBreak(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_GetBreak").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBand_SetBreak(obj uintptr, value bool) {
	getLazyProc("CoolBand_SetBreak").Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("CoolBand_GetColor").Call(obj)
	return TColor(ret)
}

func CoolBand_SetColor(obj uintptr, value TColor) {
	getLazyProc("CoolBand_SetColor").Call(obj, uintptr(value))
}

func CoolBand_GetControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBand_GetControl").Call(obj)
	return ret
}

func CoolBand_SetControl(obj uintptr, value uintptr) {
	getLazyProc("CoolBand_SetControl").Call(obj, value)
}

func CoolBand_GetFixedBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_GetFixedBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBand_SetFixedBackground(obj uintptr, value bool) {
	getLazyProc("CoolBand_SetFixedBackground").Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetFixedSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_GetFixedSize").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBand_SetFixedSize(obj uintptr, value bool) {
	getLazyProc("CoolBand_SetFixedSize").Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetHorizontalOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_GetHorizontalOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBand_SetHorizontalOnly(obj uintptr, value bool) {
	getLazyProc("CoolBand_SetHorizontalOnly").Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_GetImageIndex").Call(obj)
	return int32(ret)
}

func CoolBand_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("CoolBand_SetImageIndex").Call(obj, uintptr(value))
}

func CoolBand_GetMinHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_GetMinHeight").Call(obj)
	return int32(ret)
}

func CoolBand_SetMinHeight(obj uintptr, value int32) {
	getLazyProc("CoolBand_SetMinHeight").Call(obj, uintptr(value))
}

func CoolBand_GetMinWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_GetMinWidth").Call(obj)
	return int32(ret)
}

func CoolBand_SetMinWidth(obj uintptr, value int32) {
	getLazyProc("CoolBand_SetMinWidth").Call(obj, uintptr(value))
}

func CoolBand_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBand_SetParentColor(obj uintptr, value bool) {
	getLazyProc("CoolBand_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetParentBitmap(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_GetParentBitmap").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBand_SetParentBitmap(obj uintptr, value bool) {
	getLazyProc("CoolBand_SetParentBitmap").Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBand_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBand_SetText(obj uintptr, value string) {
	getLazyProc("CoolBand_SetText").Call(obj, GoStrToDStr(value))
}

func CoolBand_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("CoolBand_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func CoolBand_SetVisible(obj uintptr, value bool) {
	getLazyProc("CoolBand_SetVisible").Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_GetWidth").Call(obj)
	return int32(ret)
}

func CoolBand_SetWidth(obj uintptr, value int32) {
	getLazyProc("CoolBand_SetWidth").Call(obj, uintptr(value))
}

func CoolBand_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CoolBand_GetCollection").Call(obj)
	return ret
}

func CoolBand_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("CoolBand_SetCollection").Call(obj, value)
}

func CoolBand_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CoolBand_GetIndex").Call(obj)
	return int32(ret)
}

func CoolBand_SetIndex(obj uintptr, value int32) {
	getLazyProc("CoolBand_SetIndex").Call(obj, uintptr(value))
}

func CoolBand_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("CoolBand_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func CoolBand_SetDisplayName(obj uintptr, value string) {
	getLazyProc("CoolBand_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func CoolBand_StaticClassType() TClass {
	r, _, _ := getLazyProc("CoolBand_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCollection ---------------------------

func Collection_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Collection_Create").Call(obj)
	return ret
}

func Collection_Free(obj uintptr) {
	getLazyProc("Collection_Free").Call(obj)
}

func Collection_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Collection_Owner").Call(obj)
	return ret
}

func Collection_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Collection_Add").Call(obj)
	return ret
}

func Collection_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Collection_Assign").Call(obj, Source)
}

func Collection_BeginUpdate(obj uintptr) {
	getLazyProc("Collection_BeginUpdate").Call(obj)
}

func Collection_Clear(obj uintptr) {
	getLazyProc("Collection_Clear").Call(obj)
}

func Collection_Delete(obj uintptr, Index int32) {
	getLazyProc("Collection_Delete").Call(obj, uintptr(Index))
}

func Collection_EndUpdate(obj uintptr) {
	getLazyProc("Collection_EndUpdate").Call(obj)
}

func Collection_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("Collection_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func Collection_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Collection_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Collection_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Collection_Insert").Call(obj, uintptr(Index))
	return ret
}

func Collection_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Collection_ClassType").Call(obj)
	return TClass(ret)
}

func Collection_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Collection_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Collection_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Collection_InstanceSize").Call(obj)
	return int32(ret)
}

func Collection_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Collection_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Collection_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Collection_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Collection_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Collection_GetHashCode").Call(obj)
	return int32(ret)
}

func Collection_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Collection_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Collection_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Collection_GetCount").Call(obj)
	return int32(ret)
}

func Collection_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Collection_GetItems").Call(obj, uintptr(Index))
	return ret
}

func Collection_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("Collection_SetItems").Call(obj, uintptr(Index), value)
}

func Collection_StaticClassType() TClass {
	r, _, _ := getLazyProc("Collection_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TPrinter ---------------------------

func Printer_Create() uintptr {
	ret, _, _ := getLazyProc("Printer_Create").Call()
	return ret
}

func Printer_Free(obj uintptr) {
	getLazyProc("Printer_Free").Call(obj)
}

func Printer_Abort(obj uintptr) {
	getLazyProc("Printer_Abort").Call(obj)
}

func Printer_BeginDoc(obj uintptr) {
	getLazyProc("Printer_BeginDoc").Call(obj)
}

func Printer_EndDoc(obj uintptr) {
	getLazyProc("Printer_EndDoc").Call(obj)
}

func Printer_NewPage(obj uintptr) {
	getLazyProc("Printer_NewPage").Call(obj)
}

func Printer_Refresh(obj uintptr) {
	getLazyProc("Printer_Refresh").Call(obj)
}

func Printer_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Printer_ClassType").Call(obj)
	return TClass(ret)
}

func Printer_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Printer_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Printer_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Printer_InstanceSize").Call(obj)
	return int32(ret)
}

func Printer_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Printer_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Printer_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Printer_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Printer_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Printer_GetHashCode").Call(obj)
	return int32(ret)
}

func Printer_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Printer_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Printer_GetAborted(obj uintptr) bool {
	ret, _, _ := getLazyProc("Printer_GetAborted").Call(obj)
	return DBoolToGoBool(ret)
}

func Printer_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Printer_GetCanvas").Call(obj)
	return ret
}

func Printer_GetCopies(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Printer_GetCopies").Call(obj)
	return int32(ret)
}

func Printer_SetCopies(obj uintptr, value int32) {
	getLazyProc("Printer_SetCopies").Call(obj, uintptr(value))
}

func Printer_GetFonts(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Printer_GetFonts").Call(obj)
	return ret
}

func Printer_GetOrientation(obj uintptr) TPrinterOrientation {
	ret, _, _ := getLazyProc("Printer_GetOrientation").Call(obj)
	return TPrinterOrientation(ret)
}

func Printer_SetOrientation(obj uintptr, value TPrinterOrientation) {
	getLazyProc("Printer_SetOrientation").Call(obj, uintptr(value))
}

func Printer_GetPageHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Printer_GetPageHeight").Call(obj)
	return int32(ret)
}

func Printer_GetPageWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Printer_GetPageWidth").Call(obj)
	return int32(ret)
}

func Printer_GetPageNumber(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Printer_GetPageNumber").Call(obj)
	return int32(ret)
}

func Printer_GetPrinterIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Printer_GetPrinterIndex").Call(obj)
	return int32(ret)
}

func Printer_SetPrinterIndex(obj uintptr, value int32) {
	getLazyProc("Printer_SetPrinterIndex").Call(obj, uintptr(value))
}

func Printer_GetPrinting(obj uintptr) bool {
	ret, _, _ := getLazyProc("Printer_GetPrinting").Call(obj)
	return DBoolToGoBool(ret)
}

func Printer_GetPrinters(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Printer_GetPrinters").Call(obj)
	return ret
}

func Printer_GetTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("Printer_GetTitle").Call(obj)
	return DStrToGoStr(ret)
}

func Printer_SetTitle(obj uintptr, value string) {
	getLazyProc("Printer_SetTitle").Call(obj, GoStrToDStr(value))
}

func Printer_StaticClassType() TClass {
	r, _, _ := getLazyProc("Printer_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTaskDialog ---------------------------

func TaskDialog_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_Create").Call(obj)
	return ret
}

func TaskDialog_Free(obj uintptr) {
	getLazyProc("TaskDialog_Free").Call(obj)
}

func TaskDialog_Execute(obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialog_Execute").Call(obj)
	return DBoolToGoBool(ret)
}

func TaskDialog_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func TaskDialog_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialog_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func TaskDialog_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TaskDialog_Assign").Call(obj, Source)
}

func TaskDialog_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TaskDialog_ClassType").Call(obj)
	return TClass(ret)
}

func TaskDialog_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialog_InstanceSize").Call(obj)
	return int32(ret)
}

func TaskDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TaskDialog_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TaskDialog_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialog_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TaskDialog_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialog_GetHashCode").Call(obj)
	return int32(ret)
}

func TaskDialog_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_GetButtons(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_GetButtons").Call(obj)
	return ret
}

func TaskDialog_SetButtons(obj uintptr, value uintptr) {
	getLazyProc("TaskDialog_SetButtons").Call(obj, value)
}

func TaskDialog_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetCaption(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetCaption").Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetCommonButtons(obj uintptr) TTaskDialogCommonButtons {
	ret, _, _ := getLazyProc("TaskDialog_GetCommonButtons").Call(obj)
	return TTaskDialogCommonButtons(ret)
}

func TaskDialog_SetCommonButtons(obj uintptr, value TTaskDialogCommonButtons) {
	getLazyProc("TaskDialog_SetCommonButtons").Call(obj, uintptr(value))
}

func TaskDialog_GetDefaultButton(obj uintptr) TTaskDialogCommonButton {
	ret, _, _ := getLazyProc("TaskDialog_GetDefaultButton").Call(obj)
	return TTaskDialogCommonButton(ret)
}

func TaskDialog_SetDefaultButton(obj uintptr, value TTaskDialogCommonButton) {
	getLazyProc("TaskDialog_SetDefaultButton").Call(obj, uintptr(value))
}

func TaskDialog_GetExpandButtonCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetExpandButtonCaption").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetExpandButtonCaption(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetExpandButtonCaption").Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetExpandedText(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetExpandedText").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetExpandedText(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetExpandedText").Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetFlags(obj uintptr) TTaskDialogFlags {
	ret, _, _ := getLazyProc("TaskDialog_GetFlags").Call(obj)
	return TTaskDialogFlags(ret)
}

func TaskDialog_SetFlags(obj uintptr, value TTaskDialogFlags) {
	getLazyProc("TaskDialog_SetFlags").Call(obj, uintptr(value))
}

func TaskDialog_GetFooterIcon(obj uintptr) TTaskDialogIcon {
	ret, _, _ := getLazyProc("TaskDialog_GetFooterIcon").Call(obj)
	return TTaskDialogIcon(ret)
}

func TaskDialog_SetFooterIcon(obj uintptr, value TTaskDialogIcon) {
	getLazyProc("TaskDialog_SetFooterIcon").Call(obj, uintptr(value))
}

func TaskDialog_GetFooterText(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetFooterText").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetFooterText(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetFooterText").Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetMainIcon(obj uintptr) TTaskDialogIcon {
	ret, _, _ := getLazyProc("TaskDialog_GetMainIcon").Call(obj)
	return TTaskDialogIcon(ret)
}

func TaskDialog_SetMainIcon(obj uintptr, value TTaskDialogIcon) {
	getLazyProc("TaskDialog_SetMainIcon").Call(obj, uintptr(value))
}

func TaskDialog_GetRadioButtons(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_GetRadioButtons").Call(obj)
	return ret
}

func TaskDialog_SetRadioButtons(obj uintptr, value uintptr) {
	getLazyProc("TaskDialog_SetRadioButtons").Call(obj, value)
}

func TaskDialog_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetText(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetText").Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetTitle(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetTitle").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetTitle(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetTitle").Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetVerificationText(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetVerificationText").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetVerificationText(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetVerificationText").Call(obj, GoStrToDStr(value))
}

func TaskDialog_SetOnButtonClicked(obj uintptr, fn interface{}) {
	getLazyProc("TaskDialog_SetOnButtonClicked").Call(obj, addEventToMap(obj, fn))
}

func TaskDialog_GetButton(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_GetButton").Call(obj)
	return ret
}

func TaskDialog_SetButton(obj uintptr, value uintptr) {
	getLazyProc("TaskDialog_SetButton").Call(obj, value)
}

func TaskDialog_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("TaskDialog_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func TaskDialog_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("TaskDialog_SetModalResult").Call(obj, uintptr(value))
}

func TaskDialog_GetRadioButton(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_GetRadioButton").Call(obj)
	return ret
}

func TaskDialog_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialog_GetComponentCount").Call(obj)
	return int32(ret)
}

func TaskDialog_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialog_GetComponentIndex").Call(obj)
	return int32(ret)
}

func TaskDialog_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("TaskDialog_SetComponentIndex").Call(obj, uintptr(value))
}

func TaskDialog_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_GetOwner").Call(obj)
	return ret
}

func TaskDialog_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialog_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialog_SetName(obj uintptr, value string) {
	getLazyProc("TaskDialog_SetName").Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("TaskDialog_GetTag").Call(obj)
	return int(ret)
}

func TaskDialog_SetTag(obj uintptr, value int) {
	getLazyProc("TaskDialog_SetTag").Call(obj, uintptr(value))
}

func TaskDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("TaskDialog_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func TaskDialog_StaticClassType() TClass {
	r, _, _ := getLazyProc("TaskDialog_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTaskDialogButtons ---------------------------

func TaskDialogButtons_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtons_Add").Call(obj)
	return ret
}

func TaskDialogButtons_FindButton(obj uintptr, AModalResult TModalResult) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtons_FindButton").Call(obj, uintptr(AModalResult))
	return ret
}

func TaskDialogButtons_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtons_Owner").Call(obj)
	return ret
}

func TaskDialogButtons_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TaskDialogButtons_Assign").Call(obj, Source)
}

func TaskDialogButtons_BeginUpdate(obj uintptr) {
	getLazyProc("TaskDialogButtons_BeginUpdate").Call(obj)
}

func TaskDialogButtons_Clear(obj uintptr) {
	getLazyProc("TaskDialogButtons_Clear").Call(obj)
}

func TaskDialogButtons_Delete(obj uintptr, Index int32) {
	getLazyProc("TaskDialogButtons_Delete").Call(obj, uintptr(Index))
}

func TaskDialogButtons_EndUpdate(obj uintptr) {
	getLazyProc("TaskDialogButtons_EndUpdate").Call(obj)
}

func TaskDialogButtons_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtons_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func TaskDialogButtons_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtons_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtons_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtons_Insert").Call(obj, uintptr(Index))
	return ret
}

func TaskDialogButtons_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TaskDialogButtons_ClassType").Call(obj)
	return TClass(ret)
}

func TaskDialogButtons_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtons_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtons_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogButtons_InstanceSize").Call(obj)
	return int32(ret)
}

func TaskDialogButtons_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TaskDialogButtons_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TaskDialogButtons_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialogButtons_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TaskDialogButtons_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogButtons_GetHashCode").Call(obj)
	return int32(ret)
}

func TaskDialogButtons_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtons_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtons_GetDefaultButton(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtons_GetDefaultButton").Call(obj)
	return ret
}

func TaskDialogButtons_SetDefaultButton(obj uintptr, value uintptr) {
	getLazyProc("TaskDialogButtons_SetDefaultButton").Call(obj, value)
}

func TaskDialogButtons_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogButtons_GetCount").Call(obj)
	return int32(ret)
}

func TaskDialogButtons_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtons_GetItems").Call(obj, uintptr(Index))
	return ret
}

func TaskDialogButtons_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("TaskDialogButtons_SetItems").Call(obj, uintptr(Index), value)
}

func TaskDialogButtons_StaticClassType() TClass {
	r, _, _ := getLazyProc("TaskDialogButtons_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTaskDialogButtonItem ---------------------------

func TaskDialogButtonItem_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_Create").Call(obj)
	return ret
}

func TaskDialogButtonItem_Free(obj uintptr) {
	getLazyProc("TaskDialogButtonItem_Free").Call(obj)
}

func TaskDialogButtonItem_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtonItem_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TaskDialogButtonItem_Assign").Call(obj, Source)
}

func TaskDialogButtonItem_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_ClassType").Call(obj)
	return TClass(ret)
}

func TaskDialogButtonItem_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtonItem_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_InstanceSize").Call(obj)
	return int32(ret)
}

func TaskDialogButtonItem_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TaskDialogButtonItem_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TaskDialogButtonItem_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetHashCode").Call(obj)
	return int32(ret)
}

func TaskDialogButtonItem_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtonItem_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func TaskDialogButtonItem_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("TaskDialogButtonItem_SetModalResult").Call(obj, uintptr(value))
}

func TaskDialogButtonItem_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtonItem_SetCaption(obj uintptr, value string) {
	getLazyProc("TaskDialogButtonItem_SetCaption").Call(obj, GoStrToDStr(value))
}

func TaskDialogButtonItem_GetDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func TaskDialogButtonItem_SetDefault(obj uintptr, value bool) {
	getLazyProc("TaskDialogButtonItem_SetDefault").Call(obj, GoBoolToDBool(value))
}

func TaskDialogButtonItem_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetCollection").Call(obj)
	return ret
}

func TaskDialogButtonItem_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("TaskDialogButtonItem_SetCollection").Call(obj, value)
}

func TaskDialogButtonItem_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetIndex").Call(obj)
	return int32(ret)
}

func TaskDialogButtonItem_SetIndex(obj uintptr, value int32) {
	getLazyProc("TaskDialogButtonItem_SetIndex").Call(obj, uintptr(value))
}

func TaskDialogButtonItem_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogButtonItem_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogButtonItem_SetDisplayName(obj uintptr, value string) {
	getLazyProc("TaskDialogButtonItem_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func TaskDialogButtonItem_StaticClassType() TClass {
	r, _, _ := getLazyProc("TaskDialogButtonItem_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTaskDialogRadioButtonItem ---------------------------

func TaskDialogRadioButtonItem_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_Create").Call(obj)
	return ret
}

func TaskDialogRadioButtonItem_Free(obj uintptr) {
	getLazyProc("TaskDialogRadioButtonItem_Free").Call(obj)
}

func TaskDialogRadioButtonItem_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TaskDialogRadioButtonItem_Assign").Call(obj, Source)
}

func TaskDialogRadioButtonItem_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_ClassType").Call(obj)
	return TClass(ret)
}

func TaskDialogRadioButtonItem_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_InstanceSize").Call(obj)
	return int32(ret)
}

func TaskDialogRadioButtonItem_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TaskDialogRadioButtonItem_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TaskDialogRadioButtonItem_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetHashCode").Call(obj)
	return int32(ret)
}

func TaskDialogRadioButtonItem_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func TaskDialogRadioButtonItem_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("TaskDialogRadioButtonItem_SetModalResult").Call(obj, uintptr(value))
}

func TaskDialogRadioButtonItem_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_SetCaption(obj uintptr, value string) {
	getLazyProc("TaskDialogRadioButtonItem_SetCaption").Call(obj, GoStrToDStr(value))
}

func TaskDialogRadioButtonItem_GetDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func TaskDialogRadioButtonItem_SetDefault(obj uintptr, value bool) {
	getLazyProc("TaskDialogRadioButtonItem_SetDefault").Call(obj, GoBoolToDBool(value))
}

func TaskDialogRadioButtonItem_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetCollection").Call(obj)
	return ret
}

func TaskDialogRadioButtonItem_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("TaskDialogRadioButtonItem_SetCollection").Call(obj, value)
}

func TaskDialogRadioButtonItem_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetIndex").Call(obj)
	return int32(ret)
}

func TaskDialogRadioButtonItem_SetIndex(obj uintptr, value int32) {
	getLazyProc("TaskDialogRadioButtonItem_SetIndex").Call(obj, uintptr(value))
}

func TaskDialogRadioButtonItem_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogRadioButtonItem_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_SetDisplayName(obj uintptr, value string) {
	getLazyProc("TaskDialogRadioButtonItem_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func TaskDialogRadioButtonItem_StaticClassType() TClass {
	r, _, _ := getLazyProc("TaskDialogRadioButtonItem_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TTaskDialogBaseButtonItem ---------------------------

func TaskDialogBaseButtonItem_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_Create").Call(obj)
	return ret
}

func TaskDialogBaseButtonItem_Free(obj uintptr) {
	getLazyProc("TaskDialogBaseButtonItem_Free").Call(obj)
}

func TaskDialogBaseButtonItem_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_Assign(obj uintptr, Source uintptr) {
	getLazyProc("TaskDialogBaseButtonItem_Assign").Call(obj, Source)
}

func TaskDialogBaseButtonItem_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_ClassType").Call(obj)
	return TClass(ret)
}

func TaskDialogBaseButtonItem_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_InstanceSize").Call(obj)
	return int32(ret)
}

func TaskDialogBaseButtonItem_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func TaskDialogBaseButtonItem_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func TaskDialogBaseButtonItem_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetHashCode").Call(obj)
	return int32(ret)
}

func TaskDialogBaseButtonItem_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_GetModalResult(obj uintptr) TModalResult {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetModalResult").Call(obj)
	return TModalResult(ret)
}

func TaskDialogBaseButtonItem_SetModalResult(obj uintptr, value TModalResult) {
	getLazyProc("TaskDialogBaseButtonItem_SetModalResult").Call(obj, uintptr(value))
}

func TaskDialogBaseButtonItem_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_SetCaption(obj uintptr, value string) {
	getLazyProc("TaskDialogBaseButtonItem_SetCaption").Call(obj, GoStrToDStr(value))
}

func TaskDialogBaseButtonItem_GetDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func TaskDialogBaseButtonItem_SetDefault(obj uintptr, value bool) {
	getLazyProc("TaskDialogBaseButtonItem_SetDefault").Call(obj, GoBoolToDBool(value))
}

func TaskDialogBaseButtonItem_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetCollection").Call(obj)
	return ret
}

func TaskDialogBaseButtonItem_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("TaskDialogBaseButtonItem_SetCollection").Call(obj, value)
}

func TaskDialogBaseButtonItem_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetIndex").Call(obj)
	return int32(ret)
}

func TaskDialogBaseButtonItem_SetIndex(obj uintptr, value int32) {
	getLazyProc("TaskDialogBaseButtonItem_SetIndex").Call(obj, uintptr(value))
}

func TaskDialogBaseButtonItem_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("TaskDialogBaseButtonItem_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_SetDisplayName(obj uintptr, value string) {
	getLazyProc("TaskDialogBaseButtonItem_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func TaskDialogBaseButtonItem_StaticClassType() TClass {
	r, _, _ := getLazyProc("TaskDialogBaseButtonItem_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TComboBoxEx ---------------------------

func ComboBoxEx_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_Create").Call(obj)
	return ret
}

func ComboBoxEx_Free(obj uintptr) {
	getLazyProc("ComboBoxEx_Free").Call(obj)
}

func ComboBoxEx_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_AddItem(obj uintptr, Item string, AObject uintptr) {
	getLazyProc("ComboBoxEx_AddItem").Call(obj, GoStrToDStr(Item), AObject)
}

func ComboBoxEx_Clear(obj uintptr) {
	getLazyProc("ComboBoxEx_Clear").Call(obj)
}

func ComboBoxEx_ClearSelection(obj uintptr) {
	getLazyProc("ComboBoxEx_ClearSelection").Call(obj)
}

func ComboBoxEx_DeleteSelected(obj uintptr) {
	getLazyProc("ComboBoxEx_DeleteSelected").Call(obj)
}

func ComboBoxEx_SelectAll(obj uintptr) {
	getLazyProc("ComboBoxEx_SelectAll").Call(obj)
}

func ComboBoxEx_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ComboBoxEx_DisableAlign(obj uintptr) {
	getLazyProc("ComboBoxEx_DisableAlign").Call(obj)
}

func ComboBoxEx_EnableAlign(obj uintptr) {
	getLazyProc("ComboBoxEx_EnableAlign").Call(obj)
}

func ComboBoxEx_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ComboBoxEx_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ComboBoxEx_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ComboBoxEx_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ComboBoxEx_InsertControl").Call(obj, AControl)
}

func ComboBoxEx_Invalidate(obj uintptr) {
	getLazyProc("ComboBoxEx_Invalidate").Call(obj)
}

func ComboBoxEx_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ComboBoxEx_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ComboBoxEx_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ComboBoxEx_RemoveControl").Call(obj, AControl)
}

func ComboBoxEx_Realign(obj uintptr) {
	getLazyProc("ComboBoxEx_Realign").Call(obj)
}

func ComboBoxEx_Repaint(obj uintptr) {
	getLazyProc("ComboBoxEx_Repaint").Call(obj)
}

func ComboBoxEx_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ComboBoxEx_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ComboBoxEx_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ComboBoxEx_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ComboBoxEx_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ComboBoxEx_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ComboBoxEx_SetFocus(obj uintptr) {
	getLazyProc("ComboBoxEx_SetFocus").Call(obj)
}

func ComboBoxEx_Update(obj uintptr) {
	getLazyProc("ComboBoxEx_Update").Call(obj)
}

func ComboBoxEx_BringToFront(obj uintptr) {
	getLazyProc("ComboBoxEx_BringToFront").Call(obj)
}

func ComboBoxEx_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ComboBoxEx_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBoxEx_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ComboBoxEx_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBoxEx_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_Hide(obj uintptr) {
	getLazyProc("ComboBoxEx_Hide").Call(obj)
}

func ComboBoxEx_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ComboBoxEx_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ComboBoxEx_Refresh(obj uintptr) {
	getLazyProc("ComboBoxEx_Refresh").Call(obj)
}

func ComboBoxEx_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ComboBoxEx_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBoxEx_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ComboBoxEx_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBoxEx_SendToBack(obj uintptr) {
	getLazyProc("ComboBoxEx_SendToBack").Call(obj)
}

func ComboBoxEx_Show(obj uintptr) {
	getLazyProc("ComboBoxEx_Show").Call(obj)
}

func ComboBoxEx_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ComboBoxEx_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ComboBoxEx_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetTextLen").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ComboBoxEx_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ComboBoxEx_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ComboBoxEx_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBoxEx_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBoxEx_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ComboBoxEx_Assign").Call(obj, Source)
}

func ComboBoxEx_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ComboBoxEx_ClassType").Call(obj)
	return TClass(ret)
}

func ComboBoxEx_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBoxEx_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBoxEx_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_InstanceSize").Call(obj)
	return int32(ret)
}

func ComboBoxEx_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ComboBoxEx_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetHashCode").Call(obj)
	return int32(ret)
}

func ComboBoxEx_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBoxEx_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBoxEx_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ComboBoxEx_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ComboBoxEx_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ComboBoxEx_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ComboBoxEx_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ComboBoxEx_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ComboBoxEx_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ComboBoxEx_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ComboBoxEx_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ComboBoxEx_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ComboBoxEx_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ComboBoxEx_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ComboBoxEx_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ComboBoxEx_AnchorClient").Call(obj, uintptr(ASpace))
}

func ComboBoxEx_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ComboBoxEx_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ComboBoxEx_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ComboBoxEx_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ComboBoxEx_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ComboBoxEx_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ComboBoxEx_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ComboBoxEx_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAlign").Call(obj)
	return TAlign(ret)
}

func ComboBoxEx_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ComboBoxEx_SetAlign").Call(obj, uintptr(value))
}

func ComboBoxEx_GetAutoCompleteOptions(obj uintptr) TAutoCompleteOptions {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAutoCompleteOptions").Call(obj)
	return TAutoCompleteOptions(ret)
}

func ComboBoxEx_SetAutoCompleteOptions(obj uintptr, value TAutoCompleteOptions) {
	getLazyProc("ComboBoxEx_SetAutoCompleteOptions").Call(obj, uintptr(value))
}

func ComboBoxEx_GetItemsEx(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetItemsEx").Call(obj)
	return ret
}

func ComboBoxEx_SetItemsEx(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetItemsEx").Call(obj, value)
}

func ComboBoxEx_GetStyle(obj uintptr) TComboBoxExStyle {
	ret, _, _ := getLazyProc("ComboBoxEx_GetStyle").Call(obj)
	return TComboBoxExStyle(ret)
}

func ComboBoxEx_SetStyle(obj uintptr, value TComboBoxExStyle) {
	getLazyProc("ComboBoxEx_SetStyle").Call(obj, uintptr(value))
}

func ComboBoxEx_GetStyleEx(obj uintptr) TComboBoxExStyles {
	ret, _, _ := getLazyProc("ComboBoxEx_GetStyleEx").Call(obj)
	return TComboBoxExStyles(ret)
}

func ComboBoxEx_SetStyleEx(obj uintptr, value TComboBoxExStyles) {
	getLazyProc("ComboBoxEx_SetStyleEx").Call(obj, uintptr(value))
}

func ComboBoxEx_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAction").Call(obj)
	return ret
}

func ComboBoxEx_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetAction").Call(obj, value)
}

func ComboBoxEx_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ComboBoxEx_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ComboBoxEx_SetAnchors").Call(obj, uintptr(value))
}

func ComboBoxEx_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ComboBoxEx_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ComboBoxEx_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ComboBoxEx_SetBiDiMode").Call(obj, uintptr(value))
}

func ComboBoxEx_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ComboBoxEx_GetColor").Call(obj)
	return TColor(ret)
}

func ComboBoxEx_SetColor(obj uintptr, value TColor) {
	getLazyProc("ComboBoxEx_SetColor").Call(obj, uintptr(value))
}

func ComboBoxEx_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetConstraints").Call(obj)
	return ret
}

func ComboBoxEx_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetConstraints").Call(obj, value)
}

func ComboBoxEx_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ComboBoxEx_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ComboBoxEx_SetDragCursor").Call(obj, uintptr(value))
}

func ComboBoxEx_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ComboBoxEx_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ComboBoxEx_SetDragKind").Call(obj, uintptr(value))
}

func ComboBoxEx_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ComboBoxEx_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ComboBoxEx_SetDragMode").Call(obj, uintptr(value))
}

func ComboBoxEx_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetFont").Call(obj)
	return ret
}

func ComboBoxEx_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetFont").Call(obj, value)
}

func ComboBoxEx_GetItemHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetItemHeight").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetItemHeight(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetItemHeight").Call(obj, uintptr(value))
}

func ComboBoxEx_GetMaxLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetMaxLength").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetMaxLength(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetMaxLength").Call(obj, uintptr(value))
}

func ComboBoxEx_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentColor(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetPopupMenu").Call(obj)
	return ret
}

func ComboBoxEx_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetPopupMenu").Call(obj, value)
}

func ComboBoxEx_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ComboBoxEx_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ComboBoxEx_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ComboBoxEx_SetTabOrder").Call(obj, uintptr(value))
}

func ComboBoxEx_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetText(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBoxEx_GetText").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBoxEx_SetText(obj uintptr, value string) {
	getLazyProc("ComboBoxEx_SetText").Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetVisible(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnDropDown(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnDropDown").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnSelect(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnSelect").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("ComboBoxEx_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func ComboBoxEx_GetImages(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetImages").Call(obj)
	return ret
}

func ComboBoxEx_SetImages(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetImages").Call(obj, value)
}

func ComboBoxEx_GetDropDownCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDropDownCount").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetDropDownCount(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetDropDownCount").Call(obj, uintptr(value))
}

func ComboBoxEx_GetSelText(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBoxEx_GetSelText").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBoxEx_SetSelText(obj uintptr, value string) {
	getLazyProc("ComboBoxEx_SetSelText").Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetCanvas(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetCanvas").Call(obj)
	return ret
}

func ComboBoxEx_GetDroppedDown(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDroppedDown").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetDroppedDown(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetDroppedDown").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetItems").Call(obj)
	return ret
}

func ComboBoxEx_SetItems(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetItems").Call(obj, value)
}

func ComboBoxEx_GetSelLength(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetSelLength").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetSelLength(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetSelLength").Call(obj, uintptr(value))
}

func ComboBoxEx_GetSelStart(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetSelStart").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetSelStart(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetSelStart").Call(obj, uintptr(value))
}

func ComboBoxEx_GetItemIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetItemIndex").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetItemIndex(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetItemIndex").Call(obj, uintptr(value))
}

func ComboBoxEx_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ComboBoxEx_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ComboBoxEx_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetBrush").Call(obj)
	return ret
}

func ComboBoxEx_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetControlCount").Call(obj)
	return int32(ret)
}

func ComboBoxEx_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ComboBoxEx_GetHandle").Call(obj)
	return HWND(ret)
}

func ComboBoxEx_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ComboBoxEx_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ComboBoxEx_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ComboBoxEx_SetParentWindow").Call(obj, uintptr(value))
}

func ComboBoxEx_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ComboBoxEx_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ComboBoxEx_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBoxEx_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ComboBoxEx_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ComboBoxEx_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetClientHeight").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetClientHeight").Call(obj, uintptr(value))
}

func ComboBoxEx_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ComboBoxEx_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBoxEx_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ComboBoxEx_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ComboBoxEx_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetClientWidth").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetClientWidth").Call(obj, uintptr(value))
}

func ComboBoxEx_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ComboBoxEx_GetControlState").Call(obj)
	return TControlState(ret)
}

func ComboBoxEx_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ComboBoxEx_SetControlState").Call(obj, uintptr(value))
}

func ComboBoxEx_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ComboBoxEx_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ComboBoxEx_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ComboBoxEx_SetControlStyle").Call(obj, uintptr(value))
}

func ComboBoxEx_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboBoxEx_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ComboBoxEx_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetParent").Call(obj)
	return ret
}

func ComboBoxEx_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetParent").Call(obj, value)
}

func ComboBoxEx_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetLeft").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetLeft(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetLeft").Call(obj, uintptr(value))
}

func ComboBoxEx_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetTop").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetTop(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetTop").Call(obj, uintptr(value))
}

func ComboBoxEx_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetWidth").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetWidth(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetWidth").Call(obj, uintptr(value))
}

func ComboBoxEx_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetHeight").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetHeight(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetHeight").Call(obj, uintptr(value))
}

func ComboBoxEx_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ComboBoxEx_GetCursor").Call(obj)
	return TCursor(ret)
}

func ComboBoxEx_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ComboBoxEx_SetCursor").Call(obj, uintptr(value))
}

func ComboBoxEx_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBoxEx_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBoxEx_SetHint(obj uintptr, value string) {
	getLazyProc("ComboBoxEx_SetHint").Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetComponentCount").Call(obj)
	return int32(ret)
}

func ComboBoxEx_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboBoxEx_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ComboBoxEx_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ComboBoxEx_SetComponentIndex").Call(obj, uintptr(value))
}

func ComboBoxEx_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetOwner").Call(obj)
	return ret
}

func ComboBoxEx_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboBoxEx_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ComboBoxEx_SetName(obj uintptr, value string) {
	getLazyProc("ComboBoxEx_SetName").Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ComboBoxEx_GetTag").Call(obj)
	return int(ret)
}

func ComboBoxEx_SetTag(obj uintptr, value int) {
	getLazyProc("ComboBoxEx_SetTag").Call(obj, uintptr(value))
}

func ComboBoxEx_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAnchorSideLeft").Call(obj)
	return ret
}

func ComboBoxEx_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetAnchorSideLeft").Call(obj, value)
}

func ComboBoxEx_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAnchorSideTop").Call(obj)
	return ret
}

func ComboBoxEx_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetAnchorSideTop").Call(obj, value)
}

func ComboBoxEx_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAnchorSideRight").Call(obj)
	return ret
}

func ComboBoxEx_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetAnchorSideRight").Call(obj, value)
}

func ComboBoxEx_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAnchorSideBottom").Call(obj)
	return ret
}

func ComboBoxEx_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetAnchorSideBottom").Call(obj, value)
}

func ComboBoxEx_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetChildSizing").Call(obj)
	return ret
}

func ComboBoxEx_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetChildSizing").Call(obj, value)
}

func ComboBoxEx_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetBorderSpacing").Call(obj)
	return ret
}

func ComboBoxEx_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ComboBoxEx_SetBorderSpacing").Call(obj, value)
}

func ComboBoxEx_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ComboBoxEx_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ComboBoxEx_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ComboBoxEx_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ComboBoxEx_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ComboBoxEx_StaticClassType() TClass {
	r, _, _ := getLazyProc("ComboBoxEx_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TComboExItems ---------------------------

func ComboExItems_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboExItems_Add").Call(obj)
	return ret
}

func ComboExItems_AddItem(obj uintptr, Caption string, ImageIndex int32, SelectedImageIndex int32, OverlayImageIndex int32, Indent int32, Data uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboExItems_AddItem").Call(obj, GoStrToDStr(Caption), uintptr(ImageIndex), uintptr(SelectedImageIndex), uintptr(OverlayImageIndex), uintptr(Indent), Data)
	return ret
}

func ComboExItems_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ComboExItems_Insert").Call(obj, uintptr(Index))
	return ret
}

func ComboExItems_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboExItems_Owner").Call(obj)
	return ret
}

func ComboExItems_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ComboExItems_Assign").Call(obj, Source)
}

func ComboExItems_BeginUpdate(obj uintptr) {
	getLazyProc("ComboExItems_BeginUpdate").Call(obj)
}

func ComboExItems_Clear(obj uintptr) {
	getLazyProc("ComboExItems_Clear").Call(obj)
}

func ComboExItems_Delete(obj uintptr, Index int32) {
	getLazyProc("ComboExItems_Delete").Call(obj, uintptr(Index))
}

func ComboExItems_EndUpdate(obj uintptr) {
	getLazyProc("ComboExItems_EndUpdate").Call(obj)
}

func ComboExItems_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("ComboExItems_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func ComboExItems_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItems_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItems_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ComboExItems_ClassType").Call(obj)
	return TClass(ret)
}

func ComboExItems_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItems_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItems_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItems_InstanceSize").Call(obj)
	return int32(ret)
}

func ComboExItems_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ComboExItems_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ComboExItems_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboExItems_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ComboExItems_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItems_GetHashCode").Call(obj)
	return int32(ret)
}

func ComboExItems_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItems_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItems_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItems_GetCount").Call(obj)
	return int32(ret)
}

func ComboExItems_GetComboItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ComboExItems_GetComboItems").Call(obj, uintptr(Index))
	return ret
}

func ComboExItems_StaticClassType() TClass {
	r, _, _ := getLazyProc("ComboExItems_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TComboExItem ---------------------------

func ComboExItem_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ComboExItem_Assign").Call(obj, Source)
}

func ComboExItem_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItem_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItem_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ComboExItem_ClassType").Call(obj)
	return TClass(ret)
}

func ComboExItem_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItem_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItem_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItem_InstanceSize").Call(obj)
	return int32(ret)
}

func ComboExItem_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ComboExItem_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ComboExItem_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ComboExItem_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ComboExItem_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItem_GetHashCode").Call(obj)
	return int32(ret)
}

func ComboExItem_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItem_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItem_GetIndent(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItem_GetIndent").Call(obj)
	return int32(ret)
}

func ComboExItem_SetIndent(obj uintptr, value int32) {
	getLazyProc("ComboExItem_SetIndent").Call(obj, uintptr(value))
}

func ComboExItem_GetOverlayImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItem_GetOverlayImageIndex").Call(obj)
	return int32(ret)
}

func ComboExItem_SetOverlayImageIndex(obj uintptr, value int32) {
	getLazyProc("ComboExItem_SetOverlayImageIndex").Call(obj, uintptr(value))
}

func ComboExItem_GetData(obj uintptr) unsafe.Pointer {
	ret, _, _ := getLazyProc("ComboExItem_GetData").Call(obj)
	return unsafe.Pointer(ret)
}

func ComboExItem_SetData(obj uintptr, value unsafe.Pointer) {
	getLazyProc("ComboExItem_SetData").Call(obj, uintptr(value))
}

func ComboExItem_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItem_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItem_SetCaption(obj uintptr, value string) {
	getLazyProc("ComboExItem_SetCaption").Call(obj, GoStrToDStr(value))
}

func ComboExItem_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItem_GetImageIndex").Call(obj)
	return int32(ret)
}

func ComboExItem_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("ComboExItem_SetImageIndex").Call(obj, uintptr(value))
}

func ComboExItem_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ComboExItem_GetCollection").Call(obj)
	return ret
}

func ComboExItem_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("ComboExItem_SetCollection").Call(obj, value)
}

func ComboExItem_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ComboExItem_GetIndex").Call(obj)
	return int32(ret)
}

func ComboExItem_SetIndex(obj uintptr, value int32) {
	getLazyProc("ComboExItem_SetIndex").Call(obj, uintptr(value))
}

func ComboExItem_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("ComboExItem_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func ComboExItem_SetDisplayName(obj uintptr, value string) {
	getLazyProc("ComboExItem_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func ComboExItem_StaticClassType() TClass {
	r, _, _ := getLazyProc("ComboExItem_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TFrame ---------------------------

func Frame_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_Create").Call(obj)
	return ret
}

func Frame_Free(obj uintptr) {
	getLazyProc("Frame_Free").Call(obj)
}

func Frame_ScrollInView(obj uintptr, AControl uintptr) {
	getLazyProc("Frame_ScrollInView").Call(obj, AControl)
}

func Frame_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("Frame_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func Frame_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("Frame_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func Frame_DisableAlign(obj uintptr) {
	getLazyProc("Frame_DisableAlign").Call(obj)
}

func Frame_EnableAlign(obj uintptr) {
	getLazyProc("Frame_EnableAlign").Call(obj)
}

func Frame_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("Frame_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func Frame_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("Frame_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func Frame_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("Frame_InsertControl").Call(obj, AControl)
}

func Frame_Invalidate(obj uintptr) {
	getLazyProc("Frame_Invalidate").Call(obj)
}

func Frame_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("Frame_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func Frame_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("Frame_RemoveControl").Call(obj, AControl)
}

func Frame_Realign(obj uintptr) {
	getLazyProc("Frame_Realign").Call(obj)
}

func Frame_Repaint(obj uintptr) {
	getLazyProc("Frame_Repaint").Call(obj)
}

func Frame_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("Frame_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func Frame_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("Frame_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func Frame_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("Frame_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func Frame_SetFocus(obj uintptr) {
	getLazyProc("Frame_SetFocus").Call(obj)
}

func Frame_Update(obj uintptr) {
	getLazyProc("Frame_Update").Call(obj)
}

func Frame_BringToFront(obj uintptr) {
	getLazyProc("Frame_BringToFront").Call(obj)
}

func Frame_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Frame_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Frame_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Frame_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Frame_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_Hide(obj uintptr) {
	getLazyProc("Frame_Hide").Call(obj)
}

func Frame_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("Frame_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func Frame_Refresh(obj uintptr) {
	getLazyProc("Frame_Refresh").Call(obj)
}

func Frame_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("Frame_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Frame_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("Frame_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Frame_SendToBack(obj uintptr) {
	getLazyProc("Frame_SendToBack").Call(obj)
}

func Frame_Show(obj uintptr) {
	getLazyProc("Frame_Show").Call(obj)
}

func Frame_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("Frame_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func Frame_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetTextLen").Call(obj)
	return int32(ret)
}

func Frame_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("Frame_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func Frame_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("Frame_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func Frame_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("Frame_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func Frame_Assign(obj uintptr, Source uintptr) {
	getLazyProc("Frame_Assign").Call(obj, Source)
}

func Frame_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("Frame_ClassType").Call(obj)
	return TClass(ret)
}

func Frame_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("Frame_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func Frame_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_InstanceSize").Call(obj)
	return int32(ret)
}

func Frame_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("Frame_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func Frame_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func Frame_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetHashCode").Call(obj)
	return int32(ret)
}

func Frame_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("Frame_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func Frame_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Frame_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Frame_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("Frame_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func Frame_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Frame_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func Frame_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("Frame_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func Frame_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("Frame_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func Frame_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("Frame_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func Frame_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("Frame_AnchorClient").Call(obj, uintptr(ASpace))
}

func Frame_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("Frame_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func Frame_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("Frame_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func Frame_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("Frame_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func Frame_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("Frame_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func Frame_GetDesignTimePPI(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetDesignTimePPI").Call(obj)
	return int32(ret)
}

func Frame_SetDesignTimePPI(obj uintptr, value int32) {
	getLazyProc("Frame_SetDesignTimePPI").Call(obj, uintptr(value))
}

func Frame_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("Frame_GetAlign").Call(obj)
	return TAlign(ret)
}

func Frame_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("Frame_SetAlign").Call(obj, uintptr(value))
}

func Frame_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("Frame_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func Frame_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("Frame_SetAnchors").Call(obj, uintptr(value))
}

func Frame_GetAutoScroll(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetAutoScroll").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetAutoScroll(obj uintptr, value bool) {
	getLazyProc("Frame_SetAutoScroll").Call(obj, GoBoolToDBool(value))
}

func Frame_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("Frame_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func Frame_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("Frame_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func Frame_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("Frame_SetBiDiMode").Call(obj, uintptr(value))
}

func Frame_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetConstraints").Call(obj)
	return ret
}

func Frame_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetConstraints").Call(obj, value)
}

func Frame_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetDockSite(obj uintptr, value bool) {
	getLazyProc("Frame_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func Frame_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Frame_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Frame_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Frame_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func Frame_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("Frame_SetDragCursor").Call(obj, uintptr(value))
}

func Frame_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("Frame_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func Frame_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("Frame_SetDragKind").Call(obj, uintptr(value))
}

func Frame_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("Frame_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func Frame_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("Frame_SetDragMode").Call(obj, uintptr(value))
}

func Frame_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetEnabled(obj uintptr, value bool) {
	getLazyProc("Frame_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func Frame_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("Frame_GetColor").Call(obj)
	return TColor(ret)
}

func Frame_SetColor(obj uintptr, value TColor) {
	getLazyProc("Frame_SetColor").Call(obj, uintptr(value))
}

func Frame_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetFont").Call(obj)
	return ret
}

func Frame_SetFont(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetFont").Call(obj, value)
}

func Frame_GetParentBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetParentBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetParentBackground(obj uintptr, value bool) {
	getLazyProc("Frame_SetParentBackground").Call(obj, GoBoolToDBool(value))
}

func Frame_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetParentColor(obj uintptr, value bool) {
	getLazyProc("Frame_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func Frame_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("Frame_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func Frame_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetParentFont(obj uintptr, value bool) {
	getLazyProc("Frame_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func Frame_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("Frame_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func Frame_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetPopupMenu").Call(obj)
	return ret
}

func Frame_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetPopupMenu").Call(obj, value)
}

func Frame_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetShowHint(obj uintptr, value bool) {
	getLazyProc("Frame_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func Frame_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("Frame_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func Frame_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("Frame_SetTabOrder").Call(obj, uintptr(value))
}

func Frame_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetTabStop(obj uintptr, value bool) {
	getLazyProc("Frame_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func Frame_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetVisible(obj uintptr, value bool) {
	getLazyProc("Frame_SetVisible").Call(obj, GoBoolToDBool(value))
}

func Frame_SetOnAlignPosition(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnAlignPosition").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnConstrainedResize(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnConstrainedResize").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnContextPopup(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnContextPopup").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnDockDrop(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnDockDrop").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnEndDock(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnEndDock").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnGetSiteInfo").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseWheel(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseWheel").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnStartDock(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnStartDock").Call(obj, addEventToMap(obj, fn))
}

func Frame_SetOnUnDock(obj uintptr, fn interface{}) {
	getLazyProc("Frame_SetOnUnDock").Call(obj, addEventToMap(obj, fn))
}

func Frame_GetHorzScrollBar(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetHorzScrollBar").Call(obj)
	return ret
}

func Frame_SetHorzScrollBar(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetHorzScrollBar").Call(obj, value)
}

func Frame_GetVertScrollBar(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetVertScrollBar").Call(obj)
	return ret
}

func Frame_SetVertScrollBar(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetVertScrollBar").Call(obj, value)
}

func Frame_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetDockClientCount").Call(obj)
	return int32(ret)
}

func Frame_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func Frame_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetBrush").Call(obj)
	return ret
}

func Frame_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetControlCount").Call(obj)
	return int32(ret)
}

func Frame_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Frame_GetHandle").Call(obj)
	return HWND(ret)
}

func Frame_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("Frame_GetParentWindow").Call(obj)
	return HWND(ret)
}

func Frame_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("Frame_SetParentWindow").Call(obj, uintptr(value))
}

func Frame_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("Frame_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func Frame_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetAction").Call(obj)
	return ret
}

func Frame_SetAction(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetAction").Call(obj, value)
}

func Frame_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Frame_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Frame_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("Frame_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Frame_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetClientHeight").Call(obj)
	return int32(ret)
}

func Frame_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("Frame_SetClientHeight").Call(obj, uintptr(value))
}

func Frame_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("Frame_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Frame_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("Frame_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func Frame_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetClientWidth").Call(obj)
	return int32(ret)
}

func Frame_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("Frame_SetClientWidth").Call(obj, uintptr(value))
}

func Frame_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("Frame_GetControlState").Call(obj)
	return TControlState(ret)
}

func Frame_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("Frame_SetControlState").Call(obj, uintptr(value))
}

func Frame_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("Frame_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func Frame_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("Frame_SetControlStyle").Call(obj, uintptr(value))
}

func Frame_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("Frame_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func Frame_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetParent").Call(obj)
	return ret
}

func Frame_SetParent(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetParent").Call(obj, value)
}

func Frame_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetLeft").Call(obj)
	return int32(ret)
}

func Frame_SetLeft(obj uintptr, value int32) {
	getLazyProc("Frame_SetLeft").Call(obj, uintptr(value))
}

func Frame_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetTop").Call(obj)
	return int32(ret)
}

func Frame_SetTop(obj uintptr, value int32) {
	getLazyProc("Frame_SetTop").Call(obj, uintptr(value))
}

func Frame_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetWidth").Call(obj)
	return int32(ret)
}

func Frame_SetWidth(obj uintptr, value int32) {
	getLazyProc("Frame_SetWidth").Call(obj, uintptr(value))
}

func Frame_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetHeight").Call(obj)
	return int32(ret)
}

func Frame_SetHeight(obj uintptr, value int32) {
	getLazyProc("Frame_SetHeight").Call(obj, uintptr(value))
}

func Frame_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("Frame_GetCursor").Call(obj)
	return TCursor(ret)
}

func Frame_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("Frame_SetCursor").Call(obj, uintptr(value))
}

func Frame_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("Frame_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func Frame_SetHint(obj uintptr, value string) {
	getLazyProc("Frame_SetHint").Call(obj, GoStrToDStr(value))
}

func Frame_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetComponentCount").Call(obj)
	return int32(ret)
}

func Frame_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("Frame_GetComponentIndex").Call(obj)
	return int32(ret)
}

func Frame_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("Frame_SetComponentIndex").Call(obj, uintptr(value))
}

func Frame_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetOwner").Call(obj)
	return ret
}

func Frame_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("Frame_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func Frame_SetName(obj uintptr, value string) {
	getLazyProc("Frame_SetName").Call(obj, GoStrToDStr(value))
}

func Frame_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("Frame_GetTag").Call(obj)
	return int(ret)
}

func Frame_SetTag(obj uintptr, value int) {
	getLazyProc("Frame_SetTag").Call(obj, uintptr(value))
}

func Frame_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetAnchorSideLeft").Call(obj)
	return ret
}

func Frame_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetAnchorSideLeft").Call(obj, value)
}

func Frame_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetAnchorSideTop").Call(obj)
	return ret
}

func Frame_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetAnchorSideTop").Call(obj, value)
}

func Frame_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetAnchorSideRight").Call(obj)
	return ret
}

func Frame_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetAnchorSideRight").Call(obj, value)
}

func Frame_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetAnchorSideBottom").Call(obj)
	return ret
}

func Frame_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetAnchorSideBottom").Call(obj, value)
}

func Frame_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetChildSizing").Call(obj)
	return ret
}

func Frame_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetChildSizing").Call(obj, value)
}

func Frame_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("Frame_GetBorderSpacing").Call(obj)
	return ret
}

func Frame_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("Frame_SetBorderSpacing").Call(obj, value)
}

func Frame_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Frame_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func Frame_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("Frame_GetControls").Call(obj, uintptr(Index))
	return ret
}

func Frame_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("Frame_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func Frame_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("Frame_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func Frame_StaticClassType() TClass {
	r, _, _ := getLazyProc("Frame_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TControlScrollBar ---------------------------

func ControlScrollBar_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ControlScrollBar_Assign").Call(obj, Source)
}

func ControlScrollBar_IsScrollBarVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ControlScrollBar_IsScrollBarVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ControlScrollBar_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlScrollBar_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ControlScrollBar_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ControlScrollBar_ClassType").Call(obj)
	return TClass(ret)
}

func ControlScrollBar_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlScrollBar_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ControlScrollBar_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlScrollBar_InstanceSize").Call(obj)
	return int32(ret)
}

func ControlScrollBar_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ControlScrollBar_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ControlScrollBar_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ControlScrollBar_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ControlScrollBar_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlScrollBar_GetHashCode").Call(obj)
	return int32(ret)
}

func ControlScrollBar_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlScrollBar_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ControlScrollBar_GetKind(obj uintptr) TScrollBarKind {
	ret, _, _ := getLazyProc("ControlScrollBar_GetKind").Call(obj)
	return TScrollBarKind(ret)
}

func ControlScrollBar_GetScrollPos(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlScrollBar_GetScrollPos").Call(obj)
	return int32(ret)
}

func ControlScrollBar_GetIncrement(obj uintptr) TScrollBarInc {
	ret, _, _ := getLazyProc("ControlScrollBar_GetIncrement").Call(obj)
	return TScrollBarInc(ret)
}

func ControlScrollBar_SetIncrement(obj uintptr, value TScrollBarInc) {
	getLazyProc("ControlScrollBar_SetIncrement").Call(obj, uintptr(value))
}

func ControlScrollBar_GetPosition(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlScrollBar_GetPosition").Call(obj)
	return int32(ret)
}

func ControlScrollBar_SetPosition(obj uintptr, value int32) {
	getLazyProc("ControlScrollBar_SetPosition").Call(obj, uintptr(value))
}

func ControlScrollBar_GetRange(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlScrollBar_GetRange").Call(obj)
	return int32(ret)
}

func ControlScrollBar_SetRange(obj uintptr, value int32) {
	getLazyProc("ControlScrollBar_SetRange").Call(obj, uintptr(value))
}

func ControlScrollBar_GetSmooth(obj uintptr) bool {
	ret, _, _ := getLazyProc("ControlScrollBar_GetSmooth").Call(obj)
	return DBoolToGoBool(ret)
}

func ControlScrollBar_SetSmooth(obj uintptr, value bool) {
	getLazyProc("ControlScrollBar_SetSmooth").Call(obj, GoBoolToDBool(value))
}

func ControlScrollBar_GetTracking(obj uintptr) bool {
	ret, _, _ := getLazyProc("ControlScrollBar_GetTracking").Call(obj)
	return DBoolToGoBool(ret)
}

func ControlScrollBar_SetTracking(obj uintptr, value bool) {
	getLazyProc("ControlScrollBar_SetTracking").Call(obj, GoBoolToDBool(value))
}

func ControlScrollBar_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ControlScrollBar_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ControlScrollBar_SetVisible(obj uintptr, value bool) {
	getLazyProc("ControlScrollBar_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ControlScrollBar_StaticClassType() TClass {
	r, _, _ := getLazyProc("ControlScrollBar_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TSizeConstraints ---------------------------

func SizeConstraints_Assign(obj uintptr, Source uintptr) {
	getLazyProc("SizeConstraints_Assign").Call(obj, Source)
}

func SizeConstraints_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("SizeConstraints_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func SizeConstraints_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("SizeConstraints_ClassType").Call(obj)
	return TClass(ret)
}

func SizeConstraints_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("SizeConstraints_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func SizeConstraints_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SizeConstraints_InstanceSize").Call(obj)
	return int32(ret)
}

func SizeConstraints_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("SizeConstraints_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func SizeConstraints_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("SizeConstraints_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func SizeConstraints_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("SizeConstraints_GetHashCode").Call(obj)
	return int32(ret)
}

func SizeConstraints_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("SizeConstraints_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func SizeConstraints_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("SizeConstraints_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func SizeConstraints_GetMaxHeight(obj uintptr) TConstraintSize {
	ret, _, _ := getLazyProc("SizeConstraints_GetMaxHeight").Call(obj)
	return TConstraintSize(ret)
}

func SizeConstraints_SetMaxHeight(obj uintptr, value TConstraintSize) {
	getLazyProc("SizeConstraints_SetMaxHeight").Call(obj, uintptr(value))
}

func SizeConstraints_GetMaxWidth(obj uintptr) TConstraintSize {
	ret, _, _ := getLazyProc("SizeConstraints_GetMaxWidth").Call(obj)
	return TConstraintSize(ret)
}

func SizeConstraints_SetMaxWidth(obj uintptr, value TConstraintSize) {
	getLazyProc("SizeConstraints_SetMaxWidth").Call(obj, uintptr(value))
}

func SizeConstraints_GetMinHeight(obj uintptr) TConstraintSize {
	ret, _, _ := getLazyProc("SizeConstraints_GetMinHeight").Call(obj)
	return TConstraintSize(ret)
}

func SizeConstraints_SetMinHeight(obj uintptr, value TConstraintSize) {
	getLazyProc("SizeConstraints_SetMinHeight").Call(obj, uintptr(value))
}

func SizeConstraints_GetMinWidth(obj uintptr) TConstraintSize {
	ret, _, _ := getLazyProc("SizeConstraints_GetMinWidth").Call(obj)
	return TConstraintSize(ret)
}

func SizeConstraints_SetMinWidth(obj uintptr, value TConstraintSize) {
	getLazyProc("SizeConstraints_SetMinWidth").Call(obj, uintptr(value))
}

func SizeConstraints_StaticClassType() TClass {
	r, _, _ := getLazyProc("SizeConstraints_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TXButton ---------------------------

func XButton_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_Create").Call(obj)
	return ret
}

func XButton_Free(obj uintptr) {
	getLazyProc("XButton_Free").Call(obj)
}

func XButton_BringToFront(obj uintptr) {
	getLazyProc("XButton_BringToFront").Call(obj)
}

func XButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("XButton_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func XButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("XButton_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func XButton_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_Hide(obj uintptr) {
	getLazyProc("XButton_Hide").Call(obj)
}

func XButton_Invalidate(obj uintptr) {
	getLazyProc("XButton_Invalidate").Call(obj)
}

func XButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("XButton_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func XButton_Refresh(obj uintptr) {
	getLazyProc("XButton_Refresh").Call(obj)
}

func XButton_Repaint(obj uintptr) {
	getLazyProc("XButton_Repaint").Call(obj)
}

func XButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("XButton_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func XButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("XButton_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func XButton_SendToBack(obj uintptr) {
	getLazyProc("XButton_SendToBack").Call(obj)
}

func XButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("XButton_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func XButton_Show(obj uintptr) {
	getLazyProc("XButton_Show").Call(obj)
}

func XButton_Update(obj uintptr) {
	getLazyProc("XButton_Update").Call(obj)
}

func XButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("XButton_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func XButton_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetTextLen").Call(obj)
	return int32(ret)
}

func XButton_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("XButton_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func XButton_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("XButton_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func XButton_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("XButton_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func XButton_Assign(obj uintptr, Source uintptr) {
	getLazyProc("XButton_Assign").Call(obj, Source)
}

func XButton_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("XButton_ClassType").Call(obj)
	return TClass(ret)
}

func XButton_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("XButton_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func XButton_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_InstanceSize").Call(obj)
	return int32(ret)
}

func XButton_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("XButton_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func XButton_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func XButton_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetHashCode").Call(obj)
	return int32(ret)
}

func XButton_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("XButton_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func XButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("XButton_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func XButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("XButton_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func XButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("XButton_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func XButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("XButton_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func XButton_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("XButton_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func XButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("XButton_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func XButton_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("XButton_AnchorClient").Call(obj, uintptr(ASpace))
}

func XButton_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("XButton_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func XButton_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("XButton_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func XButton_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("XButton_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func XButton_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("XButton_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func XButton_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("XButton_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func XButton_SetCaption(obj uintptr, value string) {
	getLazyProc("XButton_SetCaption").Call(obj, GoStrToDStr(value))
}

func XButton_GetShowCaption(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_GetShowCaption").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_SetShowCaption(obj uintptr, value bool) {
	getLazyProc("XButton_SetShowCaption").Call(obj, GoBoolToDBool(value))
}

func XButton_GetBackColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("XButton_GetBackColor").Call(obj)
	return TColor(ret)
}

func XButton_SetBackColor(obj uintptr, value TColor) {
	getLazyProc("XButton_SetBackColor").Call(obj, uintptr(value))
}

func XButton_GetHoverColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("XButton_GetHoverColor").Call(obj)
	return TColor(ret)
}

func XButton_SetHoverColor(obj uintptr, value TColor) {
	getLazyProc("XButton_SetHoverColor").Call(obj, uintptr(value))
}

func XButton_GetDownColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("XButton_GetDownColor").Call(obj)
	return TColor(ret)
}

func XButton_SetDownColor(obj uintptr, value TColor) {
	getLazyProc("XButton_SetDownColor").Call(obj, uintptr(value))
}

func XButton_GetBorderWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetBorderWidth").Call(obj)
	return int32(ret)
}

func XButton_SetBorderWidth(obj uintptr, value int32) {
	getLazyProc("XButton_SetBorderWidth").Call(obj, uintptr(value))
}

func XButton_GetBorderColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("XButton_GetBorderColor").Call(obj)
	return TColor(ret)
}

func XButton_SetBorderColor(obj uintptr, value TColor) {
	getLazyProc("XButton_SetBorderColor").Call(obj, uintptr(value))
}

func XButton_GetPicture(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetPicture").Call(obj)
	return ret
}

func XButton_SetPicture(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetPicture").Call(obj, value)
}

func XButton_GetDrawMode(obj uintptr) TDrawImageMode {
	ret, _, _ := getLazyProc("XButton_GetDrawMode").Call(obj)
	return TDrawImageMode(ret)
}

func XButton_SetDrawMode(obj uintptr, value TDrawImageMode) {
	getLazyProc("XButton_SetDrawMode").Call(obj, uintptr(value))
}

func XButton_GetNormalFontColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("XButton_GetNormalFontColor").Call(obj)
	return TColor(ret)
}

func XButton_SetNormalFontColor(obj uintptr, value TColor) {
	getLazyProc("XButton_SetNormalFontColor").Call(obj, uintptr(value))
}

func XButton_GetDownFontColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("XButton_GetDownFontColor").Call(obj)
	return TColor(ret)
}

func XButton_SetDownFontColor(obj uintptr, value TColor) {
	getLazyProc("XButton_SetDownFontColor").Call(obj, uintptr(value))
}

func XButton_GetHoverFontColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("XButton_GetHoverFontColor").Call(obj)
	return TColor(ret)
}

func XButton_SetHoverFontColor(obj uintptr, value TColor) {
	getLazyProc("XButton_SetHoverFontColor").Call(obj, uintptr(value))
}

func XButton_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetAction").Call(obj)
	return ret
}

func XButton_SetAction(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetAction").Call(obj, value)
}

func XButton_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("XButton_GetAlign").Call(obj)
	return TAlign(ret)
}

func XButton_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("XButton_SetAlign").Call(obj, uintptr(value))
}

func XButton_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("XButton_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func XButton_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("XButton_SetAnchors").Call(obj, uintptr(value))
}

func XButton_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("XButton_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func XButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("XButton_SetBiDiMode").Call(obj, uintptr(value))
}

func XButton_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetConstraints").Call(obj)
	return ret
}

func XButton_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetConstraints").Call(obj, value)
}

func XButton_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_SetEnabled(obj uintptr, value bool) {
	getLazyProc("XButton_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func XButton_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetFont").Call(obj)
	return ret
}

func XButton_SetFont(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetFont").Call(obj, value)
}

func XButton_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_SetParentFont(obj uintptr, value bool) {
	getLazyProc("XButton_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func XButton_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("XButton_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func XButton_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetPopupMenu").Call(obj)
	return ret
}

func XButton_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetPopupMenu").Call(obj, value)
}

func XButton_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_SetShowHint(obj uintptr, value bool) {
	getLazyProc("XButton_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func XButton_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_SetVisible(obj uintptr, value bool) {
	getLazyProc("XButton_SetVisible").Call(obj, GoBoolToDBool(value))
}

func XButton_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("XButton_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func XButton_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("XButton_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func XButton_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("XButton_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func XButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("XButton_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func XButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("XButton_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func XButton_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("XButton_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func XButton_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("XButton_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func XButton_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("XButton_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func XButton_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("XButton_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func XButton_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetClientHeight").Call(obj)
	return int32(ret)
}

func XButton_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("XButton_SetClientHeight").Call(obj, uintptr(value))
}

func XButton_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("XButton_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func XButton_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("XButton_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func XButton_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetClientWidth").Call(obj)
	return int32(ret)
}

func XButton_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("XButton_SetClientWidth").Call(obj, uintptr(value))
}

func XButton_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("XButton_GetControlState").Call(obj)
	return TControlState(ret)
}

func XButton_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("XButton_SetControlState").Call(obj, uintptr(value))
}

func XButton_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("XButton_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func XButton_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("XButton_SetControlStyle").Call(obj, uintptr(value))
}

func XButton_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("XButton_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func XButton_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetParent").Call(obj)
	return ret
}

func XButton_SetParent(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetParent").Call(obj, value)
}

func XButton_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetLeft").Call(obj)
	return int32(ret)
}

func XButton_SetLeft(obj uintptr, value int32) {
	getLazyProc("XButton_SetLeft").Call(obj, uintptr(value))
}

func XButton_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetTop").Call(obj)
	return int32(ret)
}

func XButton_SetTop(obj uintptr, value int32) {
	getLazyProc("XButton_SetTop").Call(obj, uintptr(value))
}

func XButton_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetWidth").Call(obj)
	return int32(ret)
}

func XButton_SetWidth(obj uintptr, value int32) {
	getLazyProc("XButton_SetWidth").Call(obj, uintptr(value))
}

func XButton_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetHeight").Call(obj)
	return int32(ret)
}

func XButton_SetHeight(obj uintptr, value int32) {
	getLazyProc("XButton_SetHeight").Call(obj, uintptr(value))
}

func XButton_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("XButton_GetCursor").Call(obj)
	return TCursor(ret)
}

func XButton_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("XButton_SetCursor").Call(obj, uintptr(value))
}

func XButton_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("XButton_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func XButton_SetHint(obj uintptr, value string) {
	getLazyProc("XButton_SetHint").Call(obj, GoStrToDStr(value))
}

func XButton_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetComponentCount").Call(obj)
	return int32(ret)
}

func XButton_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("XButton_GetComponentIndex").Call(obj)
	return int32(ret)
}

func XButton_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("XButton_SetComponentIndex").Call(obj, uintptr(value))
}

func XButton_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetOwner").Call(obj)
	return ret
}

func XButton_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("XButton_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func XButton_SetName(obj uintptr, value string) {
	getLazyProc("XButton_SetName").Call(obj, GoStrToDStr(value))
}

func XButton_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("XButton_GetTag").Call(obj)
	return int(ret)
}

func XButton_SetTag(obj uintptr, value int) {
	getLazyProc("XButton_SetTag").Call(obj, uintptr(value))
}

func XButton_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetAnchorSideLeft").Call(obj)
	return ret
}

func XButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetAnchorSideLeft").Call(obj, value)
}

func XButton_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetAnchorSideTop").Call(obj)
	return ret
}

func XButton_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetAnchorSideTop").Call(obj, value)
}

func XButton_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetAnchorSideRight").Call(obj)
	return ret
}

func XButton_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetAnchorSideRight").Call(obj, value)
}

func XButton_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetAnchorSideBottom").Call(obj)
	return ret
}

func XButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetAnchorSideBottom").Call(obj, value)
}

func XButton_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("XButton_GetBorderSpacing").Call(obj)
	return ret
}

func XButton_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("XButton_SetBorderSpacing").Call(obj, value)
}

func XButton_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("XButton_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func XButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("XButton_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func XButton_StaticClassType() TClass {
	r, _, _ := getLazyProc("XButton_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TAnchorSide ---------------------------

func AnchorSide_Assign(obj uintptr, Source uintptr) {
	getLazyProc("AnchorSide_Assign").Call(obj, Source)
}

func AnchorSide_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("AnchorSide_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func AnchorSide_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("AnchorSide_ClassType").Call(obj)
	return TClass(ret)
}

func AnchorSide_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("AnchorSide_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func AnchorSide_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("AnchorSide_InstanceSize").Call(obj)
	return int32(ret)
}

func AnchorSide_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("AnchorSide_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func AnchorSide_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("AnchorSide_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func AnchorSide_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("AnchorSide_GetHashCode").Call(obj)
	return int32(ret)
}

func AnchorSide_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("AnchorSide_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func AnchorSide_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("AnchorSide_GetOwner").Call(obj)
	return ret
}

func AnchorSide_GetKind(obj uintptr) TAnchorKind {
	ret, _, _ := getLazyProc("AnchorSide_GetKind").Call(obj)
	return TAnchorKind(ret)
}

func AnchorSide_GetControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("AnchorSide_GetControl").Call(obj)
	return ret
}

func AnchorSide_SetControl(obj uintptr, value uintptr) {
	getLazyProc("AnchorSide_SetControl").Call(obj, value)
}

func AnchorSide_GetSide(obj uintptr) TAnchorSideReference {
	ret, _, _ := getLazyProc("AnchorSide_GetSide").Call(obj)
	return TAnchorSideReference(ret)
}

func AnchorSide_SetSide(obj uintptr, value TAnchorSideReference) {
	getLazyProc("AnchorSide_SetSide").Call(obj, uintptr(value))
}

func AnchorSide_StaticClassType() TClass {
	r, _, _ := getLazyProc("AnchorSide_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TControlBorderSpacing ---------------------------

func ControlBorderSpacing_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ControlBorderSpacing_Assign").Call(obj, Source)
}

func ControlBorderSpacing_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ControlBorderSpacing_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ControlBorderSpacing_ClassType").Call(obj)
	return TClass(ret)
}

func ControlBorderSpacing_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlBorderSpacing_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ControlBorderSpacing_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_InstanceSize").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ControlBorderSpacing_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ControlBorderSpacing_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ControlBorderSpacing_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ControlBorderSpacing_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetHashCode").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlBorderSpacing_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ControlBorderSpacing_GetControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetControl").Call(obj)
	return ret
}

func ControlBorderSpacing_GetAroundLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetAroundLeft").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetAroundTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetAroundTop").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetAroundRight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetAroundRight").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetAroundBottom(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetAroundBottom").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetControlLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetControlLeft").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetControlTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetControlTop").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetControlWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetControlWidth").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetControlHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetControlHeight").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetControlRight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetControlRight").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_GetControlBottom(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetControlBottom").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ControlBorderSpacing_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ControlBorderSpacing_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetLeft").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_SetLeft(obj uintptr, value int32) {
	getLazyProc("ControlBorderSpacing_SetLeft").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetTop").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_SetTop(obj uintptr, value int32) {
	getLazyProc("ControlBorderSpacing_SetTop").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetRight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetRight").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_SetRight(obj uintptr, value int32) {
	getLazyProc("ControlBorderSpacing_SetRight").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetBottom(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetBottom").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_SetBottom(obj uintptr, value int32) {
	getLazyProc("ControlBorderSpacing_SetBottom").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetAround(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetAround").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_SetAround(obj uintptr, value int32) {
	getLazyProc("ControlBorderSpacing_SetAround").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetInnerBorder(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetInnerBorder").Call(obj)
	return int32(ret)
}

func ControlBorderSpacing_SetInnerBorder(obj uintptr, value int32) {
	getLazyProc("ControlBorderSpacing_SetInnerBorder").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetCellAlignHorizontal(obj uintptr) TControlCellAlign {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetCellAlignHorizontal").Call(obj)
	return TControlCellAlign(ret)
}

func ControlBorderSpacing_SetCellAlignHorizontal(obj uintptr, value TControlCellAlign) {
	getLazyProc("ControlBorderSpacing_SetCellAlignHorizontal").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetCellAlignVertical(obj uintptr) TControlCellAlign {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetCellAlignVertical").Call(obj)
	return TControlCellAlign(ret)
}

func ControlBorderSpacing_SetCellAlignVertical(obj uintptr, value TControlCellAlign) {
	getLazyProc("ControlBorderSpacing_SetCellAlignVertical").Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetSpace(obj uintptr, Kind TAnchorKind) int32 {
	ret, _, _ := getLazyProc("ControlBorderSpacing_GetSpace").Call(obj, uintptr(Kind))
	return int32(ret)
}

func ControlBorderSpacing_SetSpace(obj uintptr, Kind TAnchorKind, value int32) {
	getLazyProc("ControlBorderSpacing_SetSpace").Call(obj, uintptr(Kind), uintptr(value))
}

func ControlBorderSpacing_StaticClassType() TClass {
	r, _, _ := getLazyProc("ControlBorderSpacing_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TControlChildSizing ---------------------------

func ControlChildSizing_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ControlChildSizing_Assign").Call(obj, Source)
}

func ControlChildSizing_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlChildSizing_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ControlChildSizing_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ControlChildSizing_ClassType").Call(obj)
	return TClass(ret)
}

func ControlChildSizing_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlChildSizing_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ControlChildSizing_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlChildSizing_InstanceSize").Call(obj)
	return int32(ret)
}

func ControlChildSizing_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ControlChildSizing_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ControlChildSizing_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ControlChildSizing_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ControlChildSizing_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlChildSizing_GetHashCode").Call(obj)
	return int32(ret)
}

func ControlChildSizing_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ControlChildSizing_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ControlChildSizing_GetControl(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ControlChildSizing_GetControl").Call(obj)
	return ret
}

func ControlChildSizing_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ControlChildSizing_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ControlChildSizing_GetLeftRightSpacing(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlChildSizing_GetLeftRightSpacing").Call(obj)
	return int32(ret)
}

func ControlChildSizing_SetLeftRightSpacing(obj uintptr, value int32) {
	getLazyProc("ControlChildSizing_SetLeftRightSpacing").Call(obj, uintptr(value))
}

func ControlChildSizing_GetTopBottomSpacing(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlChildSizing_GetTopBottomSpacing").Call(obj)
	return int32(ret)
}

func ControlChildSizing_SetTopBottomSpacing(obj uintptr, value int32) {
	getLazyProc("ControlChildSizing_SetTopBottomSpacing").Call(obj, uintptr(value))
}

func ControlChildSizing_GetHorizontalSpacing(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlChildSizing_GetHorizontalSpacing").Call(obj)
	return int32(ret)
}

func ControlChildSizing_SetHorizontalSpacing(obj uintptr, value int32) {
	getLazyProc("ControlChildSizing_SetHorizontalSpacing").Call(obj, uintptr(value))
}

func ControlChildSizing_GetVerticalSpacing(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlChildSizing_GetVerticalSpacing").Call(obj)
	return int32(ret)
}

func ControlChildSizing_SetVerticalSpacing(obj uintptr, value int32) {
	getLazyProc("ControlChildSizing_SetVerticalSpacing").Call(obj, uintptr(value))
}

func ControlChildSizing_GetEnlargeHorizontal(obj uintptr) TChildControlResizeStyle {
	ret, _, _ := getLazyProc("ControlChildSizing_GetEnlargeHorizontal").Call(obj)
	return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetEnlargeHorizontal(obj uintptr, value TChildControlResizeStyle) {
	getLazyProc("ControlChildSizing_SetEnlargeHorizontal").Call(obj, uintptr(value))
}

func ControlChildSizing_GetEnlargeVertical(obj uintptr) TChildControlResizeStyle {
	ret, _, _ := getLazyProc("ControlChildSizing_GetEnlargeVertical").Call(obj)
	return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetEnlargeVertical(obj uintptr, value TChildControlResizeStyle) {
	getLazyProc("ControlChildSizing_SetEnlargeVertical").Call(obj, uintptr(value))
}

func ControlChildSizing_GetShrinkHorizontal(obj uintptr) TChildControlResizeStyle {
	ret, _, _ := getLazyProc("ControlChildSizing_GetShrinkHorizontal").Call(obj)
	return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetShrinkHorizontal(obj uintptr, value TChildControlResizeStyle) {
	getLazyProc("ControlChildSizing_SetShrinkHorizontal").Call(obj, uintptr(value))
}

func ControlChildSizing_GetShrinkVertical(obj uintptr) TChildControlResizeStyle {
	ret, _, _ := getLazyProc("ControlChildSizing_GetShrinkVertical").Call(obj)
	return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetShrinkVertical(obj uintptr, value TChildControlResizeStyle) {
	getLazyProc("ControlChildSizing_SetShrinkVertical").Call(obj, uintptr(value))
}

func ControlChildSizing_GetLayout(obj uintptr) TControlChildrenLayout {
	ret, _, _ := getLazyProc("ControlChildSizing_GetLayout").Call(obj)
	return TControlChildrenLayout(ret)
}

func ControlChildSizing_SetLayout(obj uintptr, value TControlChildrenLayout) {
	getLazyProc("ControlChildSizing_SetLayout").Call(obj, uintptr(value))
}

func ControlChildSizing_GetControlsPerLine(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ControlChildSizing_GetControlsPerLine").Call(obj)
	return int32(ret)
}

func ControlChildSizing_SetControlsPerLine(obj uintptr, value int32) {
	getLazyProc("ControlChildSizing_SetControlsPerLine").Call(obj, uintptr(value))
}

func ControlChildSizing_StaticClassType() TClass {
	r, _, _ := getLazyProc("ControlChildSizing_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TCheckGroup ---------------------------

func CheckGroup_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_Create").Call(obj)
	return ret
}

func CheckGroup_Free(obj uintptr) {
	getLazyProc("CheckGroup_Free").Call(obj)
}

func CheckGroup_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("CheckGroup_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func CheckGroup_Rows(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_Rows").Call(obj)
	return int32(ret)
}

func CheckGroup_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func CheckGroup_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func CheckGroup_DisableAlign(obj uintptr) {
	getLazyProc("CheckGroup_DisableAlign").Call(obj)
}

func CheckGroup_EnableAlign(obj uintptr) {
	getLazyProc("CheckGroup_EnableAlign").Call(obj)
}

func CheckGroup_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func CheckGroup_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("CheckGroup_InsertControl").Call(obj, AControl)
}

func CheckGroup_Invalidate(obj uintptr) {
	getLazyProc("CheckGroup_Invalidate").Call(obj)
}

func CheckGroup_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("CheckGroup_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func CheckGroup_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("CheckGroup_RemoveControl").Call(obj, AControl)
}

func CheckGroup_Realign(obj uintptr) {
	getLazyProc("CheckGroup_Realign").Call(obj)
}

func CheckGroup_Repaint(obj uintptr) {
	getLazyProc("CheckGroup_Repaint").Call(obj)
}

func CheckGroup_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("CheckGroup_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func CheckGroup_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("CheckGroup_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func CheckGroup_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("CheckGroup_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func CheckGroup_SetFocus(obj uintptr) {
	getLazyProc("CheckGroup_SetFocus").Call(obj)
}

func CheckGroup_Update(obj uintptr) {
	getLazyProc("CheckGroup_Update").Call(obj)
}

func CheckGroup_BringToFront(obj uintptr) {
	getLazyProc("CheckGroup_BringToFront").Call(obj)
}

func CheckGroup_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CheckGroup_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckGroup_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckGroup_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckGroup_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_Hide(obj uintptr) {
	getLazyProc("CheckGroup_Hide").Call(obj)
}

func CheckGroup_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("CheckGroup_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func CheckGroup_Refresh(obj uintptr) {
	getLazyProc("CheckGroup_Refresh").Call(obj)
}

func CheckGroup_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("CheckGroup_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckGroup_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckGroup_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckGroup_SendToBack(obj uintptr) {
	getLazyProc("CheckGroup_SendToBack").Call(obj)
}

func CheckGroup_Show(obj uintptr) {
	getLazyProc("CheckGroup_Show").Call(obj)
}

func CheckGroup_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("CheckGroup_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func CheckGroup_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetTextLen").Call(obj)
	return int32(ret)
}

func CheckGroup_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("CheckGroup_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func CheckGroup_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func CheckGroup_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckGroup_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func CheckGroup_Assign(obj uintptr, Source uintptr) {
	getLazyProc("CheckGroup_Assign").Call(obj, Source)
}

func CheckGroup_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("CheckGroup_ClassType").Call(obj)
	return TClass(ret)
}

func CheckGroup_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckGroup_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func CheckGroup_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_InstanceSize").Call(obj)
	return int32(ret)
}

func CheckGroup_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("CheckGroup_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func CheckGroup_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetHashCode").Call(obj)
	return int32(ret)
}

func CheckGroup_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckGroup_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func CheckGroup_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CheckGroup_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CheckGroup_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("CheckGroup_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func CheckGroup_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CheckGroup_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func CheckGroup_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("CheckGroup_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func CheckGroup_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("CheckGroup_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func CheckGroup_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("CheckGroup_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func CheckGroup_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("CheckGroup_AnchorClient").Call(obj, uintptr(ASpace))
}

func CheckGroup_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("CheckGroup_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func CheckGroup_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("CheckGroup_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func CheckGroup_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("CheckGroup_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func CheckGroup_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("CheckGroup_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func CheckGroup_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("CheckGroup_GetAlign").Call(obj)
	return TAlign(ret)
}

func CheckGroup_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("CheckGroup_SetAlign").Call(obj, uintptr(value))
}

func CheckGroup_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("CheckGroup_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func CheckGroup_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("CheckGroup_SetAnchors").Call(obj, uintptr(value))
}

func CheckGroup_GetAutoFill(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetAutoFill").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetAutoFill(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetAutoFill").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("CheckGroup_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func CheckGroup_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("CheckGroup_SetBiDiMode").Call(obj, uintptr(value))
}

func CheckGroup_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckGroup_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func CheckGroup_SetCaption(obj uintptr, value string) {
	getLazyProc("CheckGroup_SetCaption").Call(obj, GoStrToDStr(value))
}

func CheckGroup_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetClientHeight").Call(obj)
	return int32(ret)
}

func CheckGroup_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetClientHeight").Call(obj, uintptr(value))
}

func CheckGroup_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetClientWidth").Call(obj)
	return int32(ret)
}

func CheckGroup_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetClientWidth").Call(obj, uintptr(value))
}

func CheckGroup_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("CheckGroup_GetColor").Call(obj)
	return TColor(ret)
}

func CheckGroup_SetColor(obj uintptr, value TColor) {
	getLazyProc("CheckGroup_SetColor").Call(obj, uintptr(value))
}

func CheckGroup_GetColumnLayout(obj uintptr) TColumnLayout {
	ret, _, _ := getLazyProc("CheckGroup_GetColumnLayout").Call(obj)
	return TColumnLayout(ret)
}

func CheckGroup_SetColumnLayout(obj uintptr, value TColumnLayout) {
	getLazyProc("CheckGroup_SetColumnLayout").Call(obj, uintptr(value))
}

func CheckGroup_GetColumns(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetColumns").Call(obj)
	return int32(ret)
}

func CheckGroup_SetColumns(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetColumns").Call(obj, uintptr(value))
}

func CheckGroup_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetConstraints").Call(obj)
	return ret
}

func CheckGroup_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetConstraints").Call(obj, value)
}

func CheckGroup_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CheckGroup_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func CheckGroup_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("CheckGroup_SetDragCursor").Call(obj, uintptr(value))
}

func CheckGroup_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("CheckGroup_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func CheckGroup_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("CheckGroup_SetDragMode").Call(obj, uintptr(value))
}

func CheckGroup_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetEnabled(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetFont").Call(obj)
	return ret
}

func CheckGroup_SetFont(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetFont").Call(obj, value)
}

func CheckGroup_GetItems(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetItems").Call(obj)
	return ret
}

func CheckGroup_SetItems(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetItems").Call(obj, value)
}

func CheckGroup_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnDblClick(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnDblClick").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnItemClick(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnItemClick").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnKeyDown(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnKeyDown").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnKeyPress(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnKeyPress").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnKeyUp(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnKeyUp").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseWheel(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseWheel").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_SetOnResize(obj uintptr, fn interface{}) {
	getLazyProc("CheckGroup_SetOnResize").Call(obj, addEventToMap(obj, fn))
}

func CheckGroup_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetParentFont(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetParentColor(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetParentColor").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetParentColor(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetParentColor").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetPopupMenu").Call(obj)
	return ret
}

func CheckGroup_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetPopupMenu").Call(obj, value)
}

func CheckGroup_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetShowHint(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("CheckGroup_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func CheckGroup_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("CheckGroup_SetTabOrder").Call(obj, uintptr(value))
}

func CheckGroup_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetTabStop(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetVisible(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetVisible").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetParentBackground(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetParentBackground").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetParentBackground(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetParentBackground").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetDockClientCount").Call(obj)
	return int32(ret)
}

func CheckGroup_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetDockSite(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func CheckGroup_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetBrush").Call(obj)
	return ret
}

func CheckGroup_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetControlCount").Call(obj)
	return int32(ret)
}

func CheckGroup_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CheckGroup_GetHandle").Call(obj)
	return HWND(ret)
}

func CheckGroup_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("CheckGroup_GetParentWindow").Call(obj)
	return HWND(ret)
}

func CheckGroup_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("CheckGroup_SetParentWindow").Call(obj, uintptr(value))
}

func CheckGroup_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("CheckGroup_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func CheckGroup_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetAction").Call(obj)
	return ret
}

func CheckGroup_SetAction(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetAction").Call(obj, value)
}

func CheckGroup_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CheckGroup_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckGroup_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("CheckGroup_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func CheckGroup_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("CheckGroup_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckGroup_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("CheckGroup_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func CheckGroup_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("CheckGroup_GetControlState").Call(obj)
	return TControlState(ret)
}

func CheckGroup_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("CheckGroup_SetControlState").Call(obj, uintptr(value))
}

func CheckGroup_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("CheckGroup_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func CheckGroup_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("CheckGroup_SetControlStyle").Call(obj, uintptr(value))
}

func CheckGroup_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func CheckGroup_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetParent").Call(obj)
	return ret
}

func CheckGroup_SetParent(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetParent").Call(obj, value)
}

func CheckGroup_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetLeft").Call(obj)
	return int32(ret)
}

func CheckGroup_SetLeft(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetLeft").Call(obj, uintptr(value))
}

func CheckGroup_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetTop").Call(obj)
	return int32(ret)
}

func CheckGroup_SetTop(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetTop").Call(obj, uintptr(value))
}

func CheckGroup_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetWidth").Call(obj)
	return int32(ret)
}

func CheckGroup_SetWidth(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetWidth").Call(obj, uintptr(value))
}

func CheckGroup_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetHeight").Call(obj)
	return int32(ret)
}

func CheckGroup_SetHeight(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetHeight").Call(obj, uintptr(value))
}

func CheckGroup_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("CheckGroup_GetCursor").Call(obj)
	return TCursor(ret)
}

func CheckGroup_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("CheckGroup_SetCursor").Call(obj, uintptr(value))
}

func CheckGroup_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckGroup_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func CheckGroup_SetHint(obj uintptr, value string) {
	getLazyProc("CheckGroup_SetHint").Call(obj, GoStrToDStr(value))
}

func CheckGroup_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetComponentCount").Call(obj)
	return int32(ret)
}

func CheckGroup_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("CheckGroup_GetComponentIndex").Call(obj)
	return int32(ret)
}

func CheckGroup_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("CheckGroup_SetComponentIndex").Call(obj, uintptr(value))
}

func CheckGroup_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetOwner").Call(obj)
	return ret
}

func CheckGroup_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("CheckGroup_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func CheckGroup_SetName(obj uintptr, value string) {
	getLazyProc("CheckGroup_SetName").Call(obj, GoStrToDStr(value))
}

func CheckGroup_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("CheckGroup_GetTag").Call(obj)
	return int(ret)
}

func CheckGroup_SetTag(obj uintptr, value int) {
	getLazyProc("CheckGroup_SetTag").Call(obj, uintptr(value))
}

func CheckGroup_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetAnchorSideLeft").Call(obj)
	return ret
}

func CheckGroup_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetAnchorSideLeft").Call(obj, value)
}

func CheckGroup_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetAnchorSideTop").Call(obj)
	return ret
}

func CheckGroup_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetAnchorSideTop").Call(obj, value)
}

func CheckGroup_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetAnchorSideRight").Call(obj)
	return ret
}

func CheckGroup_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetAnchorSideRight").Call(obj, value)
}

func CheckGroup_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetAnchorSideBottom").Call(obj)
	return ret
}

func CheckGroup_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetAnchorSideBottom").Call(obj, value)
}

func CheckGroup_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetChildSizing").Call(obj)
	return ret
}

func CheckGroup_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetChildSizing").Call(obj, value)
}

func CheckGroup_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetBorderSpacing").Call(obj)
	return ret
}

func CheckGroup_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("CheckGroup_SetBorderSpacing").Call(obj, value)
}

func CheckGroup_GetChecked(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetChecked").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func CheckGroup_SetChecked(obj uintptr, Index int32, value bool) {
	getLazyProc("CheckGroup_SetChecked").Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckGroup_GetCheckEnabled(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("CheckGroup_GetCheckEnabled").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func CheckGroup_SetCheckEnabled(obj uintptr, Index int32, value bool) {
	getLazyProc("CheckGroup_SetCheckEnabled").Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckGroup_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func CheckGroup_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetControls").Call(obj, uintptr(Index))
	return ret
}

func CheckGroup_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func CheckGroup_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("CheckGroup_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func CheckGroup_StaticClassType() TClass {
	r, _, _ := getLazyProc("CheckGroup_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TToggleBox ---------------------------

func ToggleBox_Create(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_Create").Call(obj)
	return ret
}

func ToggleBox_Free(obj uintptr) {
	getLazyProc("ToggleBox_Free").Call(obj)
}

func ToggleBox_CanFocus(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_CanFocus").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_ContainsControl(obj uintptr, Control uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_ContainsControl").Call(obj, Control)
	return DBoolToGoBool(ret)
}

func ToggleBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_ControlAtPos").Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled), GoBoolToDBool(AllowWinControls), GoBoolToDBool(AllLevels))
	return ret
}

func ToggleBox_DisableAlign(obj uintptr) {
	getLazyProc("ToggleBox_DisableAlign").Call(obj)
}

func ToggleBox_EnableAlign(obj uintptr) {
	getLazyProc("ToggleBox_EnableAlign").Call(obj)
}

func ToggleBox_FindChildControl(obj uintptr, ControlName string) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_FindChildControl").Call(obj, GoStrToDStr(ControlName))
	return ret
}

func ToggleBox_FlipChildren(obj uintptr, AllLevels bool) {
	getLazyProc("ToggleBox_FlipChildren").Call(obj, GoBoolToDBool(AllLevels))
}

func ToggleBox_Focused(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_Focused").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_HandleAllocated(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_HandleAllocated").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_InsertControl(obj uintptr, AControl uintptr) {
	getLazyProc("ToggleBox_InsertControl").Call(obj, AControl)
}

func ToggleBox_Invalidate(obj uintptr) {
	getLazyProc("ToggleBox_Invalidate").Call(obj)
}

func ToggleBox_PaintTo(obj uintptr, DC HDC, X int32, Y int32) {
	getLazyProc("ToggleBox_PaintTo").Call(obj, uintptr(DC), uintptr(X), uintptr(Y))
}

func ToggleBox_RemoveControl(obj uintptr, AControl uintptr) {
	getLazyProc("ToggleBox_RemoveControl").Call(obj, AControl)
}

func ToggleBox_Realign(obj uintptr) {
	getLazyProc("ToggleBox_Realign").Call(obj)
}

func ToggleBox_Repaint(obj uintptr) {
	getLazyProc("ToggleBox_Repaint").Call(obj)
}

func ToggleBox_ScaleBy(obj uintptr, M int32, D int32) {
	getLazyProc("ToggleBox_ScaleBy").Call(obj, uintptr(M), uintptr(D))
}

func ToggleBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32) {
	getLazyProc("ToggleBox_ScrollBy").Call(obj, uintptr(DeltaX), uintptr(DeltaY))
}

func ToggleBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32) {
	getLazyProc("ToggleBox_SetBounds").Call(obj, uintptr(ALeft), uintptr(ATop), uintptr(AWidth), uintptr(AHeight))
}

func ToggleBox_SetFocus(obj uintptr) {
	getLazyProc("ToggleBox_SetFocus").Call(obj)
}

func ToggleBox_Update(obj uintptr) {
	getLazyProc("ToggleBox_Update").Call(obj)
}

func ToggleBox_BringToFront(obj uintptr) {
	getLazyProc("ToggleBox_BringToFront").Call(obj)
}

func ToggleBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ToggleBox_ClientToScreen").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToggleBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToggleBox_ClientToParent").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToggleBox_Dragging(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_Dragging").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_HasParent(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_HasParent").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_Hide(obj uintptr) {
	getLazyProc("ToggleBox_Hide").Call(obj)
}

func ToggleBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
	ret, _, _ := getLazyProc("ToggleBox_Perform").Call(obj, uintptr(Msg), WParam, uintptr(LParam))
	return int(ret)
}

func ToggleBox_Refresh(obj uintptr) {
	getLazyProc("ToggleBox_Refresh").Call(obj)
}

func ToggleBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
	var ret TPoint
	getLazyProc("ToggleBox_ScreenToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToggleBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToggleBox_ParentToClient").Call(obj, uintptr(unsafe.Pointer(&Point)), AParent, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToggleBox_SendToBack(obj uintptr) {
	getLazyProc("ToggleBox_SendToBack").Call(obj)
}

func ToggleBox_Show(obj uintptr) {
	getLazyProc("ToggleBox_Show").Call(obj)
}

func ToggleBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
	if Buffer == nil || BufSize == 0 {
		return 0
	}
	strPtr := getBuff(BufSize)
	ret, _, _ := getLazyProc("ToggleBox_GetTextBuf").Call(obj, getBuffPtr(strPtr), uintptr(BufSize))
	getTextBuf(strPtr, Buffer, int(ret))
	return int32(ret)
}

func ToggleBox_GetTextLen(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetTextLen").Call(obj)
	return int32(ret)
}

func ToggleBox_SetTextBuf(obj uintptr, Buffer string) {
	getLazyProc("ToggleBox_SetTextBuf").Call(obj, GoStrToDStr(Buffer))
}

func ToggleBox_FindComponent(obj uintptr, AName string) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_FindComponent").Call(obj, GoStrToDStr(AName))
	return ret
}

func ToggleBox_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("ToggleBox_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func ToggleBox_Assign(obj uintptr, Source uintptr) {
	getLazyProc("ToggleBox_Assign").Call(obj, Source)
}

func ToggleBox_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("ToggleBox_ClassType").Call(obj)
	return TClass(ret)
}

func ToggleBox_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("ToggleBox_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func ToggleBox_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_InstanceSize").Call(obj)
	return int32(ret)
}

func ToggleBox_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("ToggleBox_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func ToggleBox_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetHashCode").Call(obj)
	return int32(ret)
}

func ToggleBox_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("ToggleBox_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func ToggleBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ToggleBox_AnchorToNeighbour").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ToggleBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr) {
	getLazyProc("ToggleBox_AnchorParallel").Call(obj, uintptr(ASide), uintptr(ASpace), ASibling)
}

func ToggleBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ToggleBox_AnchorHorizontalCenterTo").Call(obj, ASibling)
}

func ToggleBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr) {
	getLazyProc("ToggleBox_AnchorVerticalCenterTo").Call(obj, ASibling)
}

func ToggleBox_AnchorSame(obj uintptr, ASide TAnchorKind, ASibling uintptr) {
	getLazyProc("ToggleBox_AnchorSame").Call(obj, uintptr(ASide), ASibling)
}

func ToggleBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32) {
	getLazyProc("ToggleBox_AnchorAsAlign").Call(obj, uintptr(ATheAlign), uintptr(ASpace))
}

func ToggleBox_AnchorClient(obj uintptr, ASpace int32) {
	getLazyProc("ToggleBox_AnchorClient").Call(obj, uintptr(ASpace))
}

func ToggleBox_ScaleDesignToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_ScaleDesignToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_ScaleFormToDesign(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_ScaleFormToDesign").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_Scale96ToForm(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_Scale96ToForm").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_ScaleFormTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_ScaleFormTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_Scale96ToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_Scale96ToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_ScaleFontTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_ScaleFontTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_ScaleScreenToFont(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_ScaleScreenToFont").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_ScaleFontToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_ScaleFontToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_Scale96ToScreen(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_Scale96ToScreen").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_ScaleScreenTo96(obj uintptr, ASize int32) int32 {
	ret, _, _ := getLazyProc("ToggleBox_ScaleScreenTo96").Call(obj, uintptr(ASize))
	return int32(ret)
}

func ToggleBox_AutoAdjustLayout(obj uintptr, AMode TLayoutAdjustmentPolicy, AFromPPI int32, AToPPI int32, AOldFormWidth int32, ANewFormWidth int32) {
	getLazyProc("ToggleBox_AutoAdjustLayout").Call(obj, uintptr(AMode), uintptr(AFromPPI), uintptr(AToPPI), uintptr(AOldFormWidth), uintptr(ANewFormWidth))
}

func ToggleBox_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("ToggleBox_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func ToggleBox_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("ToggleBox_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func ToggleBox_GetAllowGrayed(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetAllowGrayed").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetAllowGrayed(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetAllowGrayed").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetAlign(obj uintptr) TAlign {
	ret, _, _ := getLazyProc("ToggleBox_GetAlign").Call(obj)
	return TAlign(ret)
}

func ToggleBox_SetAlign(obj uintptr, value TAlign) {
	getLazyProc("ToggleBox_SetAlign").Call(obj, uintptr(value))
}

func ToggleBox_GetAnchors(obj uintptr) TAnchors {
	ret, _, _ := getLazyProc("ToggleBox_GetAnchors").Call(obj)
	return TAnchors(ret)
}

func ToggleBox_SetAnchors(obj uintptr, value TAnchors) {
	getLazyProc("ToggleBox_SetAnchors").Call(obj, uintptr(value))
}

func ToggleBox_GetAutoSize(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetAutoSize").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetAutoSize(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetAutoSize").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("ToggleBox_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func ToggleBox_SetCaption(obj uintptr, value string) {
	getLazyProc("ToggleBox_SetCaption").Call(obj, GoStrToDStr(value))
}

func ToggleBox_GetChecked(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetChecked").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetChecked(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetChecked").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("ToggleBox_GetColor").Call(obj)
	return TColor(ret)
}

func ToggleBox_SetColor(obj uintptr, value TColor) {
	getLazyProc("ToggleBox_SetColor").Call(obj, uintptr(value))
}

func ToggleBox_GetConstraints(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetConstraints").Call(obj)
	return ret
}

func ToggleBox_SetConstraints(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetConstraints").Call(obj, value)
}

func ToggleBox_GetDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetDragCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ToggleBox_GetDragCursor").Call(obj)
	return TCursor(ret)
}

func ToggleBox_SetDragCursor(obj uintptr, value TCursor) {
	getLazyProc("ToggleBox_SetDragCursor").Call(obj, uintptr(value))
}

func ToggleBox_GetDragKind(obj uintptr) TDragKind {
	ret, _, _ := getLazyProc("ToggleBox_GetDragKind").Call(obj)
	return TDragKind(ret)
}

func ToggleBox_SetDragKind(obj uintptr, value TDragKind) {
	getLazyProc("ToggleBox_SetDragKind").Call(obj, uintptr(value))
}

func ToggleBox_GetDragMode(obj uintptr) TDragMode {
	ret, _, _ := getLazyProc("ToggleBox_GetDragMode").Call(obj)
	return TDragMode(ret)
}

func ToggleBox_SetDragMode(obj uintptr, value TDragMode) {
	getLazyProc("ToggleBox_SetDragMode").Call(obj, uintptr(value))
}

func ToggleBox_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetEnabled(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetEnabled").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetFont").Call(obj)
	return ret
}

func ToggleBox_SetFont(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetFont").Call(obj, value)
}

func ToggleBox_GetHint(obj uintptr) string {
	ret, _, _ := getLazyProc("ToggleBox_GetHint").Call(obj)
	return DStrToGoStr(ret)
}

func ToggleBox_SetHint(obj uintptr, value string) {
	getLazyProc("ToggleBox_SetHint").Call(obj, GoStrToDStr(value))
}

func ToggleBox_SetOnChange(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnChange").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnClick(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnClick").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnDragDrop(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnDragDrop").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnDragOver(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnDragOver").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnEndDrag(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnEndDrag").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnEnter(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnEnter").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnExit(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnExit").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseDown(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseDown").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseEnter").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseLeave").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseMove(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseMove").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseUp(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseUp").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseWheel(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseWheel").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseWheelDown").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
	getLazyProc("ToggleBox_SetOnMouseWheelUp").Call(obj, addEventToMap(obj, fn))
}

func ToggleBox_GetParentDoubleBuffered(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetParentDoubleBuffered").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetParentDoubleBuffered(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetParentDoubleBuffered").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetParentFont(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetParentFont").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetParentFont(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetParentFont").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetParentShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetParentShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetParentShowHint(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetParentShowHint").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetPopupMenu(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetPopupMenu").Call(obj)
	return ret
}

func ToggleBox_SetPopupMenu(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetPopupMenu").Call(obj, value)
}

func ToggleBox_GetShowHint(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetShowHint").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetShowHint(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetShowHint").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetState(obj uintptr) TCheckBoxState {
	ret, _, _ := getLazyProc("ToggleBox_GetState").Call(obj)
	return TCheckBoxState(ret)
}

func ToggleBox_SetState(obj uintptr, value TCheckBoxState) {
	getLazyProc("ToggleBox_SetState").Call(obj, uintptr(value))
}

func ToggleBox_GetTabOrder(obj uintptr) TTabOrder {
	ret, _, _ := getLazyProc("ToggleBox_GetTabOrder").Call(obj)
	return TTabOrder(ret)
}

func ToggleBox_SetTabOrder(obj uintptr, value TTabOrder) {
	getLazyProc("ToggleBox_SetTabOrder").Call(obj, uintptr(value))
}

func ToggleBox_GetTabStop(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetTabStop").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetTabStop(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetTabStop").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetVisible(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetVisible").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetDockClientCount").Call(obj)
	return int32(ret)
}

func ToggleBox_GetDockSite(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetDockSite").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetDockSite(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetDockSite").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetMouseInClient(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetMouseInClient").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_GetVisibleDockClientCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetVisibleDockClientCount").Call(obj)
	return int32(ret)
}

func ToggleBox_GetBrush(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetBrush").Call(obj)
	return ret
}

func ToggleBox_GetControlCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetControlCount").Call(obj)
	return int32(ret)
}

func ToggleBox_GetHandle(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ToggleBox_GetHandle").Call(obj)
	return HWND(ret)
}

func ToggleBox_GetParentWindow(obj uintptr) HWND {
	ret, _, _ := getLazyProc("ToggleBox_GetParentWindow").Call(obj)
	return HWND(ret)
}

func ToggleBox_SetParentWindow(obj uintptr, value HWND) {
	getLazyProc("ToggleBox_SetParentWindow").Call(obj, uintptr(value))
}

func ToggleBox_GetShowing(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetShowing").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_GetUseDockManager(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetUseDockManager").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_SetUseDockManager(obj uintptr, value bool) {
	getLazyProc("ToggleBox_SetUseDockManager").Call(obj, GoBoolToDBool(value))
}

func ToggleBox_GetAction(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetAction").Call(obj)
	return ret
}

func ToggleBox_SetAction(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetAction").Call(obj, value)
}

func ToggleBox_GetBiDiMode(obj uintptr) TBiDiMode {
	ret, _, _ := getLazyProc("ToggleBox_GetBiDiMode").Call(obj)
	return TBiDiMode(ret)
}

func ToggleBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
	getLazyProc("ToggleBox_SetBiDiMode").Call(obj, uintptr(value))
}

func ToggleBox_GetBoundsRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ToggleBox_GetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToggleBox_SetBoundsRect(obj uintptr, value TRect) {
	getLazyProc("ToggleBox_SetBoundsRect").Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ToggleBox_GetClientHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetClientHeight").Call(obj)
	return int32(ret)
}

func ToggleBox_SetClientHeight(obj uintptr, value int32) {
	getLazyProc("ToggleBox_SetClientHeight").Call(obj, uintptr(value))
}

func ToggleBox_GetClientOrigin(obj uintptr) TPoint {
	var ret TPoint
	getLazyProc("ToggleBox_GetClientOrigin").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToggleBox_GetClientRect(obj uintptr) TRect {
	var ret TRect
	getLazyProc("ToggleBox_GetClientRect").Call(obj, uintptr(unsafe.Pointer(&ret)))
	return ret
}

func ToggleBox_GetClientWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetClientWidth").Call(obj)
	return int32(ret)
}

func ToggleBox_SetClientWidth(obj uintptr, value int32) {
	getLazyProc("ToggleBox_SetClientWidth").Call(obj, uintptr(value))
}

func ToggleBox_GetControlState(obj uintptr) TControlState {
	ret, _, _ := getLazyProc("ToggleBox_GetControlState").Call(obj)
	return TControlState(ret)
}

func ToggleBox_SetControlState(obj uintptr, value TControlState) {
	getLazyProc("ToggleBox_SetControlState").Call(obj, uintptr(value))
}

func ToggleBox_GetControlStyle(obj uintptr) TControlStyle {
	ret, _, _ := getLazyProc("ToggleBox_GetControlStyle").Call(obj)
	return TControlStyle(ret)
}

func ToggleBox_SetControlStyle(obj uintptr, value TControlStyle) {
	getLazyProc("ToggleBox_SetControlStyle").Call(obj, uintptr(value))
}

func ToggleBox_GetFloating(obj uintptr) bool {
	ret, _, _ := getLazyProc("ToggleBox_GetFloating").Call(obj)
	return DBoolToGoBool(ret)
}

func ToggleBox_GetParent(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetParent").Call(obj)
	return ret
}

func ToggleBox_SetParent(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetParent").Call(obj, value)
}

func ToggleBox_GetLeft(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetLeft").Call(obj)
	return int32(ret)
}

func ToggleBox_SetLeft(obj uintptr, value int32) {
	getLazyProc("ToggleBox_SetLeft").Call(obj, uintptr(value))
}

func ToggleBox_GetTop(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetTop").Call(obj)
	return int32(ret)
}

func ToggleBox_SetTop(obj uintptr, value int32) {
	getLazyProc("ToggleBox_SetTop").Call(obj, uintptr(value))
}

func ToggleBox_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetWidth").Call(obj)
	return int32(ret)
}

func ToggleBox_SetWidth(obj uintptr, value int32) {
	getLazyProc("ToggleBox_SetWidth").Call(obj, uintptr(value))
}

func ToggleBox_GetHeight(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetHeight").Call(obj)
	return int32(ret)
}

func ToggleBox_SetHeight(obj uintptr, value int32) {
	getLazyProc("ToggleBox_SetHeight").Call(obj, uintptr(value))
}

func ToggleBox_GetCursor(obj uintptr) TCursor {
	ret, _, _ := getLazyProc("ToggleBox_GetCursor").Call(obj)
	return TCursor(ret)
}

func ToggleBox_SetCursor(obj uintptr, value TCursor) {
	getLazyProc("ToggleBox_SetCursor").Call(obj, uintptr(value))
}

func ToggleBox_GetComponentCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetComponentCount").Call(obj)
	return int32(ret)
}

func ToggleBox_GetComponentIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("ToggleBox_GetComponentIndex").Call(obj)
	return int32(ret)
}

func ToggleBox_SetComponentIndex(obj uintptr, value int32) {
	getLazyProc("ToggleBox_SetComponentIndex").Call(obj, uintptr(value))
}

func ToggleBox_GetOwner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetOwner").Call(obj)
	return ret
}

func ToggleBox_GetName(obj uintptr) string {
	ret, _, _ := getLazyProc("ToggleBox_GetName").Call(obj)
	return DStrToGoStr(ret)
}

func ToggleBox_SetName(obj uintptr, value string) {
	getLazyProc("ToggleBox_SetName").Call(obj, GoStrToDStr(value))
}

func ToggleBox_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("ToggleBox_GetTag").Call(obj)
	return int(ret)
}

func ToggleBox_SetTag(obj uintptr, value int) {
	getLazyProc("ToggleBox_SetTag").Call(obj, uintptr(value))
}

func ToggleBox_GetAnchorSideLeft(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetAnchorSideLeft").Call(obj)
	return ret
}

func ToggleBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetAnchorSideLeft").Call(obj, value)
}

func ToggleBox_GetAnchorSideTop(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetAnchorSideTop").Call(obj)
	return ret
}

func ToggleBox_SetAnchorSideTop(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetAnchorSideTop").Call(obj, value)
}

func ToggleBox_GetAnchorSideRight(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetAnchorSideRight").Call(obj)
	return ret
}

func ToggleBox_SetAnchorSideRight(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetAnchorSideRight").Call(obj, value)
}

func ToggleBox_GetAnchorSideBottom(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetAnchorSideBottom").Call(obj)
	return ret
}

func ToggleBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetAnchorSideBottom").Call(obj, value)
}

func ToggleBox_GetChildSizing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetChildSizing").Call(obj)
	return ret
}

func ToggleBox_SetChildSizing(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetChildSizing").Call(obj, value)
}

func ToggleBox_GetBorderSpacing(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetBorderSpacing").Call(obj)
	return ret
}

func ToggleBox_SetBorderSpacing(obj uintptr, value uintptr) {
	getLazyProc("ToggleBox_SetBorderSpacing").Call(obj, value)
}

func ToggleBox_GetDockClients(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetDockClients").Call(obj, uintptr(Index))
	return ret
}

func ToggleBox_GetControls(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetControls").Call(obj, uintptr(Index))
	return ret
}

func ToggleBox_GetComponents(obj uintptr, AIndex int32) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetComponents").Call(obj, uintptr(AIndex))
	return ret
}

func ToggleBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
	ret, _, _ := getLazyProc("ToggleBox_GetAnchorSide").Call(obj, uintptr(AKind))
	return ret
}

func ToggleBox_StaticClassType() TClass {
	r, _, _ := getLazyProc("ToggleBox_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TGridColumnTitle ---------------------------

func GridColumnTitle_Assign(obj uintptr, Source uintptr) {
	getLazyProc("GridColumnTitle_Assign").Call(obj, Source)
}

func GridColumnTitle_FillTitleDefaultFont(obj uintptr) {
	getLazyProc("GridColumnTitle_FillTitleDefaultFont").Call(obj)
}

func GridColumnTitle_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("GridColumnTitle_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func GridColumnTitle_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("GridColumnTitle_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func GridColumnTitle_IsDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumnTitle_IsDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumnTitle_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumnTitle_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumnTitle_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("GridColumnTitle_ClassType").Call(obj)
	return TClass(ret)
}

func GridColumnTitle_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumnTitle_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumnTitle_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumnTitle_InstanceSize").Call(obj)
	return int32(ret)
}

func GridColumnTitle_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("GridColumnTitle_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func GridColumnTitle_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumnTitle_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func GridColumnTitle_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumnTitle_GetHashCode").Call(obj)
	return int32(ret)
}

func GridColumnTitle_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumnTitle_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumnTitle_GetColumn(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumnTitle_GetColumn").Call(obj)
	return ret
}

func GridColumnTitle_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("GridColumnTitle_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func GridColumnTitle_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("GridColumnTitle_SetAlignment").Call(obj, uintptr(value))
}

func GridColumnTitle_GetCaption(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumnTitle_GetCaption").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumnTitle_SetCaption(obj uintptr, value string) {
	getLazyProc("GridColumnTitle_SetCaption").Call(obj, GoStrToDStr(value))
}

func GridColumnTitle_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("GridColumnTitle_GetColor").Call(obj)
	return TColor(ret)
}

func GridColumnTitle_SetColor(obj uintptr, value TColor) {
	getLazyProc("GridColumnTitle_SetColor").Call(obj, uintptr(value))
}

func GridColumnTitle_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumnTitle_GetFont").Call(obj)
	return ret
}

func GridColumnTitle_SetFont(obj uintptr, value uintptr) {
	getLazyProc("GridColumnTitle_SetFont").Call(obj, value)
}

func GridColumnTitle_GetImageIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumnTitle_GetImageIndex").Call(obj)
	return int32(ret)
}

func GridColumnTitle_SetImageIndex(obj uintptr, value int32) {
	getLazyProc("GridColumnTitle_SetImageIndex").Call(obj, uintptr(value))
}

func GridColumnTitle_GetImageLayout(obj uintptr) TButtonLayout {
	ret, _, _ := getLazyProc("GridColumnTitle_GetImageLayout").Call(obj)
	return TButtonLayout(ret)
}

func GridColumnTitle_SetImageLayout(obj uintptr, value TButtonLayout) {
	getLazyProc("GridColumnTitle_SetImageLayout").Call(obj, uintptr(value))
}

func GridColumnTitle_GetLayout(obj uintptr) TTextLayout {
	ret, _, _ := getLazyProc("GridColumnTitle_GetLayout").Call(obj)
	return TTextLayout(ret)
}

func GridColumnTitle_SetLayout(obj uintptr, value TTextLayout) {
	getLazyProc("GridColumnTitle_SetLayout").Call(obj, uintptr(value))
}

func GridColumnTitle_GetMultiLine(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumnTitle_GetMultiLine").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumnTitle_SetMultiLine(obj uintptr, value bool) {
	getLazyProc("GridColumnTitle_SetMultiLine").Call(obj, GoBoolToDBool(value))
}

func GridColumnTitle_GetPrefixOption(obj uintptr) TPrefixOption {
	ret, _, _ := getLazyProc("GridColumnTitle_GetPrefixOption").Call(obj)
	return TPrefixOption(ret)
}

func GridColumnTitle_SetPrefixOption(obj uintptr, value TPrefixOption) {
	getLazyProc("GridColumnTitle_SetPrefixOption").Call(obj, uintptr(value))
}

func GridColumnTitle_StaticClassType() TClass {
	r, _, _ := getLazyProc("GridColumnTitle_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TGridColumn ---------------------------

func GridColumn_Assign(obj uintptr, Source uintptr) {
	getLazyProc("GridColumn_Assign").Call(obj, Source)
}

func GridColumn_FixDesignFontsPPI(obj uintptr, ADesignTimePPI int32) {
	getLazyProc("GridColumn_FixDesignFontsPPI").Call(obj, uintptr(ADesignTimePPI))
}

func GridColumn_ScaleFontsPPI(obj uintptr, AToPPI int32, AProportion float64) {
	getLazyProc("GridColumn_ScaleFontsPPI").Call(obj, uintptr(AToPPI), uintptr(unsafe.Pointer(&AProportion)))
}

func GridColumn_IsDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumn_IsDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumn_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumn_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumn_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("GridColumn_ClassType").Call(obj)
	return TClass(ret)
}

func GridColumn_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumn_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumn_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_InstanceSize").Call(obj)
	return int32(ret)
}

func GridColumn_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("GridColumn_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func GridColumn_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumn_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func GridColumn_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetHashCode").Call(obj)
	return int32(ret)
}

func GridColumn_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumn_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumn_GetGrid(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumn_GetGrid").Call(obj)
	return ret
}

func GridColumn_GetDefaultWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetDefaultWidth").Call(obj)
	return int32(ret)
}

func GridColumn_GetStoredWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetStoredWidth").Call(obj)
	return int32(ret)
}

func GridColumn_GetWidthChanged(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumn_GetWidthChanged").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumn_GetAlignment(obj uintptr) TAlignment {
	ret, _, _ := getLazyProc("GridColumn_GetAlignment").Call(obj)
	return TAlignment(ret)
}

func GridColumn_SetAlignment(obj uintptr, value TAlignment) {
	getLazyProc("GridColumn_SetAlignment").Call(obj, uintptr(value))
}

func GridColumn_GetButtonStyle(obj uintptr) TColumnButtonStyle {
	ret, _, _ := getLazyProc("GridColumn_GetButtonStyle").Call(obj)
	return TColumnButtonStyle(ret)
}

func GridColumn_SetButtonStyle(obj uintptr, value TColumnButtonStyle) {
	getLazyProc("GridColumn_SetButtonStyle").Call(obj, uintptr(value))
}

func GridColumn_GetColor(obj uintptr) TColor {
	ret, _, _ := getLazyProc("GridColumn_GetColor").Call(obj)
	return TColor(ret)
}

func GridColumn_SetColor(obj uintptr, value TColor) {
	getLazyProc("GridColumn_SetColor").Call(obj, uintptr(value))
}

func GridColumn_GetDropDownRows(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetDropDownRows").Call(obj)
	return int32(ret)
}

func GridColumn_SetDropDownRows(obj uintptr, value int32) {
	getLazyProc("GridColumn_SetDropDownRows").Call(obj, uintptr(value))
}

func GridColumn_GetExpanded(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumn_GetExpanded").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumn_SetExpanded(obj uintptr, value bool) {
	getLazyProc("GridColumn_SetExpanded").Call(obj, GoBoolToDBool(value))
}

func GridColumn_GetFont(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumn_GetFont").Call(obj)
	return ret
}

func GridColumn_SetFont(obj uintptr, value uintptr) {
	getLazyProc("GridColumn_SetFont").Call(obj, value)
}

func GridColumn_GetLayout(obj uintptr) TTextLayout {
	ret, _, _ := getLazyProc("GridColumn_GetLayout").Call(obj)
	return TTextLayout(ret)
}

func GridColumn_SetLayout(obj uintptr, value TTextLayout) {
	getLazyProc("GridColumn_SetLayout").Call(obj, uintptr(value))
}

func GridColumn_GetMinSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetMinSize").Call(obj)
	return int32(ret)
}

func GridColumn_SetMinSize(obj uintptr, value int32) {
	getLazyProc("GridColumn_SetMinSize").Call(obj, uintptr(value))
}

func GridColumn_GetMaxSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetMaxSize").Call(obj)
	return int32(ret)
}

func GridColumn_SetMaxSize(obj uintptr, value int32) {
	getLazyProc("GridColumn_SetMaxSize").Call(obj, uintptr(value))
}

func GridColumn_GetPickList(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumn_GetPickList").Call(obj)
	return ret
}

func GridColumn_SetPickList(obj uintptr, value uintptr) {
	getLazyProc("GridColumn_SetPickList").Call(obj, value)
}

func GridColumn_GetReadOnly(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumn_GetReadOnly").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumn_SetReadOnly(obj uintptr, value bool) {
	getLazyProc("GridColumn_SetReadOnly").Call(obj, GoBoolToDBool(value))
}

func GridColumn_GetSizePriority(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetSizePriority").Call(obj)
	return int32(ret)
}

func GridColumn_SetSizePriority(obj uintptr, value int32) {
	getLazyProc("GridColumn_SetSizePriority").Call(obj, uintptr(value))
}

func GridColumn_GetTag(obj uintptr) int {
	ret, _, _ := getLazyProc("GridColumn_GetTag").Call(obj)
	return int(ret)
}

func GridColumn_SetTag(obj uintptr, value int) {
	getLazyProc("GridColumn_SetTag").Call(obj, uintptr(value))
}

func GridColumn_GetTitle(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumn_GetTitle").Call(obj)
	return ret
}

func GridColumn_SetTitle(obj uintptr, value uintptr) {
	getLazyProc("GridColumn_SetTitle").Call(obj, value)
}

func GridColumn_GetWidth(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetWidth").Call(obj)
	return int32(ret)
}

func GridColumn_SetWidth(obj uintptr, value int32) {
	getLazyProc("GridColumn_SetWidth").Call(obj, uintptr(value))
}

func GridColumn_GetVisible(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumn_GetVisible").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumn_SetVisible(obj uintptr, value bool) {
	getLazyProc("GridColumn_SetVisible").Call(obj, GoBoolToDBool(value))
}

func GridColumn_GetValueChecked(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumn_GetValueChecked").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumn_SetValueChecked(obj uintptr, value string) {
	getLazyProc("GridColumn_SetValueChecked").Call(obj, GoStrToDStr(value))
}

func GridColumn_GetValueUnchecked(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumn_GetValueUnchecked").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumn_SetValueUnchecked(obj uintptr, value string) {
	getLazyProc("GridColumn_SetValueUnchecked").Call(obj, GoStrToDStr(value))
}

func GridColumn_GetCollection(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumn_GetCollection").Call(obj)
	return ret
}

func GridColumn_SetCollection(obj uintptr, value uintptr) {
	getLazyProc("GridColumn_SetCollection").Call(obj, value)
}

func GridColumn_GetIndex(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumn_GetIndex").Call(obj)
	return int32(ret)
}

func GridColumn_SetIndex(obj uintptr, value int32) {
	getLazyProc("GridColumn_SetIndex").Call(obj, uintptr(value))
}

func GridColumn_GetDisplayName(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumn_GetDisplayName").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumn_SetDisplayName(obj uintptr, value string) {
	getLazyProc("GridColumn_SetDisplayName").Call(obj, GoStrToDStr(value))
}

func GridColumn_StaticClassType() TClass {
	r, _, _ := getLazyProc("GridColumn_StaticClassType").Call()
	return TClass(r)
}

//--------------------------- TGridColumns ---------------------------

func GridColumns_Add(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumns_Add").Call(obj)
	return ret
}

func GridColumns_Clear(obj uintptr) {
	getLazyProc("GridColumns_Clear").Call(obj)
}

func GridColumns_RealIndex(obj uintptr, Index int32) int32 {
	ret, _, _ := getLazyProc("GridColumns_RealIndex").Call(obj, uintptr(Index))
	return int32(ret)
}

func GridColumns_IndexOf(obj uintptr, Column uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumns_IndexOf").Call(obj, Column)
	return int32(ret)
}

func GridColumns_IsDefault(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumns_IsDefault").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumns_HasIndex(obj uintptr, Index int32) bool {
	ret, _, _ := getLazyProc("GridColumns_HasIndex").Call(obj, uintptr(Index))
	return DBoolToGoBool(ret)
}

func GridColumns_Owner(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumns_Owner").Call(obj)
	return ret
}

func GridColumns_Assign(obj uintptr, Source uintptr) {
	getLazyProc("GridColumns_Assign").Call(obj, Source)
}

func GridColumns_BeginUpdate(obj uintptr) {
	getLazyProc("GridColumns_BeginUpdate").Call(obj)
}

func GridColumns_Delete(obj uintptr, Index int32) {
	getLazyProc("GridColumns_Delete").Call(obj, uintptr(Index))
}

func GridColumns_EndUpdate(obj uintptr) {
	getLazyProc("GridColumns_EndUpdate").Call(obj)
}

func GridColumns_FindItemID(obj uintptr, ID int32) uintptr {
	ret, _, _ := getLazyProc("GridColumns_FindItemID").Call(obj, uintptr(ID))
	return ret
}

func GridColumns_GetNamePath(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumns_GetNamePath").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumns_Insert(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("GridColumns_Insert").Call(obj, uintptr(Index))
	return ret
}

func GridColumns_ClassType(obj uintptr) TClass {
	ret, _, _ := getLazyProc("GridColumns_ClassType").Call(obj)
	return TClass(ret)
}

func GridColumns_ClassName(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumns_ClassName").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumns_InstanceSize(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumns_InstanceSize").Call(obj)
	return int32(ret)
}

func GridColumns_InheritsFrom(obj uintptr, AClass TClass) bool {
	ret, _, _ := getLazyProc("GridColumns_InheritsFrom").Call(obj, uintptr(AClass))
	return DBoolToGoBool(ret)
}

func GridColumns_Equals(obj uintptr, Obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumns_Equals").Call(obj, Obj)
	return DBoolToGoBool(ret)
}

func GridColumns_GetHashCode(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumns_GetHashCode").Call(obj)
	return int32(ret)
}

func GridColumns_ToString(obj uintptr) string {
	ret, _, _ := getLazyProc("GridColumns_ToString").Call(obj)
	return DStrToGoStr(ret)
}

func GridColumns_GetGrid(obj uintptr) uintptr {
	ret, _, _ := getLazyProc("GridColumns_GetGrid").Call(obj)
	return ret
}

func GridColumns_GetVisibleCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumns_GetVisibleCount").Call(obj)
	return int32(ret)
}

func GridColumns_GetEnabled(obj uintptr) bool {
	ret, _, _ := getLazyProc("GridColumns_GetEnabled").Call(obj)
	return DBoolToGoBool(ret)
}

func GridColumns_GetCount(obj uintptr) int32 {
	ret, _, _ := getLazyProc("GridColumns_GetCount").Call(obj)
	return int32(ret)
}

func GridColumns_GetItems(obj uintptr, Index int32) uintptr {
	ret, _, _ := getLazyProc("GridColumns_GetItems").Call(obj, uintptr(Index))
	return ret
}

func GridColumns_SetItems(obj uintptr, Index int32, value uintptr) {
	getLazyProc("GridColumns_SetItems").Call(obj, uintptr(Index), value)
}

func GridColumns_StaticClassType() TClass {
	r, _, _ := getLazyProc("GridColumns_StaticClassType").Call()
	return TClass(r)
}
